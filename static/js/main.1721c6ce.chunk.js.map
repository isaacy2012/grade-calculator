{"version":3,"sources":["theme/Theme.ts","ui/Instruction.ts","ui/Title.tsx","ui/SpacerDiv.ts","ui/Flex.ts","ui/HeaderRow.tsx","ui/Table.tsx","model/Regex.ts","constant/Constants.ts","model/Result.tsx","model/Score.ts","model/Assignment.ts","ui/StyledInput.ts","ui/IconButton.ts","ui/ContentRow.tsx","ui/Container.tsx","ui/Card.ts","ui/Tabbed.tsx","ui/Tab.tsx","model/PercentageResult.tsx","ui/helpers/Helpers.tsx","ui/output/PercentageTab.tsx","model/grade/Grade.ts","model/grade/resolvers/VuwGrades.ts","model/grade/resolvers/UoaGrades.ts","model/grade/resolvers/UcGrades.ts","model/grade/resolvers/OtagoGrades.ts","model/grade/resolvers/WaikatoGrades.ts","model/grade/resolvers/MasseyGrades.ts","model/grade/resolvers/AutGrades.ts","model/grade/GradeResolvers.ts","model/GradeResult.tsx","Constants.ts","ui/output/GradeTab.tsx","util/Deserializer.ts","ui/ShareSheet.tsx","ui/MainScreen.tsx","ui/App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","color","text","headerUnderline","contentUnderline","highlight","primary","primary75","primary50","primary25","utilityText","button","buttonPressed","outline","outlineNone","outlineAccept","outlineReject","cardBackground","cardActiveBackground","cardInactiveBackground","Instruction","styled","p","TitleContainer","div","StyledTitle","Block","Title","props","children","SpacerDiv","FlexDiv","FlexChild6","FirstHeaderCol","h3","HeaderCol","LastHeaderCol","HeaderRowContainer","HeaderUnderline","Hint","span","HeaderRow","headers","map","value","index","len","hint","makeHeaderItem","length","hints","WiderSection","section","Table","title","fractionRegex","percentageRegex","numberRegex","zeroRegex","DEFAULT_OUT_OF","PRECISION","HMM","bdToPercStr","bdec","formatBd","multiply","ONE_HUNDRED","digits","formatted","formatBdWithPrecision","test","compareTo","round","precision","getValue","bd","str","bigDecimal","ZERO","ONE","create","assignments","threshNum","outOf","alreadyFinalResultFactory","invalidInputResultFactory","alreadyReachedResultFactory","cantReachResultFactory","okResultFactory","every","it","ValidAssignment","totalWeight","getWeight","reduce","prev","add","totalAchieved","score","calc","totalWeightLeft","subtract","percentage","InvalidMessageResult","theoreticalMaximum","requiredPercentage","divide","requiredAchieved","messageStr","messageElement","this","OkResult","Score","other","FractionScore","fromString","PercentageScore","achieved","splits","split","Error","substr","numOrPercToBd","Assignment","uuid","nameStr","scoreStr","weightStr","weight","trim","StubAssignment","AddButtonAssignment","uuidv4","SerializableAssignment","name","toInputString","equals","clazz","StyledInput","input","IconButton","attrs","fontSize","FixedIconButton","FirstContentCol","ContentCol","LastContentCol","ContentRowContainer","ContentUnderline","Input","accepted","empty","shouldUnderline","RightInput","ContentRow","onChange","assignment","onClick","assignmentUUID","useState","getNameStr","setNameStr","getScoreStr","setScoreStr","getWeightStr","setWeightStr","useEffect","undefined","strAssignment","fromStrings","onDuplicate","tabIndex","placeholder","onFocus","event","target","weightStrValid","onDelete","Container","top","bottom","Card","marginTop","marginBottom","NoPaddingCard","CardContainer","BottomCard","HeaderContainer","TabButton","active","Heading","TabContext","React","createContext","Tabbed","defaultActiveTabName","activeTabName","setActiveTabName","headerNames","headerElements","Provider","TextTabIcon","b","LeftSection","Tab","useContext","tabName","PercentageResult","threshStr","AlreadyFinalPercentageResult","InvalidPercentageResult","AlreadyReachedPercentageResult","CantReachPercentageResult","Display","marginRight","Hi","enabled","UtilityText","Or","H3","H3First","PercentageTab","desiredPercentageStr","setDesiredPercentageStr","outOfState","outOfStr","setOutOfStr","useMemo","isNaN","parseFloat","converted","result","message","percentageStr","maxLength","inputStyle","fontWeight","border","type","requiredPercentageStr","requiredAchievedStr","Grade","minimumBoundary","GradeResolver","id","caseSensitive","grades","num","grade","compare","toUpperCase","VuwGrades","INSTANCE","UoaGrades","UcGrades","OtagoGrades","WaikatoGrades","MasseyGrades","AutGrades","GRADE_RESOLVERS_MAP","Map","label","GRADE_RESOLVERS","Array","from","values","sort","a","localeCompare","GradeResult","gradeResolver","gradeStrToNum","AlreadyFinalGradeResult","InvalidGradeResult","AlreadyReachedGradeResult","CantReachGradeResult","numToGradeStr","gradeStr","charAt","articleOnly","GITHUB_NEW_ISSUE_URL","GradeTab","desiredGradeStr","setDesiredGradeStr","currentGradeResolverPairState","currentGradeResolverPair","setCurrentGradeResolverPair","components","NoOptionsMessage","rel","href","options","opt","selectTheme","colors","writeCompressedJSON","gradeResolverId","compressToBase64","JSON","stringify","parseAssignment","thing","endsWith","hasOwnProperty","CopyInput","CopiedText","shareUrl","deserializer","params","URLSearchParams","append","filter","window","location","host","toString","ShareSheet","shareFullUrl","fullJSON","shareTemplateUrl","templateJSON","copied","setCopied","readOnly","onCopy","TableHeader","InvisibleButton","InvisibleLink","defaultAssignments","MainScreen","didLoad","setDidLoad","ofAdd","setAssignments","shareExpanded","setShareExpanded","setTitle","history","useHistory","queryString","useLocation","search","get","fillSavedAssignments","useCallback","encodedCurrent","loadedData","json","document","decompressed","decompressFromBase64","parse","e","push","parseCompressedJSON","alert","replace","addRow","currentAssignments","newArr","useIdleTimer","timeout","onIdle","debounce","updateAssignment","newAssignment","clone","splice","duplicateAssignment","deleteAssignment","slice","FooterChild","LeftFooterChild","RightFooterChild","Footer","footer","App","className","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1721c6ce.chunk.js","sourcesContent":["/**\n * The theme\n */\nexport const theme = {\n    color: {\n        text: \"#000000\",\n        headerUnderline: \"#000000\",\n        contentUnderline: \"#E5E5E5\",\n        highlight: \"#9134ED\",\n        primary: \"#9134ED\",\n        primary75: \"#a64dff\",\n        primary50: \"#d9b3ff\",\n        primary25: \"#f0e0ff\",\n        utilityText: \"#898989\",\n        button: \"#898989\",\n        buttonPressed: \"#000000\",\n        outline: \"#D0D0D0\",\n        outlineNone: \"#D0D0D0\",\n        outlineAccept: \"#13783B\",\n        outlineReject: \"#C51F1F\",\n        cardBackground: \"#FFFFFF\",\n        cardActiveBackground: \"#FFFFFF\",\n        cardInactiveBackground: \"#F2F2F2\",\n    }\n};\n","import styled from \"styled-components\";\n\nexport const Instruction = styled.p`\n  text-align: left;\n  margin: 0 5% 30px;\n  @media only screen and (min-width: 768px) {\n    text-align: center;\n    margin-left: 0;\n    margin-right: 0;\n  }\n`\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst TitleContainer = styled.div`\n  margin-left: 5%;\n  margin-right: 5%;\n`\n\nconst StyledTitle = styled.p`\n  font-size: 3em;\n  font-weight: 600;\n  line-height: 1.1;\n  text-align: start;\n  padding-top: min(1.0em, 10vw);\n  margin-top: 0;\n  margin-bottom: 0;\n  max-width: 50vw;\n  color: ${({theme}) => theme.color.text};\n  @media only screen and (min-width: 768px) {\n    padding-top: 2em;\n    max-width: 100vw;\n    text-align: center;\n  }\n`\n\nconst Block = styled.div`\n  margin-top: 15px;\n  margin-bottom: 30px;\n  width: 25%;\n  height: 5px;\n  background: ${({theme}) => theme.color.highlight};\n  @media only screen and (min-width: 768px) {\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`\n\nexport default function Title(props: { children: React.ReactNode }) {\n    return (\n        <TitleContainer>\n            <StyledTitle>{props.children}</StyledTitle>\n            <Block/>\n        </TitleContainer>\n    );\n}\n\n","import styled from \"styled-components\";\n\nexport const SpacerDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  flex: 0.5;\n`\n\n","import styled from \"styled-components\";\n\nexport const FlexDiv = styled.div`\n    display: flex;\n`\nexport const FlexChild6 = styled.div`\n    flex: 6;\n`\n\n","import styled from \"styled-components\";\nimport React, {ReactElement} from \"react\";\nimport {SpacerDiv} from \"./SpacerDiv\";\nimport {FlexChild6, FlexDiv} from \"./Flex\";\n\nconst FirstHeaderCol = styled.h3`\n  text-align: start;\n  flex: 3;\n`\nconst HeaderCol = styled.h3`\n  text-align: start;\n  flex: 2;\n`\n\nconst LastHeaderCol = styled.h3`\n  text-align: end;\n  flex: 1;\n`\n\nconst HeaderRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst HeaderUnderline = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 2px;\n  background: ${({theme}) => theme.color.headerUnderline};\n`\n\nconst Hint = styled.span`\n  font-size: 0.8em;\n  font-weight: normal;\n  color: ${({theme}) => theme.color.utilityText};\n`\n\nconst makeHeaderItem = (value: string, index: number, len: number, hint: string): ReactElement => {\n    // first\n    if (index === 0) {\n        return <FirstHeaderCol key={index}>{value}<br/><Hint>{hint}</Hint></FirstHeaderCol>\n    } else if (index === len - 1) { // last\n        return <LastHeaderCol key={index}>{value}<br/><Hint>{hint}</Hint></LastHeaderCol>\n    } else {\n        return <HeaderCol key={index}>{value}<br/><Hint>{hint}</Hint></HeaderCol>\n    }\n}\nexport default function HeaderRow(props: { headers: string[], hints: string[] }) {\n\n    return (\n        <FlexDiv>\n            <SpacerDiv/>\n            <FlexChild6>\n                <HeaderRowContainer>\n                    {props.headers.map((value, index) => makeHeaderItem(value, index, props.headers.length, props.hints[index]))}\n                </HeaderRowContainer>\n                <HeaderUnderline/>\n            </FlexChild6>\n            <SpacerDiv/>\n        </FlexDiv>\n    );\n}\n","import React from \"react\";\nimport HeaderRow from \"./HeaderRow\";\nimport styled from \"styled-components\";\nimport {FlexChild6, FlexDiv } from \"./Flex\";\nimport { SpacerDiv } from \"./SpacerDiv\";\n\nconst WiderSection = styled.section`\n  margin: auto;\n  width: min(640px, 95vw);\n`\n\nexport default function Table(\n    props: { title: React.ReactNode, headers: string[], hints: string[], children?: React.ReactNode }\n) {\n\n    return (\n        <WiderSection>\n            <FlexDiv>\n                <SpacerDiv/>\n                <FlexChild6>\n                    {props.title}\n                </FlexChild6>\n                <SpacerDiv/>\n            </FlexDiv>\n            <HeaderRow headers={props.headers} hints={props.hints}/>\n            {props.children}\n        </WiderSection>\n    );\n}\n","export const fractionRegex = /^[0-9]+(?:\\.[0-9]+)?\\/[0-9]+(?:\\.[0-9]+)?$/;\nexport const percentageRegex = /^[0-9]+(?:\\.[0-9]+)?%$/;\nexport const numberRegex = /^[0-9]+(?:\\.[0-9]+)?$/;\nexport const zeroRegex = /^[0-9]+\\.[0]+$/\n\n","export const DEFAULT_OUT_OF = \"––\";\n","import React, {ReactNode} from \"react\";\nimport {Assignment, ValidAssignment} from \"./Assignment\";\nimport bigDecimal from \"js-big-decimal\";\nimport {DEFAULT_OUT_OF} from \"../constant/Constants\";\nimport {zeroRegex} from \"./Regex\";\n\n\nexport const DIGITS = 2;\nexport const PRECISION = 10;\nexport const HMM = \"Hmm... that doesn't seem right –\";\n\nexport function ceil2dp(num: number): string {\n    const base = 10 ** DIGITS;\n    return (Math.ceil(num * base) / base).toFixed(DIGITS);\n}\n\nexport function nToPercStr (num: number): string {\n    const base = 10 ** DIGITS;\n    return (Math.ceil(100 * num * base) / base).toFixed(DIGITS);\n}\n\nexport function bdToPercStr(bdec: bigDecimal): string {\n    return formatBd(bdec.multiply(ONE_HUNDRED));\n}\n\nexport function formatBd(bdec: bigDecimal): string {\n    // start off with two digits\n    let digits = 2\n    let formatted = formatBdWithPrecision(bdec, digits);\n    // if it's all zeroes, and not accurate, keep adding precision until it's not all zeros or it's accurate\n    while (zeroRegex.test(formatted) && bdec.compareTo(bdec.round(digits)) !== 0 && digits < 10) {\n        digits = digits + 1;\n        formatted = formatBdWithPrecision(bdec, digits);\n    }\n    // // add 1 more precision for 2sf\n    // formatted = formatBdWithPrecision(bdec, digits + 1);\n    // // remove the last character if it's a 0\n    // // there must be a '.' in it since the digits start at 2\n    // if (formatted.charAt(formatted.length - 1) === '0') {\n    //     formatted = formatBdWithPrecision(bdec, digits);\n    // }\n    return formatted;\n}\n\nfunction formatBdWithPrecision(bdec: bigDecimal, precision: number): string {\n    return bdec.round(precision).getValue();\n}\n\n\nexport interface Result {\n    message(): ReactNode\n}\n\nexport function bd(str: string | number): bigDecimal {\n    return new bigDecimal(str);\n}\n\nexport const ZERO = bd(\"0\");\nexport const ONE = bd(\"1\");\nexport const ONE_HUNDRED = bd(\"100\");\n\nexport function create(\n    assignments: Assignment[],\n    threshNum: bigDecimal | null,\n    outOf: bigDecimal | null,\n    alreadyFinalResultFactory: (totalAchieved: bigDecimal) => Result,\n    invalidInputResultFactory: () => Result,\n    alreadyReachedResultFactory: (totalAchieved: bigDecimal) => Result,\n    cantReachResultFactory: (requiredPercentage: bigDecimal, requiredAchieved: string, theoreticalMaximum: bigDecimal) => Result,\n    okResultFactory: (requiredPercentage: bigDecimal, requiredAchieved: string, totalWeightLeft: bigDecimal) => Result\n): Result {\n    if (!assignments.every(it => it instanceof ValidAssignment)) {\n        return new InvalidMessageResult(<span>You haven't filled in all the assignments.</span>);\n    } else {\n        if (threshNum == null) {\n            return invalidInputResultFactory();\n        }\n        let totalWeight = assignments.map((it: Assignment) => ((it as ValidAssignment).getWeight()))\n            .reduce((prev: bigDecimal, it: bigDecimal) => prev.add(it), bd(\"0\"));\n        let totalAchieved = assignments.reduce((prev: bigDecimal, it: Assignment) =>\n            prev.add((it as ValidAssignment).score.calc().multiply((it as ValidAssignment).getWeight())), bd(\"0\")\n        );\n        let totalWeightLeft = bd(\"1\").subtract(totalWeight);\n        if (totalWeightLeft.compareTo(ZERO) < 0) {\n            let percentage = formatBd((ONE_HUNDRED.subtract(totalWeightLeft.multiply(ONE_HUNDRED))));\n            return new InvalidMessageResult(\n                <span>{HMM} it looks like you've already completed <b>{percentage}%</b> of the course.</span>\n            );\n        } else if (totalWeightLeft.compareTo(ZERO) === 0) {\n            return alreadyFinalResultFactory(totalAchieved)\n        }\n        let theoreticalMaximum = totalAchieved.add(totalWeightLeft);\n        let requiredAmount = threshNum.subtract(totalAchieved);\n        let requiredPercentage = requiredAmount.divide(totalWeightLeft, PRECISION);\n        let requiredAchieved = outOf ? formatBd(requiredPercentage.multiply(outOf)) : DEFAULT_OUT_OF;\n        if (requiredPercentage.compareTo(ZERO) <= 0) {\n            return alreadyReachedResultFactory(totalAchieved)\n        } else if (requiredPercentage.compareTo(ONE) > 0) {\n            return cantReachResultFactory(requiredPercentage, requiredAchieved, theoreticalMaximum)\n        } else {\n            return okResultFactory(requiredPercentage, requiredAchieved, totalWeightLeft)\n        }\n    }\n}\n\nexport class InvalidMessageResult implements Result {\n    readonly messageElement: ReactNode;\n\n    constructor(messageStr: React.ReactNode) {\n        this.messageElement = messageStr;\n    }\n\n    message(): ReactNode {\n        return this.messageElement == null ? null : <p>{this.messageElement}</p>;\n    }\n}\n\n\nexport class OkResult implements Result {\n    readonly requiredPercentage: bigDecimal;\n    readonly requiredAchieved: string;\n    readonly totalWeightLeft: bigDecimal;\n\n    constructor(requiredPercentage: bigDecimal, requiredAchieved: string, totalWeightLeft: bigDecimal) {\n        this.totalWeightLeft = totalWeightLeft;\n        this.requiredPercentage = requiredPercentage;\n        this.requiredAchieved = requiredAchieved;\n    }\n\n    requiredPercentageStr(): string {\n        return bdToPercStr(this.requiredPercentage);\n    }\n\n    requiredAchievedStr(): string {\n        return this.requiredAchieved\n    }\n\n    message(): ReactNode {\n        return <p>Over the remaining <b>{bdToPercStr(this.totalWeightLeft)}%</b>, you need at least:</p>\n    }\n\n}\n\n","import {fractionRegex, numberRegex, percentageRegex} from \"./Regex\";\nimport bigDecimal from \"js-big-decimal\";\nimport {bd, formatBd, ONE_HUNDRED, PRECISION} from \"./Result\";\n\nexport abstract class Score {\n    readonly str: string;\n\n    protected constructor(str: string) {\n        this.str = str;\n    }\n\n    static fromString(str: string): Score | null {\n        if (fractionRegex.test(str)) {\n            return FractionScore.fromString(str);\n        } else {\n            return PercentageScore.fromString(str);\n        }\n    }\n\n    abstract calc(): bigDecimal\n\n    abstract toString(): string\n\n    toInputString(): string {\n        return this.str;\n    }\n\n    equals(other: Score | null): boolean {\n        return this.str === other?.str;\n    }\n\n}\n\nclass FractionScore extends Score {\n    readonly achieved: bigDecimal;\n    readonly outOf: bigDecimal;\n\n\n    constructor(str: string, achieved: bigDecimal, outOf: bigDecimal) {\n        super(str);\n        this.achieved = achieved;\n        this.outOf = outOf;\n    }\n\n    static fromString(str: string): FractionScore | null {\n        let splits: string[] = str.split(\"/\");\n        if (splits.length !== 2) {\n            throw new Error(\"Invalid FractionScore string\");\n        }\n        let achieved = bd(splits[0]);\n        let outOf = bd(splits[1]);\n        return new FractionScore(str, achieved, outOf);\n    }\n\n    calc(): bigDecimal {\n        return this.achieved.divide(this.outOf, PRECISION);\n    }\n\n    equals(other: Score | null): boolean {\n        if (other instanceof FractionScore) {\n            return super.equals(other)\n                && this.achieved.compareTo(other.achieved) === 0\n                && this.outOf.compareTo(other.outOf) === 0;\n        }\n        return false;\n    }\n\n    toInputString(): string {\n        return this.str;\n    }\n\n    toString(): string {\n        return this.achieved + \"/\" + this.outOf;\n    }\n}\n\nclass PercentageScore extends Score {\n    readonly percentage: bigDecimal;\n\n    constructor(str: string, percentage: bigDecimal) {\n        super(str);\n        this.percentage = percentage;\n    }\n\n    static fromString(str: string): PercentageScore | null {\n        if (numberRegex.test(str)) {\n            return new PercentageScore(str, bd(str).divide(ONE_HUNDRED, PRECISION));\n        } else if (percentageRegex.test(str)) {\n            return new PercentageScore(str, bd(str.substr(0, str.length - 1)).divide(ONE_HUNDRED, PRECISION));\n        }\n        return null;\n    }\n\n    calc(): bigDecimal {\n        return this.percentage;\n    }\n\n    equals(other: Score | null): boolean {\n        if (other instanceof PercentageScore) {\n            return super.equals(other)\n                && this.percentage.compareTo(other.percentage) === 0;\n        }\n        return false;\n    }\n\n    toString(): string {\n        return formatBd(this.percentage)\n    }\n}\n","import {Score} from \"./Score\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {numberRegex, percentageRegex} from \"./Regex\";\nimport bigDecimal from \"js-big-decimal\";\nimport {bd, ONE_HUNDRED, PRECISION} from \"./Result\";\n\n\nexport function numOrPercToBd(str: string): bigDecimal | null {\n    if (percentageRegex.test(str)) {\n        return bd(str.substr(0, str.length - 1)).divide(ONE_HUNDRED, PRECISION);\n    } else if (numberRegex.test(str)) {\n        return bd(str).divide(ONE_HUNDRED, PRECISION);\n    }\n    return null;\n}\n\nexport function numToStr(num: number): string {\n    return (num*100).toString();\n}\n\nexport abstract class Assignment {\n    readonly uuid: string;\n\n    abstract getNameStr(): string;\n\n    abstract getScoreStr(): string;\n\n    abstract getWeightStr(): string;\n\n\n    constructor(uuid: string) {\n        this.uuid = uuid;\n    }\n\n    abstract clone(): Assignment\n\n    abstract equals(other: Assignment): boolean;\n\n    static fromStrings(nameStr: string, scoreStr: string, weightStr: string, uuid: string): Assignment {\n        let score = Score.fromString(scoreStr)\n        let weight = numOrPercToBd(weightStr);\n        if (nameStr.trim().length !== 0 && score && weight != null) {\n            return new ValidAssignment(uuid, nameStr, score, weightStr);\n        }\n        return new StubAssignment(uuid, nameStr, scoreStr, weightStr);\n    }\n\n    static ofAdd(): Assignment {\n        return new AddButtonAssignment(uuidv4());\n    }\n\n}\n\nexport abstract class SerializableAssignment extends Assignment {\n\n    abstract fullJSON(): any\n\n    abstract templateJSON(): any\n}\n\nexport class ValidAssignment extends SerializableAssignment {\n    readonly name: string;\n    readonly score: Score;\n    readonly weight: bigDecimal;\n    readonly weightStr: string;\n\n    getNameStr(): string {\n        return this.name;\n    }\n\n    getScoreStr(): string {\n        return this.score.toInputString();\n    }\n\n    getWeightStr(): string {\n        return this.weightStr;\n    }\n\n    getWeight(): bigDecimal {\n        return this.weight;\n    }\n\n    constructor(uuid: string, name: string, score: Score, weightStr: string) {\n        super(uuid);\n        this.name = name;\n        this.score = score;\n        this.weight = numOrPercToBd(weightStr)!;\n        this.weightStr = weightStr;\n    }\n\n    equals(other: Assignment): boolean {\n        if (other instanceof ValidAssignment) {\n            return this.name === other.name\n                && this.score.equals(other.score)\n                && this.weightStr === other.weightStr;\n        }\n        return false;\n    }\n\n    clone(): Assignment {\n        return new ValidAssignment(uuidv4(), this.name, this.score, this.weightStr);\n    }\n\n    toString(): string {\n        return \"name: \" + this.name + \", score: \" + this.score + \", weight: \" + this.weightStr;\n    }\n\n    fullJSON(): any {\n        return {\n            clazz: \"ValidAssignment\",\n            name: this.name,\n            scoreStr: this.score.str,\n            weightStr: this.weightStr,\n        };\n    }\n\n    templateJSON(): any {\n        return {\n            clazz: \"ValidAssignment\",\n            name: this.name,\n            weightStr: this.weightStr,\n        };\n    }\n\n}\n\nexport class StubAssignment extends SerializableAssignment {\n    readonly nameStr: string;\n    readonly scoreStr: string;\n    readonly weightStr: string;\n\n    getNameStr(): string {\n        return this.nameStr;\n    }\n\n    getScoreStr(): string {\n        return this.scoreStr;\n    }\n\n    getWeightStr(): string {\n        return this.weightStr;\n    }\n\n    constructor(uuid: string, nameStr: string, scoreStr: string, weightStr: string) {\n        super(uuid);\n        this.nameStr = nameStr;\n        this.scoreStr = scoreStr;\n        this.weightStr = weightStr;\n    }\n\n\n    clone(): Assignment {\n        return new StubAssignment(uuidv4(), this.nameStr, this.scoreStr, this.weightStr);\n    }\n\n    equals(other: Assignment): boolean {\n        if (other instanceof StubAssignment) {\n            return this.nameStr === other.nameStr\n                && this.scoreStr === other.scoreStr\n                && this.weightStr === other.weightStr;\n        }\n        return false;\n    }\n\n    fullJSON(): any {\n        return {\n            clazz: \"StubAssignment\",\n            nameStr: this.nameStr,\n            scoreStr: this.scoreStr,\n            weightStr: this.weightStr,\n        };\n    }\n\n    templateJSON(): any {\n        return {\n            clazz: \"StubAssignment\",\n            nameStr: this.nameStr,\n            weightStr: this.weightStr,\n        };\n    }\n}\n\nexport class AddButtonAssignment extends Assignment {\n\n    getNameStr(): string {\n        return \"\";\n    }\n\n    getScoreStr(): string {\n        return \"\";\n    }\n\n    getWeightStr(): string {\n        return \"\";\n    }\n\n    equals(other: Assignment): boolean {\n        return other instanceof AddButtonAssignment;\n    }\n\n\n    clone(): Assignment {\n        return new AddButtonAssignment(uuidv4());\n    }\n}\n\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nexport type InputChangeEvent = React.ChangeEvent<HTMLInputElement>\n\nexport const StyledInput = styled.input`\n  border: none;\n  width: 100%;\n  box-sizing: border-box;\n\n`\n","import styled from \"styled-components\";\n\nexport const IconButton = styled.button.attrs((props: { fontSize?: string }) => ({\n    fontSize: props.fontSize,\n}))`\n  background: none;\n  border: none;\n  text-align: center;\n  font-size: ${({fontSize}) => fontSize ? fontSize : \"1.3em\"};\n  color: ${({theme}) => theme.color.button};\n\n  &:hover {\n    color: ${({theme}) => theme.color.buttonPressed};\n  }\n`\n\nexport const FixedIconButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 1.5em;\n  padding-right: 0;\n  width: 2.5rem;\n  color: ${({theme}) => theme.color.button};\n\n  &:hover {\n    color: ${({theme}) => theme.color.buttonPressed};\n  }\n`\n\n\n","import styled from \"styled-components\";\nimport React, {useEffect, useState} from \"react\";\nimport {Assignment, numOrPercToBd} from \"../model/Assignment\";\nimport {Score} from \"../model/Score\";\nimport {SpacerDiv} from \"./SpacerDiv\";\nimport {FlexChild6, FlexDiv} from \"./Flex\";\nimport {InputChangeEvent, StyledInput} from \"./StyledInput\";\nimport { IconButton } from \"./IconButton\";\nimport { IoCloseOutline, IoDuplicateSharp } from \"react-icons/io5\";\nimport {bd} from \"../model/Result\";\n\nconst FirstContentCol = styled.p`\n  text-align: start;\n  flex: 3;\n`\nconst ContentCol = styled.p`\n  text-align: start;\n  flex: 1.5;\n`\n\nconst LastContentCol = styled.p`\n  text-align: end;\n  flex: 1.5;\n`\n\nconst ContentRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst ContentUnderline = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 1px;\n  background: ${({theme}) => theme.color.contentUnderline};\n`\n\nconst Input = styled(StyledInput).attrs((props: { accepted: boolean, empty: boolean, shouldUnderline: boolean }) => ({\n    accepted: props.accepted,\n    empty: props.empty,\n    shouldUnderline: props.shouldUnderline,\n}))`\n  font-size: 1em;\n  color: ${({empty, accepted, theme}) => empty || accepted ? theme.color.text : theme.color.outlineReject};\n  font-weight: ${({empty, accepted}) => empty || accepted ? \"normal\" : \"bold\"};\n  width: 100%;\n  text-decoration: ${({empty, shouldUnderline}) => empty && shouldUnderline ? \"underline\" : \"none\"};\n`\n\nconst RightInput = styled(Input)`\n  text-align: right;\n`\n\nexport default function ContentRow(\n    props: {\n        assignment: Assignment,\n        onChange: (assignment: Assignment) => void,\n        onClick?: () => void\n        onDuplicate?: () => void\n        onDelete?: () => void\n    }\n) {\n    const {onChange, assignment, onClick} = props;\n    const assignmentUUID = assignment.uuid;\n\n    const [nameStr, setNameStr] = useState<string>(assignment.getNameStr());\n    const [scoreStr, setScoreStr] = useState<string>(assignment.getScoreStr());\n    const [weightStr, setWeightStr] = useState<string>(assignment.getWeightStr());\n\n    useEffect(() => {\n        if (onClick === undefined) {\n            let strAssignment = Assignment.fromStrings(nameStr, scoreStr, weightStr, assignmentUUID);\n            onChange(strAssignment);\n        }\n    }, [onClick, nameStr, scoreStr, weightStr, onChange, assignmentUUID])\n\n    function weightStrValid(): boolean {\n        let weight = numOrPercToBd(weightStr);\n        if (weight == null) {\n            return false;\n        }\n        return weight.compareTo(bd(\"1\")) < 1\n    }\n\n    return (\n        <FlexDiv>\n            <SpacerDiv>\n                {props.onClick === undefined &&\n                // ×\n                <IconButton fontSize=\"1.1em\" onClick={props.onDuplicate} tabIndex={-1}><IoDuplicateSharp/></IconButton>}\n            </SpacerDiv>\n            <FlexChild6>\n                <ContentRowContainer onClick={props.onClick}>\n                    <FirstContentCol>\n                        <Input\n                            value={nameStr}\n                            placeholder={\"Title\"}\n                            accepted={nameStr !== \"\"}\n                            onFocus={props.onClick}\n                            empty={nameStr.length === 0}\n                            shouldUnderline={props.onClick === undefined}\n                            onChange={(event: InputChangeEvent) => setNameStr(event.target.value)}\n                        />\n                    </FirstContentCol>\n                    <ContentCol>\n                        <Input\n                            value={weightStr}\n                            placeholder={\"Overall Weight\"}\n                            accepted={weightStrValid()}\n                            onFocus={props.onClick}\n                            empty={weightStr.length === 0}\n                            shouldUnderline={props.onClick === undefined}\n                            onChange={(event: InputChangeEvent) => setWeightStr(event.target.value.trim())}\n                        />\n                    </ContentCol>\n                    <LastContentCol>\n                        <RightInput\n                            value={scoreStr}\n                            placeholder={\"Score Achieved\"}\n                            accepted={Score.fromString(scoreStr) !== null}\n                            onFocus={props.onClick}\n                            empty={scoreStr.length === 0}\n                            shouldUnderline={props.onClick === undefined}\n                            onChange={(event: InputChangeEvent) => setScoreStr(event.target.value.trim())}\n                        />\n                    </LastContentCol>\n                </ContentRowContainer>\n                <ContentUnderline/>\n            </FlexChild6>\n            <SpacerDiv>\n                {props.onClick === undefined &&\n                // ×\n                <IconButton onClick={props.onDelete} tabIndex={-1}><IoCloseOutline/></IconButton>}\n            </SpacerDiv>\n        </FlexDiv>\n    );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.section.attrs((props: { top?: string, bottom?: string }) => ({\n    top: props.top ? props.top : \"0\",\n    bottom: props.bottom ? props.bottom : \"0\",\n}))`\n  margin-top: ${({top}) => top};\n  margin-bottom: ${({bottom}) => bottom};\n  margin-left: auto;\n  margin-right: auto;\n  width: min(550px, 90vw);\n`\n\n","import styled from \"styled-components\";\n\nexport const Card = styled.section.attrs((props: { marginTop?: string, marginBottom?: string }) => ({\n    marginTop: props.marginTop,\n    marginBottom: props.marginBottom,\n}))`\n  margin-top: ${({marginTop}) => marginTop ? marginTop : undefined};\n  margin-bottom: ${({marginBottom}) => marginBottom ? marginBottom : undefined};\n  padding: 1.5rem;\n  border: solid 1px ${({theme}) => theme.color.outline};\n  border-radius: 10px;\n`\n\nexport const NoPaddingCard = styled(Card)`\n  padding: 0;\n`\n\nexport const CardContainer = styled.section`\n  text-align: start;\n  padding: 0 1.5rem 1.5rem;\n`\n\nexport const BottomCard = styled(Card)`\n  border-radius: 0 0 10px 10px;\n`\n\n","import React, {Fragment, useState} from \"react\";\nimport styled from \"styled-components\";\nimport { BottomCard } from \"./Card\";\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\n// noinspection CssReplaceWithShorthandSafely\nconst TabButton = styled.button.attrs((props: { active: boolean, index: number, length: number }) => ({\n    active: props.active,\n    index: props.index,\n    length: props.length,\n}))`\n  margin: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  border: solid 1px ${({theme}) => theme.color.outline};\n  border-left: ${({index}) => index === 0 ? \"\" : \"none\"};\n  background: ${({active, theme}) => active ? theme.color.cardActiveBackground : theme.color.cardInactiveBackground};\n  flex: 1;\n  border-top-left-radius: ${({index}) => index === 0 ? 10 : 0}px;\n  border-top-right-radius: ${({index, length}) => index === length - 1 ? 10 : 0}px;\n  border-bottom: none;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n`\n\nconst Heading = styled.h3`\n  font-size: 1.4em;\n  font-weight: 500;\n`\n\nexport const TabContext = React.createContext(\"\");\n\nexport default function Tabbed(\n    props: {\n        defaultActiveTabName: string,\n        headerNames: string[],\n        headerElements: React.ReactElement[],\n        children?: React.ReactElement[]\n    }\n) {\n    const [activeTabName, setActiveTabName] = useState(props.defaultActiveTabName);\n\n    return (\n        <Fragment>\n            <HeaderContainer>\n                {props.headerNames.map((it, index) => {\n                    return <TabButton key={it}\n                                      active={it === activeTabName}\n                                      index={index}\n                                      length={props.children!.length}\n                                      onClick={() => setActiveTabName(it)}\n                    ><Heading>{props.headerElements[index]}</Heading></TabButton>\n                })}\n            </HeaderContainer>\n            <TabContext.Provider value={activeTabName}>\n                <BottomCard>\n                    {props.children}\n                </BottomCard>\n            </TabContext.Provider>\n        </Fragment>\n    );\n}\n","import React, {useContext} from \"react\";\nimport {TabContext} from \"./Tabbed\";\nimport styled from \"styled-components\";\n\nexport const TextTabIcon = styled.b`\n    color: ${({theme}) => theme.color.primary};\n  margin-right: 2px;\n`\n\nconst LeftSection = styled.section`\n  text-align: start;\n  padding: 0;\n`\n\nexport default function Tab(props: { tabName: string, children: React.ReactNode }) {\n    const activeTabName = useContext(TabContext)\n\n    return (\n        <LeftSection>\n            {props.tabName === activeTabName ?\n                props.children : null\n            }\n        </LeftSection>\n    );\n}\n","import React, {ReactNode} from \"react\";\nimport {Assignment, numOrPercToBd} from \"./Assignment\";\nimport {bdToPercStr, create, HMM, OkResult, Result} from \"./Result\";\nimport bigDecimal from \"js-big-decimal\";\n\nexport abstract class PercentageResult implements Result {\n    abstract message(): ReactNode\n\n    static create(assignments: Assignment[], threshStr: string, outOf: bigDecimal | null): Result {\n        return create(\n            assignments,\n            numOrPercToBd(threshStr),\n            outOf,\n            (totalAchieved) => new AlreadyFinalPercentageResult(totalAchieved),\n            () => new InvalidPercentageResult(\n                threshStr === \"\" ? <span>Enter your desired percentage above.</span> :\n                <span>{HMM} the threshold <b>{threshStr}</b> isn't valid.</span>\n            ),\n            (totalAchieved) => new AlreadyReachedPercentageResult(totalAchieved),\n            (requiredPercentage, requiredAchieved, theoreticalMaximum) =>\n                new CantReachPercentageResult(threshStr, theoreticalMaximum),\n            (requiredPercentage, requiredAchieved, totalWeightLeft) =>\n                new OkResult(requiredPercentage, requiredAchieved, totalWeightLeft)\n        )\n    }\n}\n\nclass InvalidPercentageResult extends PercentageResult {\n    readonly messageElement: ReactNode;\n\n    constructor(messageStr: React.ReactNode) {\n        super();\n        this.messageElement = messageStr;\n    }\n\n    message(): ReactNode {\n        return this.messageElement == null ? null : <p>{this.messageElement}</p>;\n    }\n}\n\nexport class AlreadyFinalPercentageResult extends InvalidPercentageResult {\n    readonly totalAchieved: bigDecimal;\n\n    constructor(totalAchieved: bigDecimal) {\n        super(null);\n        this.totalAchieved = totalAchieved;\n    }\n\n    message(): ReactNode {\n        return <p>Congratulations, you have already completed the course and achieved:</p>;\n    }\n\n    percentageStr(): string {\n        return bdToPercStr(this.totalAchieved);\n    }\n}\n\nclass AlreadyReachedPercentageResult extends InvalidPercentageResult {\n    readonly totalAchieved: bigDecimal;\n\n    constructor(totalAchieved: bigDecimal) {\n        super(null);\n        this.totalAchieved = totalAchieved;\n    }\n\n    message(): ReactNode {\n        return <p>Congratulations, you have already reached <b>{bdToPercStr(this.totalAchieved)}%</b>!</p>;\n    }\n}\n\nclass CantReachPercentageResult extends InvalidPercentageResult {\n    readonly threshStr: string;\n    readonly theoreticalMaximum: bigDecimal;\n\n    constructor(threshStr: string, theoreticalMaximum: bigDecimal) {\n        super(null);\n        this.threshStr = threshStr;\n        this.theoreticalMaximum = theoreticalMaximum;\n    }\n\n    message(): ReactNode {\n        return <p>Unfortunately, you can't reach {this.threshStr}%.<br/>The maximum percentage you can achieve\n            is <b>{bdToPercStr(this.theoreticalMaximum)}%</b>.</p>;\n    }\n}\n\n\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nexport const Display = styled.span.attrs((props: { marginRight?: string }) => ({\n    marginRight: props.marginRight,\n}))`\n  margin-right: ${({marginRight}) => marginRight ? marginRight : undefined};\n  color: ${({theme}) => theme.color.text};\n  font-weight: 500;\n  font-size: 3rem;\n`\nexport const Hi = styled.span.attrs((props: { enabled: boolean }) => ({\n    enabled: props.enabled,\n}))`\n  color: ${({enabled, theme}) => enabled ? theme.color.highlight : theme.color.utilityText};\n`\n\nexport const UtilityText = styled.span`\n  color: ${({theme}) => theme.color.utilityText};\n`\n\nexport const Or = styled.b`\n  white-space: pre;\n`\n\nexport const H3 = styled.h3.attrs((props: { marginTop?: string }) => ({\n    marginTop: props.marginTop,\n}))`\n  margin-top: ${({marginTop}) => marginTop ? marginTop : \"1.5em\"};\n  margin-bottom: 0.5em;\n`\n\nexport const H3First = styled(H3)`\n    margin-top: 0;\n`\n\nexport type State<T> = [T, React.Dispatch<React.SetStateAction<T>>]\n","import React, {Fragment, useMemo, useState} from \"react\";\nimport {Assignment} from \"../../model/Assignment\";\nimport {InputChangeEvent} from \"../StyledInput\";\nimport AutosizeInput from \"react-input-autosize\";\nimport {AlreadyFinalPercentageResult, PercentageResult} from \"../../model/PercentageResult\";\nimport {DEFAULT_OUT_OF} from \"../../constant/Constants\";\nimport {Display, H3, H3First, Hi, Or, State, UtilityText} from \"../helpers/Helpers\";\nimport {bd, OkResult} from \"../../model/Result\";\nimport bigDecimal from \"js-big-decimal\";\n\n\nexport default function PercentageTab(props: { assignments: Assignment[], outOfState: State<string> }) {\n    const assignments = props.assignments;\n\n    const [desiredPercentageStr, setDesiredPercentageStr] = useState(\"\");\n    const [outOfStr, setOutOfStr]: State<string> = props.outOfState;\n    const outOf: bigDecimal | null = useMemo(() => {\n        if (isNaN(parseFloat(outOfStr))) {\n            return null;\n        }\n        let converted = bd(parseFloat(outOfStr));\n        if (converted != null) {\n            return converted;\n        }\n        return null;\n    }, [outOfStr]);\n\n    const result = useMemo(() =>\n            PercentageResult.create(assignments, desiredPercentageStr, outOf),\n        [assignments, desiredPercentageStr, outOf]\n    );\n\n    if (result instanceof AlreadyFinalPercentageResult) {\n        return (\n            <Fragment>\n                <H3First>Final Result</H3First>\n                {result.message()}\n                <Display><Hi enabled={true}>{result.percentageStr()}</Hi></Display><UtilityText>%</UtilityText>\n            </Fragment>\n        );\n    }\n\n    return (\n        <Fragment>\n            <H3First>Desired Percentage</H3First>\n            <UtilityText>\n                <AutosizeInput value={desiredPercentageStr}\n                               maxLength={4}\n                               inputStyle={{\n                                   fontSize: \"3rem\",\n                                   fontWeight: 500,\n                                   border: \"none\",\n                               }}\n                               type=\"numeric\"\n                               placeholder=\"––\"\n                               onChange={(event: InputChangeEvent) =>\n                                   setDesiredPercentageStr(event.target.value.trim())\n                               }\n                />\n                %\n            </UtilityText>\n            <H3>Required Result</H3>\n            {result.message()}\n            {result instanceof OkResult &&\n                <span>\n                        <Display marginRight=\"2px\"><Hi\n                            enabled={true}>{result.requiredPercentageStr()}</Hi></Display><UtilityText>%</UtilityText>\n                        <Or>  or  </Or>\n                        <Display><Hi\n                            enabled={true}>{result.requiredAchievedStr()}</Hi><UtilityText>/</UtilityText></Display>\n                        <AutosizeInput value={outOfStr}\n                                       inputStyle={{\n                                           fontSize: \"3rem\",\n                                           fontWeight: 500,\n                                           border: \"none\",\n                                       }}\n                                       maxLength={5}\n                                       type=\"numeric\"\n                                       placeholder={DEFAULT_OUT_OF}\n                                       onChange={(event: InputChangeEvent) =>\n                                           setOutOfStr(event.target.value.trim())\n                                       }/>\n                    </span>\n            }\n        </Fragment>\n    );\n\n}\n","import bigDecimal from \"js-big-decimal\";\n\nexport class Grade {\n    readonly str: string;\n    readonly minimumBoundary: bigDecimal;\n\n\n    constructor(str: string, minimumBoundary: bigDecimal) {\n        this.str = str;\n        this.minimumBoundary = minimumBoundary;\n    }\n}\n\nexport abstract class GradeResolver {\n    readonly id: string;\n    readonly name: string;\n    readonly caseSensitive: boolean;\n    readonly grades: Grade[]\n\n    protected constructor(id: string, name: string, caseSensitive: boolean, grades: Grade[]) {\n        this.id = id;\n        this.name = name;\n        this.caseSensitive = caseSensitive;\n        this.grades = grades;\n    }\n\n    numToGradeStr(num: bigDecimal): string {\n        for (let grade of this.grades) {\n            let compare = num.compareTo(grade.minimumBoundary);\n            if (compare > 0 || compare === 0) {\n                return grade.str;\n            }\n        }\n        throw Error()\n    }\n\n    gradeStrToNum(str: string): bigDecimal | null {\n        for (let grade of this.grades) {\n            if (this.caseSensitive ? str === grade.str : str.toUpperCase() === grade.str.toUpperCase()) {\n                return grade.minimumBoundary;\n            }\n        }\n        return null;\n    }\n\n}\n\n","import {Grade, GradeResolver} from \"../Grade\";\nimport {bd} from \"../../Result\";\n\nexport class VuwGrades extends GradeResolver {\n    static INSTANCE = new VuwGrades();\n\n    private constructor() {\n        super(\n            \"VUW\",\n            \"Victoria University of Wellington\",\n            false,\n            [\n                new Grade(\"A+\", bd(\"0.9\")),\n                new Grade(\"A\", bd(\"0.85\")),\n                new Grade(\"A-\", bd(\"0.8\")),\n                new Grade(\"B+\", bd(\"0.75\")),\n                new Grade(\"B\", bd(\"0.70\")),\n                new Grade(\"B-\", bd(\"0.65\")),\n                new Grade(\"C+\", bd(\"0.60\")),\n                new Grade(\"C\", bd(\"0.55\")),\n                new Grade(\"C-\", bd(\"0.50\")),\n                new Grade(\"D\", bd(\"0.4\")),\n                new Grade(\"E\", bd(\"0.0\")),\n            ]\n        );\n    }\n\n}\n\n","import {Grade, GradeResolver} from \"../Grade\";\nimport {bd} from \"../../Result\";\n\nexport class UoaGrades extends GradeResolver {\n    static INSTANCE = new UoaGrades();\n\n    constructor() {\n        super(\n            \"UOA\",\n            \"University of Auckland\",\n            false,\n            [\n            new Grade(\"A+\", bd(\"0.9\")),\n            new Grade(\"A\", bd(\"0.85\")),\n            new Grade(\"A-\", bd(\"0.8\")),\n            new Grade(\"B+\", bd(\"0.75\")),\n            new Grade(\"B\", bd(\"0.70\")),\n            new Grade(\"B-\", bd(\"0.65\")),\n            new Grade(\"C+\", bd(\"0.60\")),\n            new Grade(\"C\", bd(\"0.55\")),\n            new Grade(\"C-\", bd(\"0.50\")),\n            new Grade(\"D+\", bd(\"0.45\")),\n            new Grade(\"D\", bd(\"0.40\")),\n            new Grade(\"D-\", bd(\"0.0\"))\n        ]);\n    }\n\n}\n","import {Grade, GradeResolver} from \"../Grade\";\nimport {bd} from \"../../Result\";\n\n\nexport class UcGrades extends GradeResolver {\n    static INSTANCE = new UcGrades();\n\n    private constructor() {\n        super(\n            \"UC\",\n            \"University of Canterbury\",\n            false,\n            [\n                new Grade(\"A+\", bd(\"0.9\")),\n                new Grade(\"A\", bd(\"0.85\")),\n                new Grade(\"A-\", bd(\"0.8\")),\n                new Grade(\"B+\", bd(\"0.75\")),\n                new Grade(\"B\", bd(\"0.70\")),\n                new Grade(\"B-\", bd(\"0.65\")),\n                new Grade(\"C+\", bd(\"0.60\")),\n                new Grade(\"C\", bd(\"0.55\")),\n                new Grade(\"C-\", bd(\"0.50\")),\n                new Grade(\"D\", bd(\"0.4\")),\n                new Grade(\"E\", bd(\"0.0\")),\n            ]\n        );\n    }\n\n}\n\n","import {Grade, GradeResolver} from \"../Grade\";\nimport {bd} from \"../../Result\";\n\n\nexport class OtagoGrades extends GradeResolver {\n    static INSTANCE = new OtagoGrades();\n\n    private constructor() {\n        super(\n            \"OTA\",\n            \"University of Otago\",\n            false,\n            [\n                new Grade(\"A+\", bd(\"0.9\")),\n                new Grade(\"A\", bd(\"0.85\")),\n                new Grade(\"A-\", bd(\"0.8\")),\n                new Grade(\"B+\", bd(\"0.75\")),\n                new Grade(\"B\", bd(\"0.70\")),\n                new Grade(\"B-\", bd(\"0.65\")),\n                new Grade(\"C+\", bd(\"0.60\")),\n                new Grade(\"C\", bd(\"0.55\")),\n                new Grade(\"C-\", bd(\"0.50\")),\n                new Grade(\"D\", bd(\"0.4\")),\n                new Grade(\"E\", bd(\"0.0\")),\n            ]\n        );\n    }\n\n}\n\n","import {Grade, GradeResolver} from \"../Grade\";\nimport {bd} from \"../../Result\";\n\n\nexport class WaikatoGrades extends GradeResolver {\n    static INSTANCE = new WaikatoGrades();\n\n    private constructor() {\n        super(\n            \"WAI\",\n            \"University of Waikato\",\n            false,\n            [\n                new Grade(\"A+\", bd(\"0.9\")),\n                new Grade(\"A\", bd(\"0.85\")),\n                new Grade(\"A-\", bd(\"0.8\")),\n                new Grade(\"B+\", bd(\"0.75\")),\n                new Grade(\"B\", bd(\"0.70\")),\n                new Grade(\"B-\", bd(\"0.65\")),\n                new Grade(\"C+\", bd(\"0.60\")),\n                new Grade(\"C\", bd(\"0.55\")),\n                new Grade(\"C-\", bd(\"0.50\")),\n                new Grade(\"D\", bd(\"0.4\")),\n                new Grade(\"E\", bd(\"0.0\")),\n            ]\n        );\n    }\n\n}\n\n","import {Grade, GradeResolver} from \"../Grade\";\nimport {bd} from \"../../Result\";\n\n\nexport class MasseyGrades extends GradeResolver {\n    static INSTANCE = new MasseyGrades();\n\n    private constructor() {\n        super(\n            \"MAS\",\n            \"Massey University\",\n            false,\n            [\n                new Grade(\"A+\", bd(\"0.9\")),\n                new Grade(\"A\", bd(\"0.85\")),\n                new Grade(\"A-\", bd(\"0.8\")),\n                new Grade(\"B+\", bd(\"0.75\")),\n                new Grade(\"B\", bd(\"0.70\")),\n                new Grade(\"B-\", bd(\"0.65\")),\n                new Grade(\"C+\", bd(\"0.60\")),\n                new Grade(\"C\", bd(\"0.55\")),\n                new Grade(\"C-\", bd(\"0.50\")),\n                new Grade(\"D\", bd(\"0.4\")),\n                new Grade(\"E\", bd(\"0.0\")),\n            ]\n        );\n    }\n\n}\n\n","import {Grade, GradeResolver} from \"../Grade\";\nimport {bd} from \"../../Result\";\n\nexport class AutGrades extends GradeResolver {\n    static INSTANCE = new AutGrades();\n\n    private constructor() {\n        super(\n            \"AUT\",\n            \"Auckland University of Technology\",\n            false,\n            [\n                new Grade(\"A+\", bd(\"0.895\")),\n                new Grade(\"A\", bd(\"0.845\")),\n                new Grade(\"A-\", bd(\"0.745\")),\n                new Grade(\"B+\", bd(\"0.745\")),\n                new Grade(\"B\", bd(\"0.695\")),\n                new Grade(\"B-\", bd(\"0.645\")),\n                new Grade(\"C+\", bd(\"0.595\")),\n                new Grade(\"C\", bd(\"0.545\")),\n                new Grade(\"C-\", bd(\"0.495\")),\n                new Grade(\"D\", bd(\"0.0\")),\n            ]\n        );\n    }\n\n}\n\n","import {VuwGrades} from \"./resolvers/VuwGrades\";\nimport {UoaGrades} from \"./resolvers/UoaGrades\";\nimport {GradeResolver} from \"./Grade\";\nimport {UcGrades} from \"./resolvers/UcGrades\";\nimport {OtagoGrades} from \"./resolvers/OtagoGrades\";\nimport {WaikatoGrades} from \"./resolvers/WaikatoGrades\";\nimport {MasseyGrades} from \"./resolvers/MasseyGrades\";\nimport {AutGrades} from \"./resolvers/AutGrades\";\n\nexport interface LabelToGradeResolver {\n    label: string,\n    value: GradeResolver\n}\n\nexport const GRADE_RESOLVERS_MAP: Map<string, LabelToGradeResolver> = new Map<string, LabelToGradeResolver>([\n    [VuwGrades.INSTANCE.id, {label: VuwGrades.INSTANCE.name, value: VuwGrades.INSTANCE}],\n    [UcGrades.INSTANCE.id, {label: UcGrades.INSTANCE.name, value: UcGrades.INSTANCE}],\n    [OtagoGrades.INSTANCE.id, {label: OtagoGrades.INSTANCE.name, value: OtagoGrades.INSTANCE}],\n    [MasseyGrades.INSTANCE.id, {label: MasseyGrades.INSTANCE.name, value: MasseyGrades.INSTANCE}],\n    [WaikatoGrades.INSTANCE.id, {label: WaikatoGrades.INSTANCE.name, value: WaikatoGrades.INSTANCE}],\n    [UoaGrades.INSTANCE.id, {label: UoaGrades.INSTANCE.name, value: UoaGrades.INSTANCE}],\n    [AutGrades.INSTANCE.id, {label: AutGrades.INSTANCE.name, value: AutGrades.INSTANCE}],\n])\n\nexport const GRADE_RESOLVERS: LabelToGradeResolver[] = Array.from(GRADE_RESOLVERS_MAP.values())\n    .sort((a, b) => a.label.localeCompare(b.label))\n\n","import React, {ReactNode} from \"react\";\nimport {Assignment} from \"./Assignment\";\nimport {create, HMM, OkResult, Result} from \"./Result\";\nimport a from \"indefinite\";\nimport {GradeResolver} from \"./grade/Grade\";\nimport bigDecimal from \"js-big-decimal\";\n\nexport abstract class GradeResult implements Result {\n    readonly gradeResolver: GradeResolver;\n\n    protected constructor(gradeResolver: GradeResolver) {\n        this.gradeResolver = gradeResolver;\n    }\n\n    abstract message(): ReactNode\n\n    static create(gradeResolver: GradeResolver, assignments: Assignment[], threshStr: string, outOf: bigDecimal | null): Result {\n        return create(\n            assignments,\n            gradeResolver.gradeStrToNum(threshStr),\n            outOf,\n            (totalAchieved) => new AlreadyFinalGradeResult(gradeResolver, totalAchieved),\n            () => new InvalidGradeResult(gradeResolver,\n                threshStr === \"\" ? <span>Enter your desired grade above.</span> :\n                    <span>{HMM} the grade <b>{threshStr}</b> isn't valid.</span>\n            ),\n            (totalAchieved) => new AlreadyReachedGradeResult(gradeResolver, totalAchieved),\n            (requiredPercentage, requiredAchieved, theoreticalMaximum) =>\n                new CantReachGradeResult(gradeResolver, threshStr, theoreticalMaximum),\n            (requiredPercentage, requiredAchieved, totalWeightLeft) =>\n                new OkResult(requiredPercentage, requiredAchieved, totalWeightLeft)\n        )\n    }\n}\n\n\n\nclass InvalidGradeResult extends GradeResult {\n    readonly messageElement: ReactNode;\n\n    constructor(gradeResolver: GradeResolver, messageElement: React.ReactNode) {\n        super(gradeResolver);\n        this.messageElement = messageElement;\n    }\n\n    message(): ReactNode {\n        return this.messageElement == null ? null : <p>{this.messageElement}</p>;\n    }\n}\n\n\nexport class AlreadyFinalGradeResult extends InvalidGradeResult {\n    readonly totalAchieved: bigDecimal;\n\n    constructor(gradeResolver: GradeResolver, totalAchieved: bigDecimal) {\n        super(gradeResolver, null);\n        this.totalAchieved = totalAchieved;\n    }\n\n    message(): ReactNode {\n        return <p>Congratulations, you have already completed the course and achieved:</p>;\n    }\n\n    gradeStr(): string {\n        return this.gradeResolver.numToGradeStr(this.totalAchieved);\n    }\n}\n\nclass AlreadyReachedGradeResult extends InvalidGradeResult {\n    readonly totalAchieved: bigDecimal;\n\n    constructor(gradeResolver: GradeResolver, totalAchieved: bigDecimal) {\n        super(gradeResolver, null);\n        this.totalAchieved = totalAchieved;\n    }\n\n    message(): ReactNode {\n        return <p>Congratulations, you have already reached <b>{this.gradeResolver.numToGradeStr(this.totalAchieved)}</b>!</p>;\n    }\n}\n\nclass CantReachGradeResult extends InvalidGradeResult {\n    readonly threshStr: string;\n    readonly theoreticalMaximum: bigDecimal;\n\n    constructor(gradeResolver: GradeResolver, threshStr: string, theoreticalMaximum: bigDecimal) {\n        super(gradeResolver, null);\n        this.threshStr = threshStr;\n        this.theoreticalMaximum = theoreticalMaximum;\n    }\n\n    message(): ReactNode {\n        const gradeStr = this.gradeResolver.numToGradeStr(this.theoreticalMaximum);\n        if (this.threshStr.charAt(0))\n        return <p>Unfortunately, you can't achieve {a(this.threshStr)}.<br/>The maximum grade you can achieve\n            is {a(gradeStr, {articleOnly: true})} <b>{gradeStr}</b>.</p>;\n    }\n}\n\n\n","export const GITHUB_NEW_ISSUE_URL = \"https://github.com/isaacy2012/reverse-grade-calculator/issues/new\"\nexport const GITHUB_URL = \"https://github.com/isaacy2012/reverse-grade-calculator\"\n","import React, {Fragment, useMemo, useState} from \"react\";\nimport {Assignment} from \"../../model/Assignment\";\nimport Select, { components } from 'react-select';\nimport {GRADE_RESOLVERS, LabelToGradeResolver} from \"../../model/grade/GradeResolvers\";\nimport AutosizeInput from \"react-input-autosize\";\nimport {InputChangeEvent} from \"../StyledInput\";\nimport {DEFAULT_OUT_OF} from \"../../constant/Constants\";\nimport {Display, H3, H3First, Hi, Or, State, UtilityText} from \"../helpers/Helpers\";\nimport {theme} from \"../../theme/Theme\";\nimport {AlreadyFinalGradeResult, GradeResult} from \"../../model/GradeResult\";\nimport {bd, OkResult} from \"../../model/Result\";\nimport {GITHUB_NEW_ISSUE_URL, GITHUB_URL} from \"../../Constants\";\nimport bigDecimal from \"js-big-decimal\";\n\n\nexport default function GradeTab(props: { assignments: Assignment[], outOfState: State<string>, currentGradeResolverPairState: State<LabelToGradeResolver | null> }) {\n    const assignments = props.assignments;\n\n    const [desiredGradeStr, setDesiredGradeStr] = useState(\"\");\n    const [outOfStr, setOutOfStr] = props.outOfState;\n    const [currentGradeResolverPair, setCurrentGradeResolverPair] = props.currentGradeResolverPairState;\n\n    const outOf: bigDecimal | null = useMemo(() => {\n        if (isNaN(parseFloat(outOfStr))) {\n            return null;\n        }\n        let converted = bd(parseFloat(outOfStr));\n        if (converted != null) {\n            return converted;\n        }\n        return null;\n    }, [outOfStr]);\n\n    const result = useMemo(() => {\n            if (currentGradeResolverPair != null) {\n                return GradeResult.create(currentGradeResolverPair.value, assignments, desiredGradeStr, outOf);\n            }\n            return null;\n        },\n        [currentGradeResolverPair, assignments, desiredGradeStr, outOf]\n    );\n\n    function NoOptionsMessage(props: any): JSX.Element {\n        return (\n            <components.NoOptionsMessage {... props}>\n                No schools found.\n                <br/>\n                <br/>\n                Make an <a\n                rel=\"noreferrer\" target=\"_blank\"\n                href={GITHUB_NEW_ISSUE_URL}>issue</a> or help contribute\n                on <a\n                rel=\"noreferrer\" target=\"_blank\"\n                href={GITHUB_URL}>GitHub</a> to Reverse Grade\n                Calculator to add your school!\n            </components.NoOptionsMessage>\n        )\n    }\n\n    if (result instanceof AlreadyFinalGradeResult) {\n        return (\n            <Fragment>\n                <H3First>Final Result</H3First>\n                {result.message()}\n                <Display><Hi enabled={true}>{result.gradeStr()}</Hi></Display>\n            </Fragment>\n        );\n    }\n\n    return(\n        <Fragment>\n            <H3First>Your School</H3First>\n            <Select\n                components={{ NoOptionsMessage }}\n                options={GRADE_RESOLVERS}\n                value={currentGradeResolverPair}\n                onChange={opt => setCurrentGradeResolverPair(opt)}\n                theme={(selectTheme) => ({\n                    ...selectTheme,\n                    colors: {\n                        ...selectTheme.colors,\n                        primary: theme.color.highlight,\n                        primary75: theme.color.primary75,\n                        primary50: theme.color.primary50,\n                        primary25: theme.color.primary25\n                    }\n                })}\n            />\n            {result != null &&\n                <Fragment>\n                <H3>Desired Grade</H3>\n                <UtilityText>\n                    <AutosizeInput value={desiredGradeStr}\n                                   maxLength={4}\n                                   inputStyle={{\n                                       fontSize: \"3rem\",\n                                       fontWeight: 500,\n                                       border: \"none\",\n                                   }}\n                                   placeholder=\"––\"\n                                   onChange={(event: InputChangeEvent) =>\n                                       setDesiredGradeStr(currentGradeResolverPair?.value?.caseSensitive === false ?\n                                           event.target.value.trim().toUpperCase() :\n                                           event.target.value.trim()\n                                       )\n                                   }\n                    />\n                </UtilityText>\n                    <H3>Required Result</H3>\n                    {result.message()}\n                    {result instanceof OkResult &&\n                        <span>\n                <Display marginRight=\"2px\"><Hi\n                    enabled={true}>{result.requiredPercentageStr()}</Hi></Display><UtilityText>%</UtilityText>\n                <Or>  or  </Or>\n                <Display><Hi\n                    enabled={true}>{result.requiredAchievedStr()}</Hi><UtilityText>/</UtilityText></Display>\n                <AutosizeInput value={outOfStr}\n                               inputStyle={{\n                                   fontSize: \"3rem\",\n                                   fontWeight: 500,\n                                   border: \"none\",\n                               }}\n                               maxLength={5}\n                               type=\"numeric\"\n                               placeholder={DEFAULT_OUT_OF}\n                               onChange={(event: InputChangeEvent) =>\n                                   setOutOfStr(event.target.value.trim())\n                               }/>\n                </span>\n                    }\n                </Fragment>\n            }\n        </Fragment>\n    );\n}\n","import {Assignment, numOrPercToBd, StubAssignment, ValidAssignment} from \"../model/Assignment\";\nimport {Score} from \"../model/Score\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {compressToBase64, decompressFromBase64} from \"@amoutonbrady/lz-string\"\n\nexport function writeCompressedJSON(title: string, gradeResolverId: string | null, assignments: Assignment[]) {\n    return compressToBase64(JSON.stringify(\n        {\n            title: title,\n            gradeResolverId: gradeResolverId,\n            assignments: assignments\n        }\n    ))\n}\n\nexport function parseCompressedJSON(json: string): {title: string, gradeResolverId: string, assignments: Assignment[]} | null {\n    let decompressed = decompressFromBase64(json);\n    if (decompressed == null) {\n        return null;\n    }\n    let document\n    try {\n        document = JSON.parse(decompressed);\n    } catch (e) {\n        return null;\n    }\n    let assignments: Assignment[] = [];\n    let gradeResolverId = null;\n    if (document.hasOwnProperty(\"gradeResolverId\")) {\n        gradeResolverId = document.gradeResolverId;\n    }\n    let title: string = document.title ? document.title : \"\";\n    if (!document.hasOwnProperty(\"assignments\")) {\n        return null;\n    }\n    for (let thing of document.assignments) {\n        let assignment = parseAssignment(thing);\n        if (assignment) {\n            assignments.push(assignment)\n        } else {\n            // return undefined;\n        }\n    }\n    return {\n        title: title,\n        gradeResolverId: gradeResolverId,\n        assignments: assignments\n    };\n}\n\nfunction parseAssignment(thing: any): Assignment | null {\n    if (!thing.clazz.endsWith(\"Assignment\")) {\n        return null;\n    }\n\n    switch (thing.clazz) {\n        case \"ValidAssignment\":\n            if (thing.hasOwnProperty(\"scoreStr\")) {\n                let weight = numOrPercToBd(thing.weightStr);\n                let score: Score | null = Score.fromString(thing.scoreStr);\n                if (score && weight != null) {\n                    return new ValidAssignment(uuidv4(), thing.name, score, thing.weightStr);\n                }\n                return new StubAssignment(uuidv4(), thing.name, thing.scoreStr, thing.weightStr);\n            } else { // template\n                return new StubAssignment(uuidv4(), thing.name, \"\", thing.weightStr);\n            }\n        case \"StubAssignment\":\n            return new StubAssignment(uuidv4(), thing.nameStr, thing.scoreStr ? thing.scoreStr : \"\", thing.weightStr);\n        default:\n            return null;\n    }\n}\n\n","import {Assignment, SerializableAssignment} from \"../model/Assignment\";\nimport styled from \"styled-components\";\nimport {useMemo, useState} from \"react\";\nimport {CardContainer} from \"./Card\";\nimport {HiOutlineClipboardCopy} from \"react-icons/hi\";\nimport {FixedIconButton} from \"./IconButton\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport {GradeResolver} from \"../model/grade/Grade\";\nimport {writeCompressedJSON} from \"../util/Deserializer\";\nimport {H3} from \"./helpers/Helpers\";\n\nconst CopyInput = styled.input`\n  flex: 1;\n  border: solid 1px ${({theme}) => theme.color.outline};\n  padding: 10px;\n  border-radius: 5px;\n\n  &:focus {\n    border: solid 1px ${({theme}) => theme.color.text};\n    outline: none;\n  }\n`\n\nconst FlexDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n\nconst CopiedText = styled.p`\n  font-weight: bold;\n  margin-top: 0.75em;\n  margin-bottom: 0.5em;\n  color: ${({theme}) => theme.color.highlight};\n`\n\nfunction shareUrl(\n    title: string,\n    gradeResolver: GradeResolver | undefined,\n    assignments: Assignment[],\n    deserializer: (assignment: SerializableAssignment) => any\n): string {\n    let params = new URLSearchParams();\n    params.append(\"saved\", writeCompressedJSON(\n            title,\n            gradeResolver !== undefined ? gradeResolver.id : null,\n            assignments\n                .filter(it => it instanceof SerializableAssignment)\n                .map((it) => deserializer(it as SerializableAssignment))\n        )\n    );\n    return \"https://\" + window.location.host + process.env.PUBLIC_URL + \"/?\" + params.toString();\n}\n\n\nexport default function ShareSheet(props: { title: string, gradeResolver: GradeResolver | undefined, assignments: Assignment[] }) {\n    let {title, gradeResolver, assignments} = props;\n    const shareFullUrl = useMemo(() =>\n            shareUrl(title, gradeResolver, assignments, (it) => it.fullJSON()),\n        [title, gradeResolver, assignments]\n    )\n    const shareTemplateUrl = useMemo(() =>\n            shareUrl(title, gradeResolver, assignments, (it) => it.templateJSON()),\n        [title, gradeResolver, assignments]\n    )\n    const [copied, setCopied] = useState<string | null>(null);\n\n    return (\n        <CardContainer>\n            <H3 marginTop={\"0.25em\"}>Share Template with Scores</H3>\n            {copied === \"FULL\" &&\n            <CopiedText>Copied!</CopiedText>}\n            <FlexDiv>\n                <CopyInput readOnly value={shareFullUrl}/>\n                <CopyToClipboard\n                    text={shareFullUrl}\n                    onCopy={() => setCopied(\"FULL\")}\n                >\n                    <FixedIconButton><HiOutlineClipboardCopy/></FixedIconButton>\n                </CopyToClipboard>\n            </FlexDiv>\n            <H3>Share Template</H3>\n            {copied === \"TEMPLATE\" &&\n            <CopiedText>Copied!</CopiedText>}\n            <FlexDiv>\n                <CopyInput readOnly value={shareTemplateUrl}/>\n                <CopyToClipboard\n                    text={shareTemplateUrl}\n                    onCopy={() => setCopied(\"TEMPLATE\")}\n                >\n                    <FixedIconButton><HiOutlineClipboardCopy/></FixedIconButton>\n                </CopyToClipboard>\n            </FlexDiv>\n        </CardContainer>\n    )\n}\n","import styled from \"styled-components\";\nimport React, {Fragment, useCallback, useEffect, useState} from \"react\";\nimport {Instruction} from \"./Instruction\";\nimport Title from \"./Title\";\nimport Table from \"./Table\";\nimport {Assignment, SerializableAssignment} from \"../model/Assignment\";\nimport ContentRow from \"./ContentRow\";\nimport {Container} from \"./Container\";\nimport {InputChangeEvent, StyledInput} from \"./StyledInput\";\nimport Tabbed from \"./Tabbed\";\nimport Tab, {TextTabIcon} from \"./Tab\";\nimport PercentageTab from \"./output/PercentageTab\";\nimport GradeTab from \"./output/GradeTab\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {parseCompressedJSON, writeCompressedJSON} from \"../util/Deserializer\";\nimport {NoPaddingCard} from \"./Card\";\nimport {RiShareForward2Fill} from \"react-icons/ri\";\nimport ShareSheet from \"./ShareSheet\";\nimport {useIdleTimer} from \"react-idle-timer\";\nimport {GRADE_RESOLVERS_MAP, LabelToGradeResolver} from \"../model/grade/GradeResolvers\";\n\n\nconst TableHeader = styled(StyledInput)`\n  width: 100%;\n  font-size: 2em;\n  font-weight: bold;\n  border: none;\n`\n\nconst InvisibleButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  white-space: pre;\n  font-size: 1.1em;\n  //font-weight: 600;\n  margin: 0;\n  padding: 15px;\n  width: 100%;\n  background: none;\n  border: none;\n  border-radius: 10px;\n\n    // color: ${({theme}) => theme.color.outlineReject};\n`\n\nconst InvisibleLink = styled.a`\n    text-decoration: none;\n`\n\n// const dummyAssignments: Assignment[] = [\n//     Assignment.fromStrings(\"Assignment 1\", \"49/50\", \"0.025\", uuidv4().toString()),\n//     Assignment.fromStrings(\"Project 1\", \"98/100\", \"0.15\", uuidv4().toString()),\n//     Assignment.fromStrings(\"Assignment 2\", \"47/50\", \"0.025\", uuidv4().toString()),\n//     Assignment.fromStrings(\"Assignment 3\", \"40/40\", \"0.025\", uuidv4().toString()),\n//     Assignment.fromStrings(\"Project 2\", \"43/43\", \"0.15\", uuidv4().toString()),\n//     Assignment.fromStrings(\"Assignment 4\", \"24.5/30\", \"0.025\", uuidv4().toString()),\n// ]\n\nconst defaultAssignments: Assignment[] = []\n\n/**\n * getQuery from location for id string\n */\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function MainScreen() {\n    const [didLoad, setDidLoad] = useState<boolean>(false);\n    const [assignments, setAssignments] = useState<Assignment[]>([...defaultAssignments, Assignment.ofAdd()]);\n    const [shareExpanded, setShareExpanded] = useState<boolean>(false);\n    const [title, setTitle] = useState<string>(\"\");\n    const outOfState = useState(\"\");\n    const currentGradeResolverPairState = useState<LabelToGradeResolver | null>(null);\n    const [currentGradeResolverPair, setCurrentGradeResolverPair] = currentGradeResolverPairState;\n\n    const history = useHistory();\n\n    let queryString = useQuery().get(\"saved\");\n    let fillSavedAssignments = useCallback(() => {\n        let gradeResolverId = currentGradeResolverPair?.value?.id;\n        let encodedCurrent = writeCompressedJSON(\n                title,\n                gradeResolverId !== undefined ? gradeResolverId : null,\n                assignments\n                    .filter(it => it instanceof SerializableAssignment)\n                    .map((it) => (it as SerializableAssignment).fullJSON())\n            );\n        if (queryString && queryString !== encodedCurrent) {\n            let loadedData = parseCompressedJSON(queryString);\n            if (loadedData == null) {\n                alert(\"Sorry, we were unable to load saved data.\")\n            } else {\n                setTitle(loadedData.title);\n                setAssignments([\n                    ...loadedData.assignments,\n                    Assignment.ofAdd()\n                ]);\n                let gradeResolver = GRADE_RESOLVERS_MAP.get(loadedData.gradeResolverId);\n                if (gradeResolver !== undefined) {\n                    setCurrentGradeResolverPair({label: gradeResolver.value.name, value: gradeResolver.value});\n                } else {\n                    let params = new URLSearchParams();\n                    history.replace({search: params.toString()});\n                }\n            }\n        }\n    }, [assignments, currentGradeResolverPair, setCurrentGradeResolverPair, history, queryString, title])\n\n    useEffect(() => {\n        if (!didLoad) {\n            fillSavedAssignments();\n            setDidLoad(true);\n        }\n    }, [didLoad, fillSavedAssignments]);\n\n    function saveAndPushData() {\n        // set to default url if no new data\n        if (title === \"\" && assignments.filter(it => it instanceof SerializableAssignment).length === 0) {\n            let params = new URLSearchParams();\n            history.replace({search: params.toString()});\n            return;\n        }\n\n        let gradeResolverId = currentGradeResolverPair?.value?.id;\n        let encodedCurrent = writeCompressedJSON(\n                title,\n                gradeResolverId !== undefined ? gradeResolverId : null,\n                assignments\n                    .filter(it => it instanceof SerializableAssignment)\n                    .map((it) => (it as SerializableAssignment).fullJSON())\n            );\n\n        if (queryString !== encodedCurrent) {\n            // refresh\n            let params = new URLSearchParams();\n            params.append(\"saved\", encodedCurrent);\n            history.replace({search: params.toString()});\n        }\n    }\n\n    useIdleTimer({\n        timeout: 1000,\n        onIdle: saveAndPushData,\n        debounce: 500\n    })\n\n    function duplicateAssignment(index: number) {\n        setAssignments((currentAssignments) => {\n            let newArr = [...currentAssignments];\n            let assignmentToDuplicate = currentAssignments[index];\n            let newAssignment = assignmentToDuplicate.clone();\n            newArr.splice(index, 0, newAssignment);\n            return newArr;\n        });\n    }\n\n    function deleteAssignment(index: number) {\n        setAssignments((currentAssignments) => {\n            let newArr = [...currentAssignments];\n            newArr.splice(index, 1);\n            return newArr;\n        });\n    }\n\n    function updateAssignment(assignment: Assignment, index: number) {\n        if (assignments[index].equals(assignment)) {\n            // console.log(\"unfortunately, \" + JSON.stringify(assignments[index]) + \" was equal to \" + JSON.stringify(assignment))\n            return;\n        }\n        setAssignments((currentAssignments) => {\n            let newArr = [...currentAssignments];\n            newArr[index] = assignment;\n            return newArr;\n        });\n    }\n\n    function addRow() {\n        setAssignments((currentAssignments) => {\n            let newArr = [...currentAssignments];\n            newArr.push(Assignment.ofAdd());\n            return newArr;\n        });\n    }\n\n    return (\n        <Fragment>\n            <Container bottom=\"50px\">\n                <InvisibleLink href=\"/\"><Title>Reverse Grade Calculator</Title></InvisibleLink>\n                <Instruction>Enter your assignment information, then choose whether you want to reach\n                    a <b>percentage</b> or <b>grade</b>.</Instruction>\n            </Container>\n            <Table title={\n                <TableHeader\n                    value={title}\n                    onChange={(event: InputChangeEvent) => setTitle(event.target.value)}\n                    placeholder=\"Title\"/>\n            } headers={[\"ASSIGNMENT\", \"WEIGHT\", \"SCORE\"]}\n            hints={[\"\", \"%\", \"% or X/Y\"]}>\n                {assignments.map((value, index) => <ContentRow\n                    key={value.uuid}\n                    assignment={value}\n                    onChange={(assignment: Assignment) => updateAssignment(assignment, index)}\n                    onClick={index === assignments.length - 1 ? addRow : undefined}\n                    onDuplicate={() => duplicateAssignment(index)}\n                    onDelete={() => deleteAssignment(index)}\n                />)}\n            </Table>\n            <Container top=\"20px\">\n                <Tabbed defaultActiveTabName=\"REACH_PERCENTAGE\"\n                        headerNames={[\"REACH_PERCENTAGE\", \"REACH_GRADE\"]}\n                        headerElements={[<span><TextTabIcon>%</TextTabIcon> Reach a <b>percentage</b></span>,\n                            <span><TextTabIcon>A+</TextTabIcon> Reach a <b>grade</b></span>]}>\n                    <Tab tabName=\"REACH_PERCENTAGE\">\n                        {/*remove the last empty assignment (the add button)*/}\n                        <PercentageTab assignments={assignments.slice(0, -1)}\n                                       outOfState={outOfState}\n                        />\n                    </Tab>\n                    <Tab tabName=\"REACH_GRADE\">\n                        {/*remove the last empty assignment (the add button)*/}\n                        <GradeTab assignments={assignments.slice(0, -1)}\n                                  outOfState={outOfState}\n                                  currentGradeResolverPairState={currentGradeResolverPairState}\n                        />\n                    </Tab>\n                </Tabbed>\n            </Container>\n            <Container>\n                <NoPaddingCard marginTop=\"20px\">\n                    <InvisibleButton onClick={() => setShareExpanded((prev) => !prev)}>\n                        <RiShareForward2Fill/> SHARE\n                    </InvisibleButton>\n                    {shareExpanded &&\n                    <ShareSheet title={title} gradeResolver={currentGradeResolverPair?.value} assignments={assignments.slice(0, -1)}/>}\n                </NoPaddingCard>\n            </Container>\n            {/*{assignments.map((value, index) => <div key={index}><p>{value instanceof SerializableAssignment ? \"true\" + JSON.stringify(value.fullJSON()) : JSON.stringify(value)}</p></div>)}*/}\n        </Fragment>\n    );\n}\n","import React from 'react';\nimport styled, {ThemeProvider} from 'styled-components'\nimport '../css/App.css';\nimport {\n    BrowserRouter\n} from \"react-router-dom\";\nimport {theme} from '../theme/Theme';\nimport MainScreen from \"./MainScreen\";\nimport {GITHUB_NEW_ISSUE_URL} from \"../Constants\";\n\n\nconst FooterChild = styled.p`\n  position: absolute;\n  bottom: 5px;\n`\nconst LeftFooterChild = styled(FooterChild)`\n  left: 25px;\n`\n\nconst RightFooterChild = styled(FooterChild)`\n  text-align: right;\n  right: 25px;\n`\n\nconst Footer = styled.footer`\n    height: 80px;\n`\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <ThemeProvider theme={theme}>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <MainScreen/>\n                </BrowserRouter>\n                <Footer>\n                    <LeftFooterChild>\n                        <a\n                            rel=\"noreferrer\" target=\"_blank\"\n                            href={GITHUB_NEW_ISSUE_URL}>Report an Issue</a>\n                    </LeftFooterChild>\n                <RightFooterChild>Made by <a href=\"https://isaacy.dev\">Isaac Young</a></RightFooterChild>\n                </Footer>\n            </ThemeProvider>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './ui/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}