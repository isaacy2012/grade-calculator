{"version":3,"sources":["theme/Theme.ts","ui/Instruction.ts","ui/Title.tsx","ui/SpacerDiv.ts","ui/Flex.ts","ui/HeaderRow.tsx","ui/Table.tsx","model/Regex.ts","model/Score.ts","model/Assignment.ts","ui/StyledInput.ts","ui/IconButton.ts","ui/ContentRow.tsx","ui/Container.tsx","ui/Card.ts","ui/Tabbed.tsx","ui/Tab.tsx","ui/output/H3.ts","model/PercentageResult.tsx","ui/output/PercentageTab.tsx","constant/Constants.ts","ui/output/GradeTab.tsx","util/Deserializer.ts","ui/ShareSheet.tsx","ui/MainScreen.tsx","ui/App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","color","text","headerUnderline","contentUnderline","highlight","utilityText","button","buttonPressed","outline","outlineNone","outlineAccept","outlineReject","cardBackground","cardActiveBackground","cardInactiveBackground","Instruction","styled","p","TitleContainer","div","StyledTitle","Block","Title","props","children","SpacerDiv","FlexDiv","FlexChild6","FirstHeaderCol","h3","HeaderCol","LastHeaderCol","HeaderRowContainer","HeaderUnderline","Hint","span","HeaderRow","headers","map","value","index","len","hint","makeHeaderItem","length","hints","WiderSection","section","Table","title","fractionRegex","percentageRegex","numberRegex","Score","str","this","other","test","FractionScore","fromString","PercentageScore","achieved","outOf","result","isNaN","splits","split","Error","parseFloat","percentage","toString","substr","numOrPercToStr","NaN","Assignment","uuid","nameStr","scoreStr","weightStr","score","weight","trim","ValidAssignment","StubAssignment","AddButtonAssignment","uuidv4","SerializableAssignment","name","toInputString","equals","clazz","StyledInput","input","IconButton","attrs","fontSize","FixedIconButton","FirstContentCol","ContentCol","LastContentCol","ContentRowContainer","ContentUnderline","Input","accepted","empty","shouldUnderline","RightInput","ContentRow","onChange","assignment","onClick","assignmentUUID","useState","getNameStr","setNameStr","getScoreStr","setScoreStr","getWeightStr","setWeightStr","useEffect","undefined","strAssignment","fromStrings","onDuplicate","placeholder","event","target","onDelete","Container","top","bottom","Card","marginTop","marginBottom","NoPaddingCard","CardContainer","BottomCard","HeaderContainer","TabButton","active","Heading","TabContext","React","createContext","Tabbed","defaultActiveTabName","activeTabName","setActiveTabName","headerNames","it","headerElements","Provider","LeftSection","Tab","useContext","tabName","H3","H3First","HMM","PercentageResult","n","toFixed","assignments","threshStr","threshNum","every","totalWeight","reduce","prev","totalAchieved","calc","totalWeightLeft","InvalidPercentageResult","AlreadyFinalResult","theoreticalMaximum","thresh","requiredPercentage","requiredAchieved","AlreadyReachedResult","CantReachPercentageResult","OkPercentageResult","ValidPercentageResult","nToPercStr","messageStr","messageElement","Display","marginRight","Hi","enabled","UtilityText","Or","b","PercentageTab","threshState","setThreshStr","outOfState","outOfStr","setOutOfStr","useMemo","create","message","percentageStr","maxLength","inputStyle","fontWeight","border","type","isValid","requiredPercentageStr","requiredAchievedStr","GradeTab","_","parseAssignment","thing","endsWith","hasOwnProperty","CopyInput","CopiedText","shareUrl","deserializer","params","URLSearchParams","append","encode","JSON","stringify","filter","window","location","host","ShareSheet","shareFullUrl","fullJSON","shareTemplateUrl","templateJSON","copied","setCopied","readOnly","onCopy","TableHeader","InvisibleButton","InvisibleLink","a","defaultAssignments","MainScreen","ofAdd","setAssignments","shareExpanded","setShareExpanded","setTitle","percentageThreshState","history","useHistory","queryString","useLocation","search","get","fillSavedAssignments","useCallback","encodedCurrent","slice","loadedData","json","document","parse","push","parseJSON","decode","addRow","currentAssignments","newArr","useIdleTimer","timeout","onIdle","replace","debounce","href","process","updateAssignment","newAssignment","clone","splice","duplicateAssignment","deleteAssignment","FooterChild","LeftFooterChild","RightFooterChild","Footer","footer","App","className","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iQAGaA,EAAQ,CACjBC,MAAO,CACHC,KAAM,UACNC,gBAAiB,UACjBC,iBAAkB,UAClBC,UAAW,UACXC,YAAa,UACbC,OAAQ,UACRC,cAAe,UACfC,QAAS,UACTC,YAAa,UACbC,cAAe,UACfC,cAAe,UACfC,eAAgB,UAChBC,qBAAsB,UACtBC,uBAAwB,Y,gBChBnBC,EAAcC,IAAOC,EAAV,+L,OCClBC,EAAiBF,IAAOG,IAAV,qEAKdC,EAAcJ,IAAOC,EAAV,sVASN,qBAAElB,MAAiBC,MAAMC,QAQ9BoB,EAAQL,IAAOG,IAAV,kPAKK,qBAAEpB,MAAiBC,MAAMI,aAQ1B,SAASkB,EAAMC,GAC1B,OACI,eAACL,EAAD,WACI,cAACE,EAAD,UAAcG,EAAMC,WACpB,cAACH,EAAD,OCxCL,I,kBAAMI,EAAYT,IAAOG,IAAV,wICATO,EAAUV,IAAOG,IAAV,gDAGPQ,EAAaX,IAAOG,IAAV,0CCAjBS,EAAiBZ,IAAOa,GAAV,8DAIdC,EAAYd,IAAOa,GAAV,8DAKTE,EAAgBf,IAAOa,GAAV,4DAKbG,EAAqBhB,IAAOG,IAAV,sEAKlBc,EAAkBjB,IAAOG,IAAV,6GAKL,qBAAEpB,MAAiBC,MAAME,mBAGnCgC,EAAOlB,IAAOmB,KAAV,wFAGC,qBAAEpC,MAAiBC,MAAMK,eAarB,SAAS+B,EAAUb,GAE9B,OACI,eAACG,EAAD,WACI,cAACD,EAAD,IACA,eAACE,EAAD,WACI,cAACK,EAAD,UACKT,EAAMc,QAAQC,KAAI,SAACC,EAAOC,GAAR,OAjBhB,SAACD,EAAeC,EAAeC,EAAaC,GAE/D,OAAc,IAAVF,EACO,eAACZ,EAAD,WAA6BW,EAAM,uBAAK,cAACL,EAAD,UAAOQ,MAA1BF,GACrBA,IAAUC,EAAM,EAChB,eAACV,EAAD,WAA4BQ,EAAM,uBAAK,cAACL,EAAD,UAAOQ,MAA1BF,GAEpB,eAACV,EAAD,WAAwBS,EAAM,uBAAK,cAACL,EAAD,UAAOQ,MAA1BF,GAU0BG,CAAeJ,EAAOC,EAAOjB,EAAMc,QAAQO,OAAQrB,EAAMsB,MAAML,SAExG,cAACP,EAAD,OAEJ,cAACR,EAAD,OCrDZ,IAAMqB,EAAe9B,IAAO+B,QAAV,yEAKH,SAASC,EACpBzB,GAGA,OACI,eAACuB,EAAD,WACI,eAACpB,EAAD,WACI,cAACD,EAAD,IACA,cAACE,EAAD,UACKJ,EAAM0B,QAEX,cAACxB,EAAD,OAEJ,cAACW,EAAD,CAAWC,QAASd,EAAMc,QAASQ,MAAOtB,EAAMsB,QAC/CtB,EAAMC,Y,mDCzBN0B,EAAgB,6CAChBC,EAAkB,yBAClBC,EAAc,wBCALC,GAAtB,WAGI,WAAsBC,GAAc,yBAF3BA,SAE0B,EAC/BC,KAAKD,IAAMA,EAJnB,iDAmBI,WACI,OAAOC,KAAKD,MApBpB,oBAuBI,SAAOE,GACH,OAAOD,KAAKD,OAAL,OAAaE,QAAb,IAAaA,OAAb,EAAaA,EAAOF,QAxBnC,yBAOI,SAAkBA,GACd,OAAIJ,EAAcO,KAAKH,GACZI,GAAcC,WAAWL,GAEzBM,GAAgBD,WAAWL,OAX9C,KA6BMI,G,kDAKF,WAAYJ,EAAaO,EAAkBC,GAAgB,IAAD,8BACtD,cAAMR,IALDO,cAIiD,IAHjDC,WAGiD,EAEtD,EAAKD,SAAWA,EAChB,EAAKC,MAAQA,EAHyC,E,wCAgB1D,WACI,IAAIC,EAASR,KAAKM,SAAWN,KAAKO,MAClC,OAAOE,MAAMD,GAAU,EAAIA,I,oBAG/B,SAAOP,GACH,OAAIA,aAAiBE,IACV,8DAAaF,IACbD,KAAKM,WAAaL,EAAMK,UACxBN,KAAKO,QAAUN,EAAMM,S,2BAKpC,WACI,OAAOP,KAAKD,M,sBAGhB,WACI,OAAOC,KAAKM,SAAW,IAAMN,KAAKO,S,yBA7BtC,SAAkBR,GACd,IAAIW,EAAmBX,EAAIY,MAAM,KACjC,GAAsB,IAAlBD,EAAOrB,OACP,MAAM,IAAIuB,MAAM,gCAIpB,OAAO,IAAIT,EAAcJ,EAFVc,WAAWH,EAAO,IACrBG,WAAWH,EAAO,S,GAjBVZ,IA4CtBO,G,kDAGF,WAAYN,EAAae,GAAqB,IAAD,8BACzC,cAAMf,IAHDe,gBAEoC,EAEzC,EAAKA,WAAaA,EAFuB,E,wCAc7C,WACI,OAAOd,KAAKc,a,oBAGhB,SAAOb,GACH,OAAIA,aAAiBI,IACV,8DAAaJ,IACbD,KAAKc,aAAeb,EAAMa,c,sBAKzC,WACI,OAA0B,IAAlBd,KAAKc,YAAkBC,c,yBAtBnC,SAAkBhB,GACd,OAAIF,EAAYK,KAAKH,GACV,IAAIM,EAAgBN,EAAKc,WAAWd,GAAO,KAC3CH,EAAgBM,KAAKH,GACrB,IAAIM,EAAgBN,EAAKc,WAAWd,EAAIiB,OAAO,EAAGjB,EAAIV,OAAS,IAAM,KAEzE,S,GAdeS,I,SCtEvB,SAASmB,GAAelB,GAC3B,OAAIH,EAAgBM,KAAKH,GACdc,WAAWd,EAAIiB,OAAO,EAAGjB,EAAIV,OAAS,IAAM,IAC5CQ,EAAYK,KAAKH,GACjBc,WAAWd,GAAO,IAElBmB,IAQR,I,iCAAeC,GAAtB,WAUI,WAAYC,GAAe,yBATlBA,UASiB,EACtBpB,KAAKoB,KAAOA,EAXpB,oDAkBI,SAAmBC,EAAiBC,EAAkBC,EAAmBH,GACrE,IAAII,EAAQ1B,GAAMM,WAAWkB,GACzBG,EAASR,GAAeM,GAC5B,OAA8B,IAA1BF,EAAQK,OAAOrC,QAAgBmC,IAAUf,MAAMgB,GACxC,IAAIE,GAAgBP,EAAMC,EAASG,EAAOC,EAAQF,GAEtD,IAAIK,GAAeR,EAAMC,EAASC,EAAUC,KAxB3D,mBA2BI,WACI,OAAO,IAAIM,GAAoBC,oBA5BvC,KAiCsBC,GAAtB,4HAAqDZ,IAOxCQ,GAAb,kDAkBI,WAAYP,EAAcY,EAAcR,EAAcC,EAAgBF,GAAoB,IAAD,8BACrF,cAAMH,IAlBDY,UAiBgF,IAhBhFR,WAgBgF,IAfhFC,YAegF,IAdhFF,eAcgF,EAErF,EAAKS,KAAOA,EACZ,EAAKR,MAAQA,EACb,EAAKC,OAASA,EACd,EAAKF,UAAYA,EALoE,EAlB7F,8CAMI,WACI,OAAOvB,KAAKgC,OAPpB,yBAUI,WACI,OAAOhC,KAAKwB,MAAMS,kBAX1B,0BAcI,WACI,OAAOjC,KAAKuB,YAfpB,oBA0BI,SAAOtB,GACH,OAAIA,aAAiB0B,IACV3B,KAAKgC,OAAS/B,EAAM+B,MACpBhC,KAAKwB,MAAMU,OAAOjC,EAAMuB,QACxBxB,KAAKyB,SAAWxB,EAAMwB,UA9BzC,mBAmCI,WACI,OAAO,IAAIE,EAAgBG,eAAU9B,KAAKgC,KAAMhC,KAAKwB,MAAOxB,KAAKyB,OAAQzB,KAAKuB,aApCtF,sBAuCI,WACI,MAAO,SAAWvB,KAAKgC,KAAO,YAAchC,KAAKwB,MAAQ,aAAexB,KAAKyB,SAxCrF,sBA2CI,WACI,MAAO,CACHU,MAAO,kBACPH,KAAMhC,KAAKgC,KACXV,SAAUtB,KAAKwB,MAAMzB,IACrBwB,UAAWvB,KAAKuB,aAhD5B,0BAoDI,WACI,MAAO,CACHY,MAAO,kBACPH,KAAMhC,KAAKgC,KACXT,UAAWvB,KAAKuB,eAxD5B,GAAqCQ,IA8DxBH,GAAb,kDAiBI,WAAYR,EAAcC,EAAiBC,EAAkBC,GAAoB,IAAD,8BAC5E,cAAMH,IAjBDC,aAgBuE,IAfvEC,cAeuE,IAdvEC,eAcuE,EAE5E,EAAKF,QAAUA,EACf,EAAKC,SAAWA,EAChB,EAAKC,UAAYA,EAJ2D,EAjBpF,8CAKI,WACI,OAAOvB,KAAKqB,UANpB,yBASI,WACI,OAAOrB,KAAKsB,WAVpB,0BAaI,WACI,OAAOtB,KAAKuB,YAdpB,mBAyBI,WACI,OAAO,IAAIK,EAAeE,eAAU9B,KAAKqB,QAASrB,KAAKsB,SAAUtB,KAAKuB,aA1B9E,oBA6BI,SAAOtB,GACH,OAAIA,aAAiB2B,IACV5B,KAAKqB,UAAYpB,EAAMoB,SACvBrB,KAAKsB,WAAarB,EAAMqB,UACxBtB,KAAKuB,YAActB,EAAMsB,aAjC5C,sBAsCI,WACI,MAAO,CACHY,MAAO,iBACPd,QAASrB,KAAKqB,QACdC,SAAUtB,KAAKsB,SACfC,UAAWvB,KAAKuB,aA3C5B,0BA+CI,WACI,MAAO,CACHY,MAAO,iBACPd,QAASrB,KAAKqB,QACdE,UAAWvB,KAAKuB,eAnD5B,GAAoCQ,IAwDvBF,GAAb,gKAEI,WACI,MAAO,KAHf,yBAMI,WACI,MAAO,KAPf,0BAUI,WACI,MAAO,KAXf,oBAcI,SAAO5B,GACH,OAAOA,aAAiB4B,IAfhC,mBAmBI,WACI,OAAO,IAAIA,EAAoBC,oBApBvC,GAAyCX,IC5K5BiB,GAAc3E,IAAO4E,MAAV,4FCHXC,GAAa7E,IAAOV,OAAOwF,OAAM,SAACvE,GAAD,MAAmC,CAC7EwE,SAAUxE,EAAMwE,YADM/E,CAAH,kKAMR,gBAAE+E,EAAF,EAAEA,SAAF,OAAgBA,GAAsB,WAC1C,qBAAEhG,MAAiBC,MAAMM,UAGvB,qBAAEP,MAAiBC,MAAMO,iBAIzByF,GAAkBhF,IAAOV,OAAV,oLAMjB,qBAAEP,MAAiBC,MAAMM,UAGvB,qBAAEP,MAAiBC,MAAMO,iB,SCfhC0F,GAAkBjF,IAAOC,EAAV,gEAIfiF,GAAalF,IAAOC,EAAV,kEAKVkF,GAAiBnF,IAAOC,EAAV,gEAKdmF,GAAsBpF,IAAOG,IAAV,wEAKnBkF,GAAmBrF,IAAOG,IAAV,+GAKN,qBAAEpB,MAAiBC,MAAMG,oBAGnCmG,GAAQtF,YAAO2E,IAAaG,OAAM,SAACvE,GAAD,MAA6E,CACjHgF,SAAUhF,EAAMgF,SAChBC,MAAOjF,EAAMiF,MACbC,gBAAiBlF,EAAMkF,mBAHbzF,CAAH,8HAMA,gBAAEwF,EAAF,EAAEA,MAAOD,EAAT,EAASA,SAAUxG,EAAnB,EAAmBA,MAAnB,OAA8ByG,GAASD,EAAWxG,EAAMC,MAAMC,KAAOF,EAAMC,MAAMW,iBAC3E,gBAAE6F,EAAF,EAAEA,MAAOD,EAAT,EAASA,SAAT,OAAuBC,GAASD,EAAW,SAAW,UAElD,gBAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,gBAAT,OAA8BD,GAASC,EAAkB,YAAc,UAGtFC,GAAa1F,YAAOsF,GAAPtF,CAAH,oDAID,SAAS2F,GACpBpF,GAQA,IAAOqF,EAAiCrF,EAAjCqF,SAAUC,EAAuBtF,EAAvBsF,WAAYC,EAAWvF,EAAXuF,QACvBC,EAAiBF,EAAWlC,KAElC,EAA8BqC,mBAAiBH,EAAWI,cAA1D,mBAAOrC,EAAP,KAAgBsC,EAAhB,KACA,EAAgCF,mBAAiBH,EAAWM,eAA5D,mBAAOtC,EAAP,KAAiBuC,EAAjB,KACA,EAAkCJ,mBAAiBH,EAAWQ,gBAA9D,mBAAOvC,EAAP,KAAkBwC,EAAlB,KASA,OAPAC,qBAAU,WACN,QAAgBC,IAAZV,EAAuB,CACvB,IAAIW,EAAgB/C,GAAWgD,YAAY9C,EAASC,EAAUC,EAAWiC,GACzEH,EAASa,MAEd,CAACX,EAASlC,EAASC,EAAUC,EAAW8B,EAAUG,IAGjD,eAACrF,EAAD,WACI,cAACD,EAAD,eACuB+F,IAAlBjG,EAAMuF,SAEP,cAACjB,GAAD,CAAYE,SAAS,QAAQe,QAASvF,EAAMoG,YAA5C,SAAyD,cAAC,KAAD,QAE7D,eAAChG,EAAD,WACI,eAACyE,GAAD,CAAqBU,QAASvF,EAAMuF,QAApC,UACI,cAACb,GAAD,UACI,cAACK,GAAD,CACI/D,MAAOqC,EACPgD,YAAa,QACbrB,SAAsB,KAAZ3B,EACV4B,MAA0B,IAAnB5B,EAAQhC,OACf6D,qBAAmCe,IAAlBjG,EAAMuF,QACvBF,SAAU,SAACiB,GAAD,OAA6BX,EAAWW,EAAMC,OAAOvF,YAGvE,cAAC2D,GAAD,UACI,cAACI,GAAD,CACI/D,MAAOsC,EACP+C,YAAa,iBACbrB,SAAyC,OAA/BlD,GAAMM,WAAWkB,GAC3B2B,MAA2B,IAApB3B,EAASjC,OAChB6D,qBAAmCe,IAAlBjG,EAAMuF,QACvBF,SAAU,SAACiB,GAAD,OAA6BT,EAAYS,EAAMC,OAAOvF,MAAM0C,aAG9E,cAACkB,GAAD,UACI,cAACO,GAAD,CACInE,MAAOuC,EACP8C,YAAa,iBACbrB,SAAU/B,GAAeM,IAAc,EACvC0B,MAA4B,IAArB1B,EAAUlC,OACjB6D,qBAAmCe,IAAlBjG,EAAMuF,QACvBF,SAAU,SAACiB,GAAD,OAA6BP,EAAaO,EAAMC,OAAOvF,MAAM0C,gBAInF,cAACoB,GAAD,OAEJ,cAAC5E,EAAD,eACuB+F,IAAlBjG,EAAMuF,SAEP,cAACjB,GAAD,CAAYiB,QAASvF,EAAMwG,SAA3B,SAAqC,cAAC,KAAD,WCvH9C,I,wBAAMC,GAAYhH,IAAO+B,QAAQ+C,OAAM,SAACvE,GAAD,MAA+C,CACzF0G,IAAK1G,EAAM0G,IAAM1G,EAAM0G,IAAM,IAC7BC,OAAQ3G,EAAM2G,OAAS3G,EAAM2G,OAAS,OAFjBlH,CAAH,kJAIN,qBAAEiH,OACC,qBAAEC,UCLRC,GAAOnH,IAAO+B,QAAQ+C,OAAM,SAACvE,GAAD,MAA2D,CAChG6G,UAAW7G,EAAM6G,UACjBC,aAAc9G,EAAM8G,gBAFJrH,CAAH,+IAID,gBAAEoH,EAAF,EAAEA,UAAF,OAAiBA,QAAwBZ,KACtC,gBAAEa,EAAF,EAAEA,aAAF,OAAoBA,QAA8Bb,KAE/C,qBAAEzH,MAAiBC,MAAMQ,WAIlC8H,GAAgBtH,YAAOmH,GAAPnH,CAAH,6CAIbuH,GAAgBvH,IAAO+B,QAAV,iFAKbyF,GAAaxH,YAAOmH,GAAPnH,CAAH,+DClBjByH,GAAkBzH,IAAOG,IAAV,wEAMfuH,GAAY1H,IAAOV,OAAOwF,OAAM,SAACvE,GAAD,MAAgE,CAClGoH,OAAQpH,EAAMoH,OACdnG,MAAOjB,EAAMiB,MACbI,OAAQrB,EAAMqB,UAHA5B,CAAH,oUAQO,qBAAEjB,MAAiBC,MAAMQ,WAC9B,mBAAuB,IAAvB,EAAEgC,MAAyB,GAAK,UACjC,gBAAEmG,EAAF,EAAEA,OAAQ5I,EAAV,EAAUA,MAAV,OAAqB4I,EAAS5I,EAAMC,MAAMa,qBAAuBd,EAAMC,MAAMc,0BAEjE,mBAAuB,IAAvB,EAAE0B,MAAyB,GAAK,KAC/B,qBAAEA,QAAF,EAASI,OAA+B,EAAI,GAAK,KAMxEgG,GAAU5H,IAAOa,GAAV,wEAKAgH,GAAaC,IAAMC,cAAc,IAE/B,SAASC,GACpBzH,GAOA,MAA0CyF,mBAASzF,EAAM0H,sBAAzD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEA,OACI,eAAC,WAAD,WACI,cAACV,GAAD,UACKlH,EAAM6H,YAAY9G,KAAI,SAAC+G,EAAI7G,GACxB,OAAO,cAACkG,GAAD,CACWC,OAAQU,IAAOH,EACf1G,MAAOA,EACPI,OAAQrB,EAAMC,SAAUoB,OACxBkE,QAAS,kBAAMqC,EAAiBE,IAJ3C,SAKN,cAACT,GAAD,UAAUrH,EAAM+H,eAAe9G,MALT6G,QAQ/B,cAACR,GAAWU,SAAZ,CAAqBhH,MAAO2G,EAA5B,SACI,cAACV,GAAD,UACKjH,EAAMC,gBCxD3B,I,MAAMgI,GAAcxI,IAAO+B,QAAV,mEAKF,SAAS0G,GAAIlI,GACxB,IAAM2H,EAAgBQ,qBAAWb,IAEjC,OACI,cAACW,GAAD,UACKjI,EAAMoI,UAAYT,EACf3H,EAAMC,SAAW,OCb1B,I,YAAMoI,GAAK5I,IAAOa,GAAGiE,OAAM,SAACvE,GAAD,MAAoC,CAClE6G,UAAW7G,EAAM6G,aADHpH,CAAH,2EAGC,gBAAEoH,EAAF,EAAEA,UAAF,OAAiBA,GAAwB,WAI5CyB,GAAU7I,YAAO4I,GAAP5I,CAAH,kD,oBCJd8I,GAAM,mCAEUC,GAAtB,0FASI,SAAWC,GACP,OAAY,IAAJA,GAASC,QAdV,MAIf,qBAaI,SAAcC,EAA2BC,EAAmBrG,GACxD,IAAIsG,EAAYhG,WAAW+F,GAC3B,GAAKD,EAAYG,OAAM,SAAAhB,GAAE,OAAIA,aAAcnE,MAEpC,CACH,IAAIoF,EAAcJ,EAAY5H,KAAI,SAAC+G,GAAD,OAAqBA,EAAuBrE,UACzEuF,QAAO,SAACC,EAAcnB,GAAf,OAA8BmB,EAAOnB,IAAI,GACjDoB,EAAgBP,EAAYK,QAAO,SAACC,EAAcnB,GAAf,OACnCmB,EAAQnB,EAAuBtE,MAAM2F,OAAUrB,EAAuBrE,SAAQ,GAE9E2F,EAAkB,EAAIL,EAC1B,GAAIK,EAAkB,EAClB,OAAO,IAAIC,GACP,iCAAOd,GAAP,2CAAmD,+BAAK,IAAuB,IAAlBa,GAAwBV,QA9B1F,GA8BwD,OAAnD,sBACD,GAAwB,IAApBU,EACP,OAAO,IAAIE,GAAmBJ,GAElC,IAAIK,EAAqBL,EAAgBE,EACzC,GAAI3G,MAAMoG,GACN,OAAO,IAAIQ,GAAsC,KAAdT,EAAmB,wEAClD,iCAAOL,GAAP,kBAA0B,4BAAIK,IAA9B,oBAER,IAAIY,EAASX,EAAY,IAErBY,GADiBD,EAASN,GACYE,EACtCM,EAAoBD,EAAqBlH,EAC7C,OAAIkH,GAAsB,EACf,IAAIE,GAAqBT,GACzBO,EAAqB,EACrB,IAAIG,GAA0BH,EAAoBC,EAAkBF,EAAQD,GAE5E,IAAIM,GAAmBJ,EAAoBC,EAAkBN,GA5BxE,OAAO,IAAIC,GAAwB,mFAhB/C,KAkDeS,G,kDAKX,WAAsBL,EAA4BC,GAA2B,IAAD,8BACxE,gBALKD,wBAImE,IAHnEC,sBAGmE,EAExE,EAAKD,mBAAqBA,EAC1B,EAAKC,iBAAmBA,EAHgD,E,yDAM5E,WACI,OAAO1H,KAAK+H,WAAW/H,KAAKyH,sB,iCAGhC,WACI,OAAOzH,KAAK0H,iBAAiBhB,QAtEtB,K,qBAyEX,WACI,OAAO,M,GApB8BF,IAyBvCa,G,kDAGF,WAAYW,GAA8B,IAAD,8BACrC,gBAHKC,oBAEgC,EAErC,EAAKA,eAAiBD,EAFe,E,yDAKzC,WACI,MAvFiB,O,iCA0FrB,WACI,MA3FiB,O,qBA8FrB,WACI,OAA8B,MAAvBhI,KAAKiI,eAAyB,KAAO,4BAAIjI,KAAKiI,mB,qBAGzD,WACI,OAAO,M,GArBuBzB,IAyBzBc,GAAb,kDAGI,WAAYJ,GAAwB,IAAD,8BAC/B,cAAM,OAHDA,mBAE0B,EAE/B,EAAKA,cAAgBA,EAFU,EAHvC,2CAQI,WACI,OAAO,+GATf,2BAYI,WACI,OAAOlH,KAAK+H,WAAW/H,KAAKkH,mBAbpC,GAAwCG,IAiBlCO,G,kDAIF,WAAYH,EAA4BC,EAA0BF,EAAgBD,GAA6B,IAAD,8BAC1G,cAAME,EAAoBC,IAJrBF,YAGqG,IAFrGD,wBAEqG,EAE1G,EAAKC,OAASA,EACd,EAAKD,mBAAqBA,EAHgF,E,2CAM9G,WACI,OAAO,gEAAmCvH,KAAK+H,WAAW/H,KAAKwH,QAAxD,KAAkE,uBAAlE,6CACA,8BAAIxH,KAAK+H,WAAW/H,KAAKuH,oBAAzB,OADA,W,GAXyBO,IAgB3BD,GAAb,kDAGI,WAAYJ,EAA4BC,EAA0BN,GAA0B,IAAD,8BACvF,cAAMK,EAAoBC,IAHrBN,qBAEkF,EAEvF,EAAKA,gBAAkBA,EAFgE,EAH/F,2CAQI,WACI,OAAO,oDAAsB,8BAAIpH,KAAK+H,WAAW/H,KAAKoH,iBAAzB,OAAtB,8BATf,GAAwCU,IAclCH,G,kDAGF,WAAYT,GAAwB,IAAD,8BAC/B,cAAM,OAHDA,mBAE0B,EAE/B,EAAKA,cAAgBA,EAFU,E,2CAKnC,WACI,OAAO,2EAA6C,8BAAIlH,KAAK+H,WAAW/H,KAAKkH,eAAzB,OAA7C,W,GAToBG,IChJtBa,GAAUzK,IAAOmB,KAAK2D,OAAM,SAACvE,GAAD,MAAsC,CAC3EmK,YAAanK,EAAMmK,eADA1K,CAAH,4GAGF,gBAAE0K,EAAF,EAAEA,YAAF,OAAmBA,QAA4BlE,KACtD,qBAAEzH,MAAiBC,MAAMC,QAIvB0L,GAAK3K,IAAOmB,KAAK2D,OAAM,SAACvE,GAAD,MAAkC,CAClEqK,QAASrK,EAAMqK,WADD5K,CAAH,6CAGJ,gBAAE4K,EAAF,EAAEA,QAAS7L,EAAX,EAAWA,MAAX,OAAsB6L,EAAU7L,EAAMC,MAAMI,UAAYL,EAAMC,MAAMK,eAGzEwL,GAAc7K,IAAOmB,KAAV,6CACN,qBAAEpC,MAAiBC,MAAMK,eAG9ByL,GAAK9K,IAAO+K,EAAV,mDAOO,SAASC,GAAczK,GAClC,IAAM2I,EAAc3I,EAAM2I,YAC1B,cAAkC3I,EAAM0K,YAAxC,GAAO9B,EAAP,KAAkB+B,EAAlB,KACA,cAAgC3K,EAAM4K,WAAtC,GAAOC,EAAP,KAAiBC,EAAjB,KAEMvI,EAAQwI,mBAAQ,kBAAMlI,WAAWgI,KAAW,CAACA,IAC7CrI,EAASuI,mBAAQ,kBACfvC,GAAiBwC,OAAOrC,EAAaC,EAAYnG,MAAMF,GC1CrC,ID0C8CA,KACpE,CAACoG,EAAaC,EAAWrG,IAG7B,OAAIC,aAAkB8G,GAEd,eAAC,WAAD,WACI,cAAChB,GAAD,2BACC9F,EAAOyI,UACR,cAACf,GAAD,UAAS,cAACE,GAAD,CAAIC,SAAS,EAAb,SAAoB7H,EAAO0I,oBAA+B,cAACZ,GAAD,mBAKvE,eAAC,WAAD,WACI,cAAChC,GAAD,iCACA,eAACgC,GAAD,WACI,cAAC,KAAD,CAAetJ,MAAO4H,EACPuC,UAAW,EACXC,WAAY,CACR5G,SAAU,OACV6G,WAAY,IACZC,OAAQ,QAEZC,KAAK,UACLlF,YAAY,KACZhB,SAAU,SAACiB,GAAD,OACNqE,EAAarE,EAAMC,OAAOvF,MAAM0C,WAXvD,OAgBA,cAAC2E,GAAD,8BACC7F,EAAOyI,UACPzI,aAAkBqH,IACnB,iCACQ,cAACK,GAAD,CAASC,YAAY,MAArB,SAA2B,cAACC,GAAD,CACvBC,QAAS7H,EAAOgJ,UADO,SACKhJ,EAAOiJ,4BAAuC,cAACnB,GAAD,gBAC9E,cAACC,GAAD,qBACA,eAACL,GAAD,WAAS,cAACE,GAAD,CACLC,QAAS7H,EAAOgJ,UADX,SACuBhJ,EAAOkJ,wBAA2B,cAACpB,GAAD,mBAClE,cAAC,KAAD,CAAetJ,MAAO6J,EACPO,WAAY,CACR5G,SAAU,OACV6G,WAAY,IACZC,OAAQ,QAEZH,UAAW,EACXI,KAAK,UACLlF,YC3FT,KD2FqCtD,WAC5BsC,SAAU,SAACiB,GAAD,OACNwE,EAAYxE,EAAMC,OAAOvF,MAAM0C,iBExF3D,SAASiI,GAASC,GAC7B,OACI,cAACtD,GAAD,2B,8BCmBR,SAASuD,GAAgBC,GACrB,IAAKA,EAAM3H,MAAM4H,SAAS,cACtB,OAAO,KAGX,OAAQD,EAAM3H,OACV,IAAK,kBACD,GAAI2H,EAAME,eAAe,YAAa,CAClC,IAAIvI,EAASR,GAAe6I,EAAMvI,WAC9BC,EAAsB1B,GAAMM,WAAW0J,EAAMxI,UACjD,OAAIE,IAAUf,MAAMgB,GACT,IAAIE,GAAgBG,eAAUgI,EAAM9H,KAAMR,EAAOC,EAAQqI,EAAMvI,WAEnE,IAAIK,GAAeE,eAAUgI,EAAM9H,KAAM8H,EAAMxI,SAAUwI,EAAMvI,WAEtE,OAAO,IAAIK,GAAeE,eAAUgI,EAAM9H,KAAM,GAAI8H,EAAMvI,WAElE,IAAK,iBACD,OAAO,IAAIK,GAAeE,eAAUgI,EAAMzI,QAASyI,EAAMxI,SAAWwI,EAAMxI,SAAW,GAAIwI,EAAMvI,WACnG,QACI,OAAO,M,wCCpCb0I,GAAYxM,IAAO4E,MAAV,iLAEO,qBAAE7F,MAAiBC,MAAMQ,WAKvB,qBAAET,MAAiBC,MAAMC,QAK3CyB,GAAUV,IAAOG,IAAV,4HAOPsM,GAAazM,IAAOC,EAAV,mHAIL,qBAAElB,MAAiBC,MAAMI,aAGpC,SAASsN,GACLzK,EACAiH,EACAyD,GAEA,IAAIC,EAAS,IAAIC,gBASjB,OARAD,EAAOE,OAAO,QAASC,kBACnBC,KAAKC,UACD,CACIhL,MAAOA,EAAOiH,YAAaA,EACtBgE,QAAO,SAAA7E,GAAE,OAAIA,aAAc/D,MAC3BhD,KAAI,SAAC+G,GAAD,OAAQsE,EAAatE,UAGnC,WAAa8E,OAAOC,SAASC,KAAgC,KAAOT,EAAOtJ,WAIvE,SAASgK,GAAW/M,GAC/B,IAAK0B,EAAsB1B,EAAtB0B,MAAOiH,EAAe3I,EAAf2I,YACNqE,EAAejC,mBAAQ,kBACrBoB,GAASzK,EAAOiH,GAAa,SAACb,GAAD,OAAQA,EAAGmF,gBAC5C,CAACvL,EAAOiH,IAENuE,EAAmBnC,mBAAQ,kBACzBoB,GAASzK,EAAOiH,GAAa,SAACb,GAAD,OAAQA,EAAGqF,oBAC5C,CAACzL,EAAOiH,IAEZ,EAA4BlD,mBAAwB,MAApD,mBAAO2H,EAAP,KAAeC,EAAf,KAEA,OACI,eAACrG,GAAD,WACI,cAACqB,GAAD,CAAIxB,UAAW,SAAf,wCACY,SAAXuG,GACD,cAAClB,GAAD,sBACA,eAAC,GAAD,WACI,cAACD,GAAD,CAAWqB,UAAQ,EAACtM,MAAOgM,IAC3B,cAAC,mBAAD,CACItO,KAAMsO,EACNO,OAAQ,kBAAMF,EAAU,SAF5B,SAII,cAAC5I,GAAD,UAAiB,cAAC,KAAD,WAGzB,cAAC4D,GAAD,6BACY,aAAX+E,GACD,cAAClB,GAAD,sBACA,eAAC,GAAD,WACI,cAACD,GAAD,CAAWqB,UAAQ,EAACtM,MAAOkM,IAC3B,cAAC,mBAAD,CACIxO,KAAMwO,EACNK,OAAQ,kBAAMF,EAAU,aAF5B,SAII,cAAC5I,GAAD,UAAiB,cAAC,KAAD,c,kCCnE/B+I,GAAc/N,YAAO2E,GAAP3E,CAAH,wGAOXgO,GAAkBhO,IAAOV,OAAV,iUAeL,qBAAEP,MAAiBC,MAAMW,iBAGnCsO,GAAgBjO,IAAOkO,EAAV,0DAabC,GAAmC,GAS1B,SAASC,KACpB,MAAsCpI,mBAAQ,UAAmBmI,GAAnB,CAAuCzK,GAAW2K,WAAhG,mBAAOnF,EAAP,KAAoBoF,EAApB,KACA,EAA0CtI,oBAAkB,GAA5D,mBAAOuI,EAAP,KAAsBC,EAAtB,KACA,EAA0BxI,mBAAiB,IAA3C,mBAAO/D,EAAP,KAAcwM,EAAd,KACMC,EAAwB1I,mBAAS,IACjCmF,EAAanF,mBAAS,IAEtB2I,EAAUC,eAEZC,EAZG,IAAIhC,gBAAgBiC,eAAcC,QAYZC,IAAI,SAC7BC,EAAuBC,uBAAY,WACnC,IAAIC,EAAiBpC,kBACjBC,KAAKC,UACD,CAAChL,MAAOA,EAAOiH,YAAaA,EACnBkG,MAAM,GAAI,GACV9N,KAAI,SAAC+G,GAAD,OAASA,EAA8BmF,iBAG5D,GAAIqB,GAAeA,IAAgBM,EAAgB,CAC/C,IAAIE,EFnFT,SAAmBC,GACtB,IAAIC,EAAWvC,KAAKwC,MAAMF,GACtBpG,EAA4B,GAC5BjH,EAAgBsN,EAAStN,MAAQsN,EAAStN,MAAQ,GACtD,IAAKsN,EAAShD,eAAe,eACzB,OAAO,KAL4E,qBAOrEgD,EAASrG,aAP4D,IAOvF,2BAAwC,CAAC,IACjCrD,EAAauG,GADmB,SAEhCvG,GACAqD,EAAYuG,KAAK5J,IAV8D,8BAevF,MAAO,CACH5D,MAAOA,EACPiH,YAAaA,GEkEQwG,CAAUC,kBAAOd,IACf,OAAfQ,IACAZ,EAASY,EAAWpN,OACpBqM,EAAe,GAAD,mBACPe,EAAWnG,aADJ,CAEVxF,GAAW2K,eAIxB,CAACnF,EAAa2F,EAAa5M,IAmE9B,SAAS2N,IACLtB,GAAe,SAACuB,GACZ,IAAIC,EAAM,YAAOD,GAEjB,OADAC,EAAOL,KAAK/L,GAAW2K,SAChByB,KAIf,OAzEAvJ,qBAAU,WACN0I,MAED,IA0BHc,aAAa,CACTC,QAAS,IACTC,OA1BJ,WACI,IAAId,EAAiBpC,kBACjBC,KAAKC,UACD,CAAChL,MAAOA,EAAOiH,YAAaA,EACnBgE,QAAO,SAAA7E,GAAE,OAAIA,aAAc/D,MAC3BhD,KAAI,SAAC+G,GAAD,OAASA,EAA8BmF,iBAW5D,GAAIqB,IAAgBM,EAAgB,CAEhC,IAAIvC,EAAS,IAAIC,gBACjBD,EAAOE,OAAO,QAASqC,GACvBR,EAAQuB,QAAQ,CAACnB,OAAQnC,EAAOtJ,eAOpC6M,SAAU,MA0CV,eAAC,WAAD,WACI,eAACnJ,GAAD,CAAWE,OAAO,OAAlB,UACI,cAAC+G,GAAD,CAAemC,KAAMC,GAArB,SAA6C,cAAC/P,EAAD,iCAC7C,eAACP,EAAD,yFACM,2CADN,OAC2B,sCAD3B,UAGJ,cAACiC,EAAD,CAAOC,MACH,cAAC8L,GAAD,CACIxM,MAAOU,EACP2D,SAAU,SAACiB,GAAD,OAA6B4H,EAAS5H,EAAMC,OAAOvF,QAC7DqF,YAAY,UAClBvF,QAAS,CAAC,aAAc,QAAS,UACnCQ,MAAO,CAAC,GAAI,WAAY,KANxB,SAOKqH,EAAY5H,KAAI,SAACC,EAAOC,GAAR,OAAkB,cAACmE,GAAD,CAE/BE,WAAYtE,EACZqE,SAAU,SAACC,GAAD,OArC1B,SAA0BA,EAAwBrE,GAC1C0H,EAAY1H,GAAOiD,OAAOoB,IAI9ByI,GAAe,SAACuB,GACZ,IAAIC,EAAM,YAAOD,GAEjB,OADAC,EAAOtO,GAASqE,EACTiK,KA6BuCQ,CAAiBzK,EAAYrE,IACnEsE,QAAStE,IAAU0H,EAAYtH,OAAS,EAAIgO,OAASpJ,EACrDG,YAAa,kBAzD7B,SAA6BnF,GACzB8M,GAAe,SAACuB,GACZ,IAAIC,EAAM,YAAOD,GAEbU,EADwBV,EAAmBrO,GACLgP,QAE1C,OADAV,EAAOW,OAAOjP,EAAO,EAAG+O,GACjBT,KAmDoBY,CAAoBlP,IACvCuF,SAAU,kBAhD1B,SAA0BvF,GACtB8M,GAAe,SAACuB,GACZ,IAAIC,EAAM,YAAOD,GAEjB,OADAC,EAAOW,OAAOjP,EAAO,GACdsO,KA4CiBa,CAAiBnP,KAL5BD,EAAMoC,WAQnB,cAACqD,GAAD,CAAWC,IAAI,OAAf,SACI,eAACe,GAAD,CAAQC,qBAAqB,mBACrBG,YAAa,CAAC,mBAAoB,eAClCE,eAAgB,CAAC,8CAAgB,8CAC7B,+CAAiB,0CAH7B,UAII,cAACG,GAAD,CAAKE,QAAQ,mBAAb,SAEI,cAACqC,GAAD,CAAe9B,YAAaA,EAAYkG,MAAM,GAAI,GACnCnE,YAAayD,EACbvD,WAAYA,MAG/B,cAAC1C,GAAD,CAAKE,QAAQ,cAAb,SAEI,cAACuD,GAAD,CAAUhD,YAAaA,EAAYkG,MAAM,GAAI,YAIzD,cAACpI,GAAD,UACI,eAACM,GAAD,CAAeF,UAAU,OAAzB,UACI,eAAC4G,GAAD,CAAiBlI,QAAS,kBAAM0I,GAAiB,SAAChF,GAAD,OAAWA,MAA5D,UACI,cAAC,KAAD,IADJ,YAGC+E,GACD,cAACjB,GAAD,CAAYrL,MAAOA,EAAOiH,YAAaA,EAAYkG,MAAM,GAAI,aCjNjF,IAAMwB,GAAc5Q,IAAOC,EAAV,qEAIX4Q,GAAkB7Q,YAAO4Q,GAAP5Q,CAAH,6CAIf8Q,GAAmB9Q,YAAO4Q,GAAP5Q,CAAH,oEAKhB+Q,GAAS/Q,IAAOgR,OAAV,iDAsBGC,OAlBf,WACI,OACI,qBAAKC,UAAU,MAAf,SACI,eAAC,IAAD,CAAenS,MAAOA,EAAtB,UACI,cAAC,IAAD,CAAeoS,SAAUd,GAAzB,SACI,cAACjC,GAAD,MAEJ,eAAC2C,GAAD,WACI,cAACF,GAAD,UACI,mBAAGT,KAAK,4DAAR,+BAER,eAACU,GAAD,sBAA0B,mBAAGV,KAAK,qBAAR,qCCxB3BgB,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFxC,SAASyC,eAAe,SAM1BZ,O","file":"static/js/main.241b7a12.chunk.js","sourcesContent":["/**\n * The theme\n */\nexport const theme = {\n    color: {\n        text: \"#000000\",\n        headerUnderline: \"#000000\",\n        contentUnderline: \"#E5E5E5\",\n        highlight: \"#9134ED\",\n        utilityText: \"#898989\",\n        button: \"#898989\",\n        buttonPressed: \"#000000\",\n        outline: \"#D0D0D0\",\n        outlineNone: \"#D0D0D0\",\n        outlineAccept: \"#13783B\",\n        outlineReject: \"#C51F1F\",\n        cardBackground: \"#FFFFFF\",\n        cardActiveBackground: \"#FFFFFF\",\n        cardInactiveBackground: \"#F2F2F2\",\n    }\n};\n","import styled from \"styled-components\";\n\nexport const Instruction = styled.p`\n  text-align: left;\n  margin: 0 5% 30px;\n  @media only screen and (min-width: 768px) {\n    text-align: center;\n    margin-left: 0;\n    margin-right: 0;\n  }\n`\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst TitleContainer = styled.div`\n  margin-left: 5%;\n  margin-right: 5%;\n`\n\nconst StyledTitle = styled.p`\n  font-size: 3em;\n  font-weight: 600;\n  line-height: 1.1;\n  text-align: start;\n  padding-top: min(1.0em, 10vw);\n  margin-top: 0;\n  margin-bottom: 0;\n  max-width: 50vw;\n  color: ${({theme}) => theme.color.text};\n  @media only screen and (min-width: 768px) {\n    padding-top: 2em;\n    max-width: 100vw;\n    text-align: center;\n  }\n`\n\nconst Block = styled.div`\n  margin-top: 15px;\n  margin-bottom: 30px;\n  width: 25%;\n  height: 5px;\n  background: ${({theme}) => theme.color.highlight};\n  @media only screen and (min-width: 768px) {\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`\n\nexport default function Title(props: { children: React.ReactNode }) {\n    return (\n        <TitleContainer>\n            <StyledTitle>{props.children}</StyledTitle>\n            <Block/>\n        </TitleContainer>\n    );\n}\n\n","import styled from \"styled-components\";\n\nexport const SpacerDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  flex: 0.5;\n`\n\n","import styled from \"styled-components\";\n\nexport const FlexDiv = styled.div`\n    display: flex;\n`\nexport const FlexChild6 = styled.div`\n    flex: 6;\n`\n\n","import styled from \"styled-components\";\nimport React, {ReactElement} from \"react\";\nimport {SpacerDiv} from \"./SpacerDiv\";\nimport {FlexChild6, FlexDiv} from \"./Flex\";\n\nconst FirstHeaderCol = styled.h3`\n  text-align: start;\n  flex: 3;\n`\nconst HeaderCol = styled.h3`\n  text-align: start;\n  flex: 2;\n`\n\nconst LastHeaderCol = styled.h3`\n  text-align: end;\n  flex: 1;\n`\n\nconst HeaderRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst HeaderUnderline = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 2px;\n  background: ${({theme}) => theme.color.headerUnderline};\n`\n\nconst Hint = styled.span`\n  font-size: 0.8em;\n  font-weight: normal;\n  color: ${({theme}) => theme.color.utilityText};\n`\n\nconst makeHeaderItem = (value: string, index: number, len: number, hint: string): ReactElement => {\n    // first\n    if (index === 0) {\n        return <FirstHeaderCol key={index}>{value}<br/><Hint>{hint}</Hint></FirstHeaderCol>\n    } else if (index === len - 1) { // last\n        return <LastHeaderCol key={index}>{value}<br/><Hint>{hint}</Hint></LastHeaderCol>\n    } else {\n        return <HeaderCol key={index}>{value}<br/><Hint>{hint}</Hint></HeaderCol>\n    }\n}\nexport default function HeaderRow(props: { headers: string[], hints: string[] }) {\n\n    return (\n        <FlexDiv>\n            <SpacerDiv/>\n            <FlexChild6>\n                <HeaderRowContainer>\n                    {props.headers.map((value, index) => makeHeaderItem(value, index, props.headers.length, props.hints[index]))}\n                </HeaderRowContainer>\n                <HeaderUnderline/>\n            </FlexChild6>\n            <SpacerDiv/>\n        </FlexDiv>\n    );\n}\n","import React from \"react\";\nimport HeaderRow from \"./HeaderRow\";\nimport styled from \"styled-components\";\nimport {FlexChild6, FlexDiv } from \"./Flex\";\nimport { SpacerDiv } from \"./SpacerDiv\";\n\nconst WiderSection = styled.section`\n  margin: auto;\n  width: min(640px, 95vw);\n`\n\nexport default function Table(\n    props: { title: React.ReactNode, headers: string[], hints: string[], children?: React.ReactNode }\n) {\n\n    return (\n        <WiderSection>\n            <FlexDiv>\n                <SpacerDiv/>\n                <FlexChild6>\n                    {props.title}\n                </FlexChild6>\n                <SpacerDiv/>\n            </FlexDiv>\n            <HeaderRow headers={props.headers} hints={props.hints}/>\n            {props.children}\n        </WiderSection>\n    );\n}\n","export const fractionRegex = /^[0-9]+(?:\\.[0-9]+)?\\/[0-9]+(?:\\.[0-9]+)?$/;\nexport const percentageRegex = /^[0-9]+(?:\\.[0-9]+)?%$/;\nexport const numberRegex = /^[0-9]+(?:\\.[0-9]+)?$/;\n\n","import {fractionRegex, numberRegex, percentageRegex} from \"./Regex\";\n\nexport abstract class Score {\n    readonly str: string;\n\n    protected constructor(str: string) {\n        this.str = str;\n    }\n\n    static fromString(str: string): Score | null {\n        if (fractionRegex.test(str)) {\n            return FractionScore.fromString(str);\n        } else {\n            return PercentageScore.fromString(str);\n        }\n    }\n\n    abstract calc(): number\n\n    abstract toString(): string\n\n    toInputString(): string {\n        return this.str;\n    }\n\n    equals(other: Score | null): boolean {\n        return this.str === other?.str;\n    }\n\n}\n\nclass FractionScore extends Score {\n    readonly achieved: number;\n    readonly outOf: number;\n\n\n    constructor(str: string, achieved: number, outOf: number) {\n        super(str);\n        this.achieved = achieved;\n        this.outOf = outOf;\n    }\n\n    static fromString(str: string): FractionScore | null {\n        let splits: string[] = str.split(\"/\");\n        if (splits.length !== 2) {\n            throw new Error(\"Invalid FractionScore string\");\n        }\n        let achieved = parseFloat(splits[0]);\n        let outOf = parseFloat(splits[1]);\n        return new FractionScore(str, achieved, outOf);\n    }\n\n    calc(): number {\n        let result = this.achieved / this.outOf;\n        return isNaN(result) ? 0 : result;\n    }\n\n    equals(other: Score | null): boolean {\n        if (other instanceof FractionScore) {\n            return super.equals(other)\n                && this.achieved === other.achieved\n                && this.outOf === other.outOf;\n        }\n        return false;\n    }\n\n    toInputString(): string {\n        return this.str;\n    }\n\n    toString(): string {\n        return this.achieved + \"/\" + this.outOf;\n    }\n}\n\nclass PercentageScore extends Score {\n    readonly percentage: number;\n\n    constructor(str: string, percentage: number) {\n        super(str);\n        this.percentage = percentage;\n    }\n\n    static fromString(str: string): PercentageScore | null {\n        if (numberRegex.test(str)) {\n            return new PercentageScore(str, parseFloat(str) / 100);\n        } else if (percentageRegex.test(str)) {\n            return new PercentageScore(str, parseFloat(str.substr(0, str.length - 1)) / 100);\n        }\n        return null;\n    }\n\n    calc(): number {\n        return this.percentage;\n    }\n\n    equals(other: Score | null): boolean {\n        if (other instanceof PercentageScore) {\n            return super.equals(other)\n                && this.percentage === other.percentage;\n        }\n        return false;\n    }\n\n    toString(): string {\n        return (this.percentage * 100).toString();\n    }\n}\n","import {Score} from \"./Score\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {numberRegex, percentageRegex} from \"./Regex\";\n\n\nexport function numOrPercToStr(str: string): number {\n    if (percentageRegex.test(str)) {\n        return parseFloat(str.substr(0, str.length - 1)) / 100;\n    } else if (numberRegex.test(str)) {\n        return parseFloat(str) / 100;\n    } else {\n        return NaN;\n    }\n}\n\nexport function numToStr(num: number): string {\n    return (num*100).toString();\n}\n\nexport abstract class Assignment {\n    readonly uuid: string;\n\n    abstract getNameStr(): string;\n\n    abstract getScoreStr(): string;\n\n    abstract getWeightStr(): string;\n\n\n    constructor(uuid: string) {\n        this.uuid = uuid;\n    }\n\n    abstract clone(): Assignment\n\n    abstract equals(other: Assignment): boolean;\n\n    static fromStrings(nameStr: string, scoreStr: string, weightStr: string, uuid: string): Assignment {\n        let score = Score.fromString(scoreStr)\n        let weight = numOrPercToStr(weightStr);\n        if (nameStr.trim().length !== 0 && score && !isNaN(weight)) {\n            return new ValidAssignment(uuid, nameStr, score, weight, weightStr);\n        }\n        return new StubAssignment(uuid, nameStr, scoreStr, weightStr);\n    }\n\n    static ofAdd(): Assignment {\n        return new AddButtonAssignment(uuidv4());\n    }\n\n}\n\nexport abstract class SerializableAssignment extends Assignment {\n\n    abstract fullJSON(): any\n\n    abstract templateJSON(): any\n}\n\nexport class ValidAssignment extends SerializableAssignment {\n    readonly name: string;\n    readonly score: Score;\n    readonly weight: number;\n    readonly weightStr: string;\n\n    getNameStr(): string {\n        return this.name;\n    }\n\n    getScoreStr(): string {\n        return this.score.toInputString();\n    }\n\n    getWeightStr(): string {\n        return this.weightStr;\n    }\n\n    constructor(uuid: string, name: string, score: Score, weight: number, weightStr: string) {\n        super(uuid);\n        this.name = name;\n        this.score = score;\n        this.weight = weight;\n        this.weightStr = weightStr;\n    }\n\n    equals(other: Assignment): boolean {\n        if (other instanceof ValidAssignment) {\n            return this.name === other.name\n                && this.score.equals(other.score)\n                && this.weight === other.weight;\n        }\n        return false;\n    }\n\n    clone(): Assignment {\n        return new ValidAssignment(uuidv4(), this.name, this.score, this.weight, this.weightStr);\n    }\n\n    toString(): string {\n        return \"name: \" + this.name + \", score: \" + this.score + \", weight: \" + this.weight;\n    }\n\n    fullJSON(): any {\n        return {\n            clazz: \"ValidAssignment\",\n            name: this.name,\n            scoreStr: this.score.str,\n            weightStr: this.weightStr,\n        };\n    }\n\n    templateJSON(): any {\n        return {\n            clazz: \"ValidAssignment\",\n            name: this.name,\n            weightStr: this.weightStr,\n        };\n    }\n\n}\n\nexport class StubAssignment extends SerializableAssignment {\n    readonly nameStr: string;\n    readonly scoreStr: string;\n    readonly weightStr: string;\n\n    getNameStr(): string {\n        return this.nameStr;\n    }\n\n    getScoreStr(): string {\n        return this.scoreStr;\n    }\n\n    getWeightStr(): string {\n        return this.weightStr;\n    }\n\n    constructor(uuid: string, nameStr: string, scoreStr: string, weightStr: string) {\n        super(uuid);\n        this.nameStr = nameStr;\n        this.scoreStr = scoreStr;\n        this.weightStr = weightStr;\n    }\n\n\n    clone(): Assignment {\n        return new StubAssignment(uuidv4(), this.nameStr, this.scoreStr, this.weightStr);\n    }\n\n    equals(other: Assignment): boolean {\n        if (other instanceof StubAssignment) {\n            return this.nameStr === other.nameStr\n                && this.scoreStr === other.scoreStr\n                && this.weightStr === other.weightStr;\n        }\n        return false;\n    }\n\n    fullJSON(): any {\n        return {\n            clazz: \"StubAssignment\",\n            nameStr: this.nameStr,\n            scoreStr: this.scoreStr,\n            weightStr: this.weightStr,\n        };\n    }\n\n    templateJSON(): any {\n        return {\n            clazz: \"StubAssignment\",\n            nameStr: this.nameStr,\n            weightStr: this.weightStr,\n        };\n    }\n}\n\nexport class AddButtonAssignment extends Assignment {\n\n    getNameStr(): string {\n        return \"\";\n    }\n\n    getScoreStr(): string {\n        return \"\";\n    }\n\n    getWeightStr(): string {\n        return \"\";\n    }\n\n    equals(other: Assignment): boolean {\n        return other instanceof AddButtonAssignment;\n    }\n\n\n    clone(): Assignment {\n        return new AddButtonAssignment(uuidv4());\n    }\n}\n\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nexport type InputChangeEvent = React.ChangeEvent<HTMLInputElement>\n\nexport const StyledInput = styled.input`\n  border: none;\n  width: 100%;\n  box-sizing: border-box;\n\n`\n","import styled from \"styled-components\";\n\nexport const IconButton = styled.button.attrs((props: { fontSize?: string }) => ({\n    fontSize: props.fontSize,\n}))`\n  background: none;\n  border: none;\n  text-align: center;\n  font-size: ${({fontSize}) => fontSize ? fontSize : \"1.3em\"};\n  color: ${({theme}) => theme.color.button};\n\n  &:hover {\n    color: ${({theme}) => theme.color.buttonPressed};\n  }\n`\n\nexport const FixedIconButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 1.5em;\n  padding-right: 0;\n  width: 2.5rem;\n  color: ${({theme}) => theme.color.button};\n\n  &:hover {\n    color: ${({theme}) => theme.color.buttonPressed};\n  }\n`\n\n\n","import styled from \"styled-components\";\nimport React, {useEffect, useState} from \"react\";\nimport {Assignment, numOrPercToStr} from \"../model/Assignment\";\nimport {Score} from \"../model/Score\";\nimport {SpacerDiv} from \"./SpacerDiv\";\nimport {FlexChild6, FlexDiv} from \"./Flex\";\nimport {InputChangeEvent, StyledInput} from \"./StyledInput\";\nimport { IconButton } from \"./IconButton\";\nimport { IoCloseOutline, IoDuplicateSharp } from \"react-icons/io5\";\n\nconst FirstContentCol = styled.p`\n  text-align: start;\n  flex: 3;\n`\nconst ContentCol = styled.p`\n  text-align: start;\n  flex: 1.5;\n`\n\nconst LastContentCol = styled.p`\n  text-align: end;\n  flex: 1.5;\n`\n\nconst ContentRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst ContentUnderline = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 1px;\n  background: ${({theme}) => theme.color.contentUnderline};\n`\n\nconst Input = styled(StyledInput).attrs((props: { accepted: boolean, empty: boolean, shouldUnderline: boolean }) => ({\n    accepted: props.accepted,\n    empty: props.empty,\n    shouldUnderline: props.shouldUnderline,\n}))`\n  font-size: 1em;\n  color: ${({empty, accepted, theme}) => empty || accepted ? theme.color.text : theme.color.outlineReject};\n  font-weight: ${({empty, accepted}) => empty || accepted ? \"normal\" : \"bold\"};\n  width: 100%;\n  text-decoration: ${({empty, shouldUnderline}) => empty && shouldUnderline ? \"underline\" : \"none\"};\n`\n\nconst RightInput = styled(Input)`\n  text-align: right;\n`\n\nexport default function ContentRow(\n    props: {\n        assignment: Assignment,\n        onChange: (assignment: Assignment) => void,\n        onClick?: () => void\n        onDuplicate?: () => void\n        onDelete?: () => void\n    }\n) {\n    const {onChange, assignment, onClick} = props;\n    const assignmentUUID = assignment.uuid;\n\n    const [nameStr, setNameStr] = useState<string>(assignment.getNameStr());\n    const [scoreStr, setScoreStr] = useState<string>(assignment.getScoreStr());\n    const [weightStr, setWeightStr] = useState<string>(assignment.getWeightStr());\n\n    useEffect(() => {\n        if (onClick === undefined) {\n            let strAssignment = Assignment.fromStrings(nameStr, scoreStr, weightStr, assignmentUUID);\n            onChange(strAssignment);\n        }\n    }, [onClick, nameStr, scoreStr, weightStr, onChange, assignmentUUID])\n\n    return (\n        <FlexDiv>\n            <SpacerDiv>\n                {props.onClick === undefined &&\n                // ×\n                <IconButton fontSize=\"1.1em\" onClick={props.onDuplicate}><IoDuplicateSharp/></IconButton>}\n            </SpacerDiv>\n            <FlexChild6>\n                <ContentRowContainer onClick={props.onClick}>\n                    <FirstContentCol>\n                        <Input\n                            value={nameStr}\n                            placeholder={\"Title\"}\n                            accepted={nameStr !== \"\"}\n                            empty={nameStr.length === 0}\n                            shouldUnderline={props.onClick === undefined}\n                            onChange={(event: InputChangeEvent) => setNameStr(event.target.value)}\n                        />\n                    </FirstContentCol>\n                    <ContentCol>\n                        <Input\n                            value={scoreStr}\n                            placeholder={\"Score Achieved\"}\n                            accepted={Score.fromString(scoreStr) !== null}\n                            empty={scoreStr.length === 0}\n                            shouldUnderline={props.onClick === undefined}\n                            onChange={(event: InputChangeEvent) => setScoreStr(event.target.value.trim())}\n                        />\n                    </ContentCol>\n                    <LastContentCol>\n                        <RightInput\n                            value={weightStr}\n                            placeholder={\"Overall Weight\"}\n                            accepted={numOrPercToStr(weightStr) <= 1}\n                            empty={weightStr.length === 0}\n                            shouldUnderline={props.onClick === undefined}\n                            onChange={(event: InputChangeEvent) => setWeightStr(event.target.value.trim())}\n                        />\n                    </LastContentCol>\n                </ContentRowContainer>\n                <ContentUnderline/>\n            </FlexChild6>\n            <SpacerDiv>\n                {props.onClick === undefined &&\n                // ×\n                <IconButton onClick={props.onDelete}><IoCloseOutline/></IconButton>}\n            </SpacerDiv>\n        </FlexDiv>\n    );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.section.attrs((props: { top?: string, bottom?: string }) => ({\n    top: props.top ? props.top : \"0\",\n    bottom: props.bottom ? props.bottom : \"0\",\n}))`\n  margin-top: ${({top}) => top};\n  margin-bottom: ${({bottom}) => bottom};\n  margin-left: auto;\n  margin-right: auto;\n  width: min(550px, 90vw);\n`\n\n","import styled from \"styled-components\";\n\nexport const Card = styled.section.attrs((props: { marginTop?: string, marginBottom?: string }) => ({\n    marginTop: props.marginTop,\n    marginBottom: props.marginBottom,\n}))`\n  margin-top: ${({marginTop}) => marginTop ? marginTop : undefined};\n  margin-bottom: ${({marginBottom}) => marginBottom ? marginBottom : undefined};\n  padding: 1.5rem;\n  border: solid 1px ${({theme}) => theme.color.outline};\n  border-radius: 10px;\n`\n\nexport const NoPaddingCard = styled(Card)`\n  padding: 0;\n`\n\nexport const CardContainer = styled.section`\n  text-align: start;\n  padding: 0 1.5rem 1.5rem;\n`\n\nexport const BottomCard = styled(Card)`\n  border-radius: 0 0 10px 10px;\n`\n\n","import React, {Fragment, useState} from \"react\";\nimport styled from \"styled-components\";\nimport { BottomCard } from \"./Card\";\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\n// noinspection CssReplaceWithShorthandSafely\nconst TabButton = styled.button.attrs((props: { active: boolean, index: number, length: number }) => ({\n    active: props.active,\n    index: props.index,\n    length: props.length,\n}))`\n  margin: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  border: solid 1px ${({theme}) => theme.color.outline};\n  border-left: ${({index}) => index === 0 ? \"\" : \"none\"};\n  background: ${({active, theme}) => active ? theme.color.cardActiveBackground : theme.color.cardInactiveBackground};\n  flex: 1;\n  border-top-left-radius: ${({index}) => index === 0 ? 10 : 0}px;\n  border-top-right-radius: ${({index, length}) => index === length - 1 ? 10 : 0}px;\n  border-bottom: none;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n`\n\nconst Heading = styled.h3`\n  font-size: 1.4em;\n  font-weight: 500;\n`\n\nexport const TabContext = React.createContext(\"\");\n\nexport default function Tabbed(\n    props: {\n        defaultActiveTabName: string,\n        headerNames: string[],\n        headerElements: React.ReactElement[],\n        children?: React.ReactElement[]\n    }\n) {\n    const [activeTabName, setActiveTabName] = useState(props.defaultActiveTabName);\n\n    return (\n        <Fragment>\n            <HeaderContainer>\n                {props.headerNames.map((it, index) => {\n                    return <TabButton key={it}\n                                      active={it === activeTabName}\n                                      index={index}\n                                      length={props.children!.length}\n                                      onClick={() => setActiveTabName(it)}\n                    ><Heading>{props.headerElements[index]}</Heading></TabButton>\n                })}\n            </HeaderContainer>\n            <TabContext.Provider value={activeTabName}>\n                <BottomCard>\n                    {props.children}\n                </BottomCard>\n            </TabContext.Provider>\n        </Fragment>\n    );\n}\n","import React, {useContext} from \"react\";\nimport {TabContext} from \"./Tabbed\";\nimport styled from \"styled-components\";\n\nconst LeftSection = styled.section`\n  text-align: start;\n  padding: 0;\n`\n\nexport default function Tab(props: { tabName: string, children: React.ReactNode }) {\n    const activeTabName = useContext(TabContext)\n\n    return (\n        <LeftSection>\n            {props.tabName === activeTabName ?\n                props.children : null\n            }\n        </LeftSection>\n    );\n}\n","import styled from \"styled-components\";\n\nexport const H3 = styled.h3.attrs((props: { marginTop?: string }) => ({\n    marginTop: props.marginTop,\n}))`\n  margin-top: ${({marginTop}) => marginTop ? marginTop : \"1.5em\"};\n  margin-bottom: 0.5em;\n`\n\nexport const H3First = styled(H3)`\n    margin-top: 0;\n`\n","import React, {ReactNode} from \"react\";\nimport {Assignment, ValidAssignment} from \"./Assignment\";\n\nconst DIGITS = 2;\nconst DEFAULT_PERC_STR = \"--\";\nconst HMM = \"Hmm... that doesn't seem right -\";\n\nexport abstract class PercentageResult {\n    abstract requiredPercentageStr(): string\n\n    abstract requiredAchievedStr(): string\n\n    abstract message(): ReactNode\n\n    abstract isValid(): boolean\n\n    nToPercStr(n: number): string {\n        return (n * 100).toFixed(DIGITS);\n    }\n\n    static create(assignments: Assignment[], threshStr: string, outOf: number): PercentageResult {\n        let threshNum = parseFloat(threshStr)\n        if (!assignments.every(it => it instanceof ValidAssignment)) {\n            return new InvalidPercentageResult(<span>You haven't filled in all the assignments.</span>);\n        } else {\n            let totalWeight = assignments.map((it: Assignment) => (it as ValidAssignment).weight!)\n                .reduce((prev: number, it: number) => prev + it, 0);\n            let totalAchieved = assignments.reduce((prev: number, it: Assignment) =>\n                prev + (it as ValidAssignment).score.calc() * (it as ValidAssignment).weight, 0\n            );\n            let totalWeightLeft = 1 - totalWeight;\n            if (totalWeightLeft < 0) {\n                return new InvalidPercentageResult(\n                    <span>{HMM} it looks like you've already completed <b>{(100-(totalWeightLeft * 100)).toFixed(DIGITS)}%</b> of the course.</span>);\n            } else if (totalWeightLeft === 0) {\n                return new AlreadyFinalResult(totalAchieved);\n            }\n            let theoreticalMaximum = totalAchieved + totalWeightLeft;\n            if (isNaN(threshNum)) {\n                return new InvalidPercentageResult(threshStr === \"\" ? <span>Enter your desired percentage above.</span> :\n                    <span>{HMM} the threshold <b>{threshStr}</b> isn't valid.</span>);\n            }\n            let thresh = threshNum / 100;\n            let requiredAmount = thresh - totalAchieved;\n            let requiredPercentage = requiredAmount / totalWeightLeft;\n            let requiredAchieved = (requiredPercentage * outOf);\n            if (requiredPercentage <= 0) {\n                return new AlreadyReachedResult(totalAchieved);\n            } else if (requiredPercentage > 1) {\n                return new CantReachPercentageResult(requiredPercentage, requiredAchieved, thresh, theoreticalMaximum);\n            } else {\n                return new OkPercentageResult(requiredPercentage, requiredAchieved, totalWeightLeft);\n            }\n        }\n    }\n}\n\nabstract class ValidPercentageResult extends PercentageResult {\n    readonly requiredPercentage: number;\n    readonly requiredAchieved: number;\n\n\n    protected constructor(requiredPercentage: number, requiredAchieved: number) {\n        super();\n        this.requiredPercentage = requiredPercentage;\n        this.requiredAchieved = requiredAchieved;\n    }\n\n    requiredPercentageStr(): string {\n        return this.nToPercStr(this.requiredPercentage);\n    }\n\n    requiredAchievedStr(): string {\n        return this.requiredAchieved.toFixed(DIGITS);\n    }\n\n    isValid(): boolean {\n        return true;\n    }\n\n}\n\nclass InvalidPercentageResult extends PercentageResult {\n    readonly messageElement: ReactNode;\n\n    constructor(messageStr: React.ReactNode) {\n        super();\n        this.messageElement = messageStr;\n    }\n\n    requiredPercentageStr(): string {\n        return DEFAULT_PERC_STR;\n    }\n\n    requiredAchievedStr(): string {\n        return DEFAULT_PERC_STR;\n    }\n\n    message(): ReactNode {\n        return this.messageElement == null ? null : <p>{this.messageElement}</p>;\n    }\n\n    isValid(): boolean {\n        return false;\n    }\n}\n\nexport class AlreadyFinalResult extends InvalidPercentageResult {\n    readonly totalAchieved: number;\n\n    constructor(totalAchieved: number) {\n        super(null);\n        this.totalAchieved = totalAchieved;\n    }\n\n    message(): ReactNode {\n        return <p>Congratulations, you have already completed 100% of the course and achieved:</p>;\n    }\n\n    percentageStr(): string {\n        return this.nToPercStr(this.totalAchieved);\n    }\n}\n\nclass CantReachPercentageResult extends ValidPercentageResult {\n    readonly thresh: number;\n    readonly theoreticalMaximum: number;\n\n    constructor(requiredPercentage: number, requiredAchieved: number, thresh: number, theoreticalMaximum: number) {\n        super(requiredPercentage, requiredAchieved);\n        this.thresh = thresh;\n        this.theoreticalMaximum = theoreticalMaximum;\n    }\n\n    message(): ReactNode {\n        return <p>Unfortunately, you can't reach {this.nToPercStr(this.thresh)}%.<br/>The maximum percentage you can achieve\n            is <b>{this.nToPercStr(this.theoreticalMaximum)}%</b>.</p>;\n    }\n}\n\nexport class OkPercentageResult extends ValidPercentageResult {\n    readonly totalWeightLeft: number;\n\n    constructor(requiredPercentage: number, requiredAchieved: number, totalWeightLeft: number) {\n        super(requiredPercentage, requiredAchieved);\n        this.totalWeightLeft = totalWeightLeft;\n    }\n\n    message(): ReactNode {\n        return <p>Over the remaining <b>{this.nToPercStr(this.totalWeightLeft)}%</b>, you need at least:</p>\n    }\n\n}\n\nclass AlreadyReachedResult extends InvalidPercentageResult {\n    readonly totalAchieved: number;\n\n    constructor(totalAchieved: number) {\n        super(null);\n        this.totalAchieved = totalAchieved;\n    }\n\n    message(): ReactNode {\n        return <p>Congratulations, you have already reached <b>{this.nToPercStr(this.totalAchieved)}%</b>!</p>;\n    }\n}\n\n","import React, {Fragment, useMemo} from \"react\";\nimport {H3, H3First} from \"./H3\";\nimport {Assignment} from \"../../model/Assignment\";\nimport styled from \"styled-components\";\nimport {InputChangeEvent} from \"../StyledInput\";\nimport AutosizeInput from \"react-input-autosize\";\nimport {AlreadyFinalResult, OkPercentageResult, PercentageResult} from \"../../model/PercentageResult\";\nimport {DEFAULT_OUT_OF} from \"../../constant/Constants\";\n\n\nexport const Display = styled.span.attrs((props: { marginRight?: string }) => ({\n    marginRight: props.marginRight,\n}))`\n  margin-right: ${({marginRight}) => marginRight ? marginRight : undefined};\n  color: ${({theme}) => theme.color.text};\n  font-weight: 500;\n  font-size: 3rem;\n`\nexport const Hi = styled.span.attrs((props: { enabled: boolean }) => ({\n    enabled: props.enabled,\n}))`\n  color: ${({enabled, theme}) => enabled ? theme.color.highlight : theme.color.utilityText};\n`\n\nconst UtilityText = styled.span`\n  color: ${({theme}) => theme.color.utilityText};\n`\n\nconst Or = styled.b`\n  white-space: pre;\n`\n\ntype State<T> = [T, React.Dispatch<React.SetStateAction<T>>]\n\n\nexport default function PercentageTab(props: { assignments: Assignment[], threshState: State<string>, outOfState: State<string> }) {\n    const assignments = props.assignments;\n    const [threshStr, setThreshStr] = props.threshState;\n    const [outOfStr, setOutOfStr] = props.outOfState;\n\n    const outOf = useMemo(() => parseFloat(outOfStr), [outOfStr]);\n    const result = useMemo(() =>\n            PercentageResult.create(assignments, threshStr, !isNaN(outOf) ? outOf : DEFAULT_OUT_OF),\n        [assignments, threshStr, outOf]\n    );\n\n    if (result instanceof AlreadyFinalResult) {\n        return (\n            <Fragment>\n                <H3First>Final Result</H3First>\n                {result.message()}\n                <Display><Hi enabled={true}>{result.percentageStr()}</Hi></Display><UtilityText>%</UtilityText>\n            </Fragment>\n        );\n    } else {\n        return (\n            <Fragment>\n                <H3First>Desired Percentage</H3First>\n                <UtilityText>\n                    <AutosizeInput value={threshStr}\n                                   maxLength={4}\n                                   inputStyle={{\n                                       fontSize: \"3rem\",\n                                       fontWeight: 500,\n                                       border: \"none\",\n                                   }}\n                                   type=\"numeric\"\n                                   placeholder=\"--\"\n                                   onChange={(event: InputChangeEvent) =>\n                                       setThreshStr(event.target.value.trim())\n                                   }\n                    />\n                    %\n                </UtilityText>\n                <H3>Required Result</H3>\n                {result.message()}\n                {result instanceof OkPercentageResult &&\n                <span>\n                        <Display marginRight=\"2px\"><Hi\n                            enabled={result.isValid()}>{result.requiredPercentageStr()}</Hi></Display><UtilityText>%</UtilityText>\n                        <Or>  or  </Or>\n                        <Display><Hi\n                            enabled={result.isValid()}>{result.requiredAchievedStr()}</Hi><UtilityText>/</UtilityText></Display>\n                        <AutosizeInput value={outOfStr}\n                                       inputStyle={{\n                                           fontSize: \"3rem\",\n                                           fontWeight: 500,\n                                           border: \"none\",\n                                       }}\n                                       maxLength={5}\n                                       type=\"numeric\"\n                                       placeholder={DEFAULT_OUT_OF.toString()}\n                                       onChange={(event: InputChangeEvent) =>\n                                           setOutOfStr(event.target.value.trim())\n                                       }/>\n                    </span>\n                }\n            </Fragment>\n        );\n    }\n\n}\n","export const DEFAULT_OUT_OF = 100;\n","import React from \"react\";\nimport { H3First } from \"./H3\";\nimport {Assignment} from \"../../model/Assignment\";\n\n\nexport default function GradeTab(_: {assignments: Assignment[]}) {\n    return(\n        <H3First>Coming Soon!</H3First>\n    );\n}\n","import {Assignment, numOrPercToStr, StubAssignment, ValidAssignment} from \"../model/Assignment\";\nimport {Score} from \"../model/Score\";\nimport {v4 as uuidv4} from \"uuid\";\n\n\nexport function parseJSON(json: string): {title: string, assignments: Assignment[]} | null {\n    let document = JSON.parse(json);\n    let assignments: Assignment[] = [];\n    let title: string = document.title ? document.title : \"\";\n    if (!document.hasOwnProperty(\"assignments\")) {\n        return null;\n    }\n    for (let thing of document.assignments) {\n        let assignment = parseAssignment(thing);\n        if (assignment) {\n            assignments.push(assignment)\n        } else {\n            // return undefined;\n        }\n    }\n    return {\n        title: title,\n        assignments: assignments\n    };\n}\n\nfunction parseAssignment(thing: any): Assignment | null {\n    if (!thing.clazz.endsWith(\"Assignment\")) {\n        return null;\n    }\n\n    switch (thing.clazz) {\n        case \"ValidAssignment\":\n            if (thing.hasOwnProperty(\"scoreStr\")) {\n                let weight = numOrPercToStr(thing.weightStr);\n                let score: Score | null = Score.fromString(thing.scoreStr);\n                if (score && !isNaN(weight)) {\n                    return new ValidAssignment(uuidv4(), thing.name, score, weight, thing.weightStr);\n                }\n                return new StubAssignment(uuidv4(), thing.name, thing.scoreStr, thing.weightStr);\n            } else { // template\n                return new StubAssignment(uuidv4(), thing.name, \"\", thing.weightStr);\n            }\n        case \"StubAssignment\":\n            return new StubAssignment(uuidv4(), thing.nameStr, thing.scoreStr ? thing.scoreStr : \"\", thing.weightStr);\n        default:\n            return null;\n    }\n}\n\n","import {Assignment, SerializableAssignment} from \"../model/Assignment\";\nimport {encode} from \"base-64\";\nimport styled from \"styled-components\";\nimport {useMemo, useState} from \"react\";\nimport {H3} from \"./output/H3\";\nimport {CardContainer} from \"./Card\";\nimport {HiOutlineClipboardCopy} from \"react-icons/hi\";\nimport {FixedIconButton} from \"./IconButton\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nconst CopyInput = styled.input`\n  flex: 1;\n  border: solid 1px ${({theme}) => theme.color.outline};\n  padding: 10px;\n  border-radius: 5px;\n\n  &:focus {\n    border: solid 1px ${({theme}) => theme.color.text};\n    outline: none;\n  }\n`\n\nconst FlexDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n\nconst CopiedText = styled.p`\n  font-weight: bold;\n  margin-top: 0.75em;\n  margin-bottom: 0.5em;\n  color: ${({theme}) => theme.color.highlight};\n`\n\nfunction shareUrl(\n    title: string,\n    assignments: Assignment[],\n    deserializer: (assignment: SerializableAssignment) => any\n): string {\n    let params = new URLSearchParams();\n    params.append(\"saved\", encode(\n        JSON.stringify(\n            {\n                title: title, assignments: assignments\n                    .filter(it => it instanceof SerializableAssignment)\n                    .map((it) => deserializer(it as SerializableAssignment))\n            })\n    ));\n    return \"https://\" + window.location.host + process.env.PUBLIC_URL + \"/?\" + params.toString();\n}\n\n\nexport default function ShareSheet(props: { title: string, assignments: Assignment[] }) {\n    let {title, assignments} = props;\n    const shareFullUrl = useMemo(() =>\n            shareUrl(title, assignments, (it) => it.fullJSON()),\n        [title, assignments]\n    )\n    const shareTemplateUrl = useMemo(() =>\n            shareUrl(title, assignments, (it) => it.templateJSON()),\n        [title, assignments]\n    )\n    const [copied, setCopied] = useState<string | null>(null);\n\n    return (\n        <CardContainer>\n            <H3 marginTop={\"0.25em\"}>Share Template with Scores</H3>\n            {copied === \"FULL\" &&\n            <CopiedText>Copied!</CopiedText>}\n            <FlexDiv>\n                <CopyInput readOnly value={shareFullUrl}/>\n                <CopyToClipboard\n                    text={shareFullUrl}\n                    onCopy={() => setCopied(\"FULL\")}\n                >\n                    <FixedIconButton><HiOutlineClipboardCopy/></FixedIconButton>\n                </CopyToClipboard>\n            </FlexDiv>\n            <H3>Share Template</H3>\n            {copied === \"TEMPLATE\" &&\n            <CopiedText>Copied!</CopiedText>}\n            <FlexDiv>\n                <CopyInput readOnly value={shareTemplateUrl}/>\n                <CopyToClipboard\n                    text={shareTemplateUrl}\n                    onCopy={() => setCopied(\"TEMPLATE\")}\n                >\n                    <FixedIconButton><HiOutlineClipboardCopy/></FixedIconButton>\n                </CopyToClipboard>\n            </FlexDiv>\n        </CardContainer>\n    )\n}\n","import styled from \"styled-components\";\nimport React, {Fragment, useCallback, useEffect, useState} from \"react\";\nimport {Instruction} from \"./Instruction\";\nimport Title from \"./Title\";\nimport Table from \"./Table\";\nimport {Assignment, SerializableAssignment} from \"../model/Assignment\";\nimport ContentRow from \"./ContentRow\";\nimport {Container} from \"./Container\";\nimport {InputChangeEvent, StyledInput} from \"./StyledInput\";\nimport Tabbed from \"./Tabbed\";\nimport Tab from \"./Tab\";\nimport PercentageTab from \"./output/PercentageTab\";\nimport GradeTab from \"./output/GradeTab\";\nimport {encode, decode} from \"base-64\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {parseJSON} from \"../util/Deserializer\";\nimport {NoPaddingCard} from \"./Card\";\nimport {RiShareForward2Fill} from \"react-icons/ri\";\nimport ShareSheet from \"./ShareSheet\";\nimport {useIdleTimer} from \"react-idle-timer\";\n\n\nconst TableHeader = styled(StyledInput)`\n  width: 100%;\n  font-size: 2em;\n  font-weight: bold;\n  border: none;\n`\n\nconst InvisibleButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  white-space: pre;\n  font-size: 1.1em;\n  //font-weight: 600;\n  margin: 0;\n  padding: 15px;\n  width: 100%;\n  background: none;\n  border: none;\n  border-radius: 10px;\n\n    // color: ${({theme}) => theme.color.outlineReject};\n`\n\nconst InvisibleLink = styled.a`\n    text-decoration: none;\n`\n\n// const dummyAssignments: Assignment[] = [\n//     Assignment.fromStrings(\"Assignment 1\", \"49/50\", \"0.025\", uuidv4().toString()),\n//     Assignment.fromStrings(\"Project 1\", \"98/100\", \"0.15\", uuidv4().toString()),\n//     Assignment.fromStrings(\"Assignment 2\", \"47/50\", \"0.025\", uuidv4().toString()),\n//     Assignment.fromStrings(\"Assignment 3\", \"40/40\", \"0.025\", uuidv4().toString()),\n//     Assignment.fromStrings(\"Project 2\", \"43/43\", \"0.15\", uuidv4().toString()),\n//     Assignment.fromStrings(\"Assignment 4\", \"24.5/30\", \"0.025\", uuidv4().toString()),\n// ]\n\nconst defaultAssignments: Assignment[] = []\n\n/**\n * getQuery from location for id string\n */\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function MainScreen() {\n    const [assignments, setAssignments] = useState<Assignment[]>([...defaultAssignments, Assignment.ofAdd()]);\n    const [shareExpanded, setShareExpanded] = useState<boolean>(false);\n    const [title, setTitle] = useState<string>(\"\");\n    const percentageThreshState = useState(\"\");\n    const outOfState = useState(\"\");\n\n    const history = useHistory();\n\n    let queryString = useQuery().get(\"saved\");\n    let fillSavedAssignments = useCallback(() => {\n        let encodedCurrent = encode(\n            JSON.stringify(\n                {title: title, assignments: assignments\n                        .slice(0, -1)\n                        .map((it) => (it as SerializableAssignment).fullJSON())}\n            )\n        );\n        if (queryString && queryString !== encodedCurrent) {\n            let loadedData = parseJSON(decode(queryString));\n            if (loadedData !== null) {\n                setTitle(loadedData.title);\n                setAssignments([\n                    ...loadedData.assignments,\n                    Assignment.ofAdd()\n                ]);\n            }\n        }\n    }, [assignments, queryString, title])\n\n    useEffect(() => {\n        fillSavedAssignments();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    function saveAndPushData() {\n        let encodedCurrent = encode(\n            JSON.stringify(\n                {title: title, assignments: assignments\n                        .filter(it => it instanceof SerializableAssignment)\n                        .map((it) => (it as SerializableAssignment).fullJSON())}\n            )\n        );\n        // console.log(\"saved: \" +\n        //     JSON.stringify(\n        //         {title: title, assignments: assignments\n        //                 .filter(it => it instanceof SerializableAssignment)\n        //                 .map((it) => (it as SerializableAssignment).fullJSON())}\n        //     )\n        // );\n\n        if (queryString !== encodedCurrent) {\n            // refresh\n            let params = new URLSearchParams();\n            params.append(\"saved\", encodedCurrent);\n            history.replace({search: params.toString()});\n        }\n    }\n\n    useIdleTimer({\n        timeout: 1000,\n        onIdle: saveAndPushData,\n        debounce: 500\n    })\n\n    function duplicateAssignment(index: number) {\n        setAssignments((currentAssignments) => {\n            let newArr = [...currentAssignments];\n            let assignmentToDuplicate = currentAssignments[index];\n            let newAssignment = assignmentToDuplicate.clone();\n            newArr.splice(index, 0, newAssignment);\n            return newArr;\n        });\n    }\n\n    function deleteAssignment(index: number) {\n        setAssignments((currentAssignments) => {\n            let newArr = [...currentAssignments];\n            newArr.splice(index, 1);\n            return newArr;\n        });\n    }\n\n    function updateAssignment(assignment: Assignment, index: number) {\n        if (assignments[index].equals(assignment)) {\n            // console.log(\"unfortunately, \" + JSON.stringify(assignments[index]) + \" was equal to \" + JSON.stringify(assignment))\n            return;\n        }\n        setAssignments((currentAssignments) => {\n            let newArr = [...currentAssignments];\n            newArr[index] = assignment;\n            return newArr;\n        });\n    }\n\n    function addRow() {\n        setAssignments((currentAssignments) => {\n            let newArr = [...currentAssignments];\n            newArr.push(Assignment.ofAdd());\n            return newArr;\n        });\n    }\n\n    return (\n        <Fragment>\n            <Container bottom=\"50px\">\n                <InvisibleLink href={process.env.PUBLIC_URL}><Title>Grade Calculator</Title></InvisibleLink>\n                <Instruction>Enter your assignment information, then choose whether you want to reach\n                    a <b>percentage</b> or <b>grade</b>.</Instruction>\n            </Container>\n            <Table title={\n                <TableHeader\n                    value={title}\n                    onChange={(event: InputChangeEvent) => setTitle(event.target.value)}\n                    placeholder=\"Title\"/>\n            } headers={[\"ASSIGNMENT\", \"SCORE\", \"WEIGHT\"]}\n            hints={[\"\", \"% or X/Y\", \"%\"]}>\n                {assignments.map((value, index) => <ContentRow\n                    key={value.uuid}\n                    assignment={value}\n                    onChange={(assignment: Assignment) => updateAssignment(assignment, index)}\n                    onClick={index === assignments.length - 1 ? addRow : undefined}\n                    onDuplicate={() => duplicateAssignment(index)}\n                    onDelete={() => deleteAssignment(index)}\n                />)}\n            </Table>\n            <Container top=\"20px\">\n                <Tabbed defaultActiveTabName=\"REACH_PERCENTAGE\"\n                        headerNames={[\"REACH_PERCENTAGE\", \"REACH_GRADE\"]}\n                        headerElements={[<span>% Reach a <b>percentage</b></span>,\n                            <span>A+ Reach a <b>grade</b></span>]}>\n                    <Tab tabName=\"REACH_PERCENTAGE\">\n                        {/*remove the last empty assignment (the add button)*/}\n                        <PercentageTab assignments={assignments.slice(0, -1)}\n                                       threshState={percentageThreshState}\n                                       outOfState={outOfState}\n                        />\n                    </Tab>\n                    <Tab tabName=\"REACH_GRADE\">\n                        {/*remove the last empty assignment (the add button)*/}\n                        <GradeTab assignments={assignments.slice(0, -1)}/>\n                    </Tab>\n                </Tabbed>\n            </Container>\n            <Container>\n                <NoPaddingCard marginTop=\"20px\">\n                    <InvisibleButton onClick={() => setShareExpanded((prev) => !prev)}>\n                        <RiShareForward2Fill/> SHARE\n                    </InvisibleButton>\n                    {shareExpanded &&\n                    <ShareSheet title={title} assignments={assignments.slice(0, -1)}/>}\n                </NoPaddingCard>\n            </Container>\n            {/*{assignments.map((value, index) => <div key={index}><p>{value instanceof SerializableAssignment ? \"true\" + JSON.stringify(value.fullJSON()) : JSON.stringify(value)}</p></div>)}*/}\n        </Fragment>\n    );\n}\n","import React from 'react';\nimport styled, {ThemeProvider} from 'styled-components'\nimport '../css/App.css';\nimport {\n    BrowserRouter\n} from \"react-router-dom\";\nimport {theme} from '../theme/Theme';\nimport MainScreen from \"./MainScreen\";\n\n\nconst FooterChild = styled.p`\n  position: absolute;\n  bottom: 5px;\n`\nconst LeftFooterChild = styled(FooterChild)`\n  left: 25px;\n`\n\nconst RightFooterChild = styled(FooterChild)`\n  text-align: right;\n  right: 25px;\n`\n\nconst Footer = styled.footer`\n    height: 80px;\n`\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <ThemeProvider theme={theme}>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <MainScreen/>\n                </BrowserRouter>\n                <Footer>\n                    <LeftFooterChild>\n                        <a href=\"https://github.com/isaacy2012/grade-calculator/issues/new\">Report an Issue</a>\n                    </LeftFooterChild>\n                <RightFooterChild>Made by <a href=\"https://isaacy.dev\">Isaac Young</a></RightFooterChild>\n                </Footer>\n            </ThemeProvider>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './ui/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}