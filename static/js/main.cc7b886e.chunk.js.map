{"version":3,"sources":["theme/Theme.ts","ui/Instruction.ts","ui/Title.tsx","ui/SpacerDiv.ts","ui/Flex.ts","ui/HeaderRow.tsx","ui/Table.tsx","model/Regex.ts","constant/Constants.ts","model/Result.tsx","model/Score.ts","util/Serializer.ts","util/parser/V2Parser.ts","util/parser/V1Parser.ts","util/JsonFields.ts","model/Assignment.ts","ui/StyledInput.ts","ui/IconButton.ts","ui/ContentRow.tsx","ui/Container.tsx","ui/Card.ts","ui/Tabbed.tsx","ui/Tab.tsx","model/PercentageResult.tsx","ui/helpers/Helpers.tsx","ui/output/PercentageTab.tsx","model/grade/Grade.ts","model/grade/resolvers/VuwGrades.ts","model/grade/resolvers/UoaGrades.ts","model/grade/resolvers/UcGrades.ts","model/grade/resolvers/OtagoGrades.ts","model/grade/resolvers/WaikatoGrades.ts","model/grade/resolvers/MasseyGrades.ts","model/grade/resolvers/AutGrades.ts","model/grade/GradeResolvers.ts","model/GradeResult.tsx","Constants.ts","ui/output/GradeTab.tsx","ui/ShareSheet.tsx","ui/MainScreen.tsx","util/parser/Parser.ts","ui/App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","color","text","headerUnderline","contentUnderline","highlight","primary","primary75","primary50","primary25","utilityText","button","buttonPressed","outline","outlineNone","outlineAccept","outlineReject","cardBackground","cardActiveBackground","cardInactiveBackground","Instruction","styled","p","_templateObject","_taggedTemplateLiteral","TitleContainer","div","StyledTitle","_templateObject2","_ref","Block","_templateObject3","_ref2","Title","props","_jsxs","children","_jsx","SpacerDiv","FlexDiv","FlexChild6","FirstHeaderCol","h3","HeaderCol","LastHeaderCol","HeaderRowContainer","_templateObject4","HeaderUnderline","_templateObject5","Hint","span","_templateObject6","makeHeaderItem","value","index","len","hint","HeaderRow","headers","map","length","hints","WiderSection","section","Table","title","fractionRegex","percentageRegex","numberRegex","zeroRegex","DEFAULT_OUT_OF","PRECISION","HMM","bdToPercStr","bdec","formatBd","multiply","ONE_HUNDRED","digits","formatted","formatBdWithPrecision","test","compareTo","round","precision","getValue","bd","str","bigDecimal","ZERO","ONE","create","assignments","threshNum","outOf","alreadyFinalResultFactory","invalidInputResultFactory","alreadyReachedResultFactory","cantReachResultFactory","okResultFactory","every","it","ValidAssignment","totalWeight","getWeight","reduce","prev","add","totalAchieved","score","calc","totalWeightLeft","subtract","percentage","InvalidMessageResult","theoreticalMaximum","requiredPercentage","divide","requiredAchieved","messageStr","_classCallCheck","messageElement","this","_createClass","key","OkResult","Score","other","FractionScore","fromString","PercentageScore","_Score","_inherits","_super","_createSuper","achieved","_this","call","_get","_getPrototypeOf","prototype","splits","split","Error","_Score2","_super2","_this2","substr","orNoField","t","JsonIntCode","NoField","orEmptyStr","s","writeCompressedJSON","gradeResolverId","serializer","strToCompress","JSON","stringify","arr","_step","ret","acc","_iterator","_createForOfIteratorHelper","n","done","item","push","err","e","f","collapseNoFields","concat","_toConsumableArray","flatMap","slice","compressed","compressToBase64","console","log","endsWith","ch","end","substring","trimEnd","V2Parser","jfr","JsonFieldV2Resolver","json","decompressedNoBraces","decompressFromBase64","document","decompressed","i","expandNoFields","parse","gradeResolverIdField","keyFor","hasOwnProperty","assignmentsField","assignmentData","parseAssignment","filter","thing","nameStr","scoreStr","weightStr","uuid","uuidv4","Assignment","fromStrings","_INSTANCE","V1Parser","JsonFieldV1Resolver","clazzFor","name","weight","numOrPercToBd","StubAssignment","JsonFieldV1","GradeResolverId","Assignments","Clazz","NameStr","Name","WeightStr","ScoreStr","JsonFieldV2","ClazzMappingsV1","clazzName","trim","AddButtonAssignment","SerializableAssignment","_Assignment","apply","arguments","_SerializableAssignme","toInputString","equals","_SerializableAssignme2","_super3","_Assignment2","_super4","StyledInput","input","IconButton","attrs","fontSize","_ref3","FixedIconButton","_ref4","_ref5","FirstContentCol","ContentCol","LastContentCol","ContentRowContainer","ContentUnderline","Input","accepted","empty","shouldUnderline","RightInput","_templateObject7","ContentRow","onChange","assignment","onClick","assignmentUUID","_useState","useState","getNameStr","_useState2","_slicedToArray","setNameStr","_useState3","getScoreStr","_useState4","setScoreStr","_useState5","getWeightStr","_useState6","setWeightStr","useEffect","undefined","strAssignment","onDuplicate","tabIndex","IoDuplicateSharp","placeholder","onFocus","event","target","weightStrValid","onDelete","IoCloseOutline","Container","top","bottom","Card","marginTop","marginBottom","NoPaddingCard","CardContainer","BottomCard","HeaderContainer","TabButton","active","Heading","TabContext","React","createContext","Tabbed","defaultActiveTabName","activeTabName","setActiveTabName","Fragment","headerNames","headerElements","Provider","TextTabIcon","b","LeftSection","Tab","useContext","tabName","PercentageResult","threshStr","AlreadyFinalPercentageResult","InvalidPercentageResult","AlreadyReachedPercentageResult","CantReachPercentageResult","_PercentageResult","_InvalidPercentageRes","_InvalidPercentageRes2","_this3","_InvalidPercentageRes3","_this4","Display","marginRight","Hi","enabled","UtilityText","Or","H3","H3First","PercentageTab","desiredPercentageStr","setDesiredPercentageStr","_props$outOfState","outOfState","outOfStr","setOutOfStr","useMemo","isNaN","parseFloat","converted","result","message","percentageStr","AutosizeInput","maxLength","inputStyle","fontWeight","border","type","requiredPercentageStr","requiredAchievedStr","Grade","minimumBoundary","GradeResolver","id","nicknames","caseSensitive","grades","num","grade","compare","_step2","_iterator2","toUpperCase","VuwGrades","_GradeResolver","INSTANCE","UoaGrades","UcGrades","OtagoGrades","WaikatoGrades","MasseyGrades","AutGrades","GRADE_RESOLVERS_MAP","Map","label","GRADE_RESOLVERS","Array","from","values","sort","a","localeCompare","GradeResult","gradeResolver","gradeStrToNum","AlreadyFinalGradeResult","InvalidGradeResult","AlreadyReachedGradeResult","CantReachGradeResult","_GradeResult","_InvalidGradeResult","numToGradeStr","_InvalidGradeResult2","_InvalidGradeResult3","gradeStr","charAt","articleOnly","GITHUB_NEW_ISSUE_URL","GITHUB_URL","GradeTab","desiredGradeStr","setDesiredGradeStr","_props$currentGradeRe","currentGradeResolverPairState","currentGradeResolverPair","setCurrentGradeResolverPair","Select","components","NoOptionsMessage","_objectSpread","rel","href","filterOption","createFilter","option","data","join","options","opt","selectTheme","colors","_currentGradeResolver","CopyInput","CopiedText","shareUrl","params","URLSearchParams","append","window","location","host","toString","ShareSheet","shareFullUrl","fullJSON","shareTemplateUrl","templateJSON","copied","setCopied","readOnly","CopyToClipboard","onCopy","HiOutlineClipboardCopy","TableHeader","InvisibleButton","InvisibleLink","defaultAssignments","MainScreen","_currentGradeResolver3","didLoad","setDidLoad","ofAdd","setAssignments","shareExpanded","setShareExpanded","_useState7","_useState8","setTitle","history","useHistory","_getSavedQueryStringA","urlSearchParams","v2Params","get","getInstance","v1Params","getSavedQueryStringAndParser","useLocation","search","_getSavedQueryStringA2","queryString","parser","fillSavedAssignments","useCallback","_currentGradeResolver2","encodedCurrent","loadedData","parseCompressedJSON","alert","withoutGradeResolver","replace","addRow","currentAssignments","newArr","useIdleTimer","timeout","onIdle","_currentGradeResolver4","debounce","updateAssignment","newAssignment","clone","splice","duplicateAssignment","deleteAssignment","RiShareForward2Fill","FooterChild","LeftFooterChild","RightFooterChild","Footer","footer","App","className","ThemeProvider","BrowserRouter","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cc7b886e.chunk.js","sourcesContent":["/**\n * The theme\n */\nexport const theme = {\n    color: {\n        text: \"#000000\",\n        headerUnderline: \"#000000\",\n        contentUnderline: \"#E5E5E5\",\n        highlight: \"#9134ED\",\n        primary: \"#9134ED\",\n        primary75: \"#a64dff\",\n        primary50: \"#d9b3ff\",\n        primary25: \"#f0e0ff\",\n        utilityText: \"#898989\",\n        button: \"#898989\",\n        buttonPressed: \"#000000\",\n        outline: \"#D0D0D0\",\n        outlineNone: \"#D0D0D0\",\n        outlineAccept: \"#13783B\",\n        outlineReject: \"#C51F1F\",\n        cardBackground: \"#FFFFFF\",\n        cardActiveBackground: \"#FFFFFF\",\n        cardInactiveBackground: \"#F2F2F2\",\n    }\n};\n","import styled from \"styled-components\";\n\nexport const Instruction = styled.p`\n  text-align: left;\n  margin: 0 5% 30px;\n  @media only screen and (min-width: 768px) {\n    text-align: center;\n    margin-left: 0;\n    margin-right: 0;\n  }\n`\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst TitleContainer = styled.div`\n  margin-left: 5%;\n  margin-right: 5%;\n`\n\nconst StyledTitle = styled.p`\n  font-size: 3em;\n  font-weight: 600;\n  line-height: 1.1;\n  text-align: start;\n  padding-top: min(1.0em, 10vw);\n  margin-top: 0;\n  margin-bottom: 0;\n  max-width: 50vw;\n  color: ${({theme}) => theme.color.text};\n  @media only screen and (min-width: 768px) {\n    padding-top: 2em;\n    max-width: 100vw;\n    text-align: center;\n  }\n`\n\nconst Block = styled.div`\n  margin-top: 15px;\n  margin-bottom: 30px;\n  width: 25%;\n  height: 5px;\n  background: ${({theme}) => theme.color.highlight};\n  @media only screen and (min-width: 768px) {\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`\n\nexport default function Title(props: { children: React.ReactNode }) {\n    return (\n        <TitleContainer>\n            <StyledTitle>{props.children}</StyledTitle>\n            <Block/>\n        </TitleContainer>\n    );\n}\n\n","import styled from \"styled-components\";\n\nexport const SpacerDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  flex: 0.5;\n`\n\n","import styled from \"styled-components\";\n\nexport const FlexDiv = styled.div`\n    display: flex;\n`\nexport const FlexChild6 = styled.div`\n    flex: 6;\n`\n\n","import styled from \"styled-components\";\nimport React, {ReactElement} from \"react\";\nimport {SpacerDiv} from \"./SpacerDiv\";\nimport {FlexChild6, FlexDiv} from \"./Flex\";\n\nconst FirstHeaderCol = styled.h3`\n  text-align: start;\n  flex: 3;\n`\nconst HeaderCol = styled.h3`\n  text-align: start;\n  flex: 2;\n`\n\nconst LastHeaderCol = styled.h3`\n  text-align: end;\n  flex: 1;\n`\n\nconst HeaderRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst HeaderUnderline = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 2px;\n  background: ${({theme}) => theme.color.headerUnderline};\n`\n\nconst Hint = styled.span`\n  font-size: 0.8em;\n  font-weight: normal;\n  color: ${({theme}) => theme.color.utilityText};\n`\n\nconst makeHeaderItem = (value: string, index: number, len: number, hint: string): ReactElement => {\n    // first\n    if (index === 0) {\n        return <FirstHeaderCol key={index}>{value}<br/><Hint>{hint}</Hint></FirstHeaderCol>\n    } else if (index === len - 1) { // last\n        return <LastHeaderCol key={index}>{value}<br/><Hint>{hint}</Hint></LastHeaderCol>\n    } else {\n        return <HeaderCol key={index}>{value}<br/><Hint>{hint}</Hint></HeaderCol>\n    }\n}\nexport default function HeaderRow(props: { headers: string[], hints: string[] }) {\n\n    return (\n        <FlexDiv>\n            <SpacerDiv/>\n            <FlexChild6>\n                <HeaderRowContainer>\n                    {props.headers.map((value, index) => makeHeaderItem(value, index, props.headers.length, props.hints[index]))}\n                </HeaderRowContainer>\n                <HeaderUnderline/>\n            </FlexChild6>\n            <SpacerDiv/>\n        </FlexDiv>\n    );\n}\n","import React from \"react\";\nimport HeaderRow from \"./HeaderRow\";\nimport styled from \"styled-components\";\nimport {FlexChild6, FlexDiv } from \"./Flex\";\nimport { SpacerDiv } from \"./SpacerDiv\";\n\nconst WiderSection = styled.section`\n  margin: auto;\n  width: min(640px, 95vw);\n`\n\nexport default function Table(\n    props: { title: React.ReactNode, headers: string[], hints: string[], children?: React.ReactNode }\n) {\n\n    return (\n        <WiderSection>\n            <FlexDiv>\n                <SpacerDiv/>\n                <FlexChild6>\n                    {props.title}\n                </FlexChild6>\n                <SpacerDiv/>\n            </FlexDiv>\n            <HeaderRow headers={props.headers} hints={props.hints}/>\n            {props.children}\n        </WiderSection>\n    );\n}\n","export const fractionRegex = /^[0-9]+(?:\\.[0-9]+)?\\/[0-9]+(?:\\.[0-9]+)?$/;\nexport const percentageRegex = /^[0-9]+(?:\\.[0-9]+)?%$/;\nexport const numberRegex = /^[0-9]+(?:\\.[0-9]+)?$/;\nexport const zeroRegex = /^[0-9]+\\.[0]+$/\n\n","export const DEFAULT_OUT_OF = \"––\";\n","import React, {ReactNode} from \"react\";\nimport {Assignment, ValidAssignment} from \"./Assignment\";\nimport bigDecimal from \"js-big-decimal\";\nimport {DEFAULT_OUT_OF} from \"../constant/Constants\";\nimport {zeroRegex} from \"./Regex\";\n\n\nexport const DIGITS = 2;\nexport const PRECISION = 10;\nexport const HMM = \"Hmm... that doesn't seem right –\";\n\nexport function ceil2dp(num: number): string {\n    const base = 10 ** DIGITS;\n    return (Math.ceil(num * base) / base).toFixed(DIGITS);\n}\n\nexport function nToPercStr (num: number): string {\n    const base = 10 ** DIGITS;\n    return (Math.ceil(100 * num * base) / base).toFixed(DIGITS);\n}\n\nexport function bdToPercStr(bdec: bigDecimal): string {\n    return formatBd(bdec.multiply(ONE_HUNDRED));\n}\n\nexport function formatBd(bdec: bigDecimal): string {\n    // start off with two digits\n    let digits = 2\n    let formatted = formatBdWithPrecision(bdec, digits);\n    // if it's all zeroes, and not accurate, keep adding precision until it's not all zeros or it's accurate\n    while (zeroRegex.test(formatted) && bdec.compareTo(bdec.round(digits)) !== 0 && digits < 10) {\n        digits = digits + 1;\n        formatted = formatBdWithPrecision(bdec, digits);\n    }\n    // // add 1 more precision for 2sf\n    // formatted = formatBdWithPrecision(bdec, digits + 1);\n    // // remove the last character if it's a 0\n    // // there must be a '.' in it since the digits start at 2\n    // if (formatted.charAt(formatted.length - 1) === '0') {\n    //     formatted = formatBdWithPrecision(bdec, digits);\n    // }\n    return formatted;\n}\n\nfunction formatBdWithPrecision(bdec: bigDecimal, precision: number): string {\n    return bdec.round(precision).getValue();\n}\n\n\nexport interface Result {\n    message(): ReactNode\n}\n\nexport function bd(str: string | number): bigDecimal {\n    return new bigDecimal(str);\n}\n\nexport const ZERO = bd(\"0\");\nexport const ONE = bd(\"1\");\nexport const ONE_HUNDRED = bd(\"100\");\n\nexport function create(\n    assignments: Assignment[],\n    threshNum: bigDecimal | null,\n    outOf: bigDecimal | null,\n    alreadyFinalResultFactory: (totalAchieved: bigDecimal) => Result,\n    invalidInputResultFactory: () => Result,\n    alreadyReachedResultFactory: (totalAchieved: bigDecimal) => Result,\n    cantReachResultFactory: (requiredPercentage: bigDecimal, requiredAchieved: string, theoreticalMaximum: bigDecimal) => Result,\n    okResultFactory: (requiredPercentage: bigDecimal, requiredAchieved: string, totalWeightLeft: bigDecimal) => Result\n): Result {\n    if (!assignments.every(it => it instanceof ValidAssignment)) {\n        return new InvalidMessageResult(<span>You haven't filled in all the assignments.</span>);\n    } else {\n        if (threshNum == null) {\n            return invalidInputResultFactory();\n        }\n        let totalWeight = assignments.map((it: Assignment) => ((it as ValidAssignment).getWeight()))\n            .reduce((prev: bigDecimal, it: bigDecimal) => prev.add(it), bd(\"0\"));\n        let totalAchieved = assignments.reduce((prev: bigDecimal, it: Assignment) =>\n            prev.add((it as ValidAssignment).score.calc().multiply((it as ValidAssignment).getWeight())), bd(\"0\")\n        );\n        let totalWeightLeft = bd(\"1\").subtract(totalWeight);\n        if (totalWeightLeft.compareTo(ZERO) < 0) {\n            let percentage = formatBd((ONE_HUNDRED.subtract(totalWeightLeft.multiply(ONE_HUNDRED))));\n            return new InvalidMessageResult(\n                <span>{HMM} it looks like you've already completed <b>{percentage}%</b> of the course.</span>\n            );\n        } else if (totalWeightLeft.compareTo(ZERO) === 0) {\n            return alreadyFinalResultFactory(totalAchieved)\n        }\n        let theoreticalMaximum = totalAchieved.add(totalWeightLeft);\n        let requiredAmount = threshNum.subtract(totalAchieved);\n        let requiredPercentage = requiredAmount.divide(totalWeightLeft, PRECISION);\n        let requiredAchieved = outOf ? formatBd(requiredPercentage.multiply(outOf)) : DEFAULT_OUT_OF;\n        if (requiredPercentage.compareTo(ZERO) <= 0) {\n            return alreadyReachedResultFactory(totalAchieved)\n        } else if (requiredPercentage.compareTo(ONE) > 0) {\n            return cantReachResultFactory(requiredPercentage, requiredAchieved, theoreticalMaximum)\n        } else {\n            return okResultFactory(requiredPercentage, requiredAchieved, totalWeightLeft)\n        }\n    }\n}\n\nexport class InvalidMessageResult implements Result {\n    readonly messageElement: ReactNode;\n\n    constructor(messageStr: React.ReactNode) {\n        this.messageElement = messageStr;\n    }\n\n    message(): ReactNode {\n        return this.messageElement == null ? null : <p>{this.messageElement}</p>;\n    }\n}\n\n\nexport class OkResult implements Result {\n    readonly requiredPercentage: bigDecimal;\n    readonly requiredAchieved: string;\n    readonly totalWeightLeft: bigDecimal;\n\n    constructor(requiredPercentage: bigDecimal, requiredAchieved: string, totalWeightLeft: bigDecimal) {\n        this.totalWeightLeft = totalWeightLeft;\n        this.requiredPercentage = requiredPercentage;\n        this.requiredAchieved = requiredAchieved;\n    }\n\n    requiredPercentageStr(): string {\n        return bdToPercStr(this.requiredPercentage);\n    }\n\n    requiredAchievedStr(): string {\n        return this.requiredAchieved\n    }\n\n    message(): ReactNode {\n        return <p>Over the remaining <b>{bdToPercStr(this.totalWeightLeft)}%</b>, you need at least:</p>\n    }\n\n}\n\n","import {fractionRegex, numberRegex, percentageRegex} from \"./Regex\";\nimport bigDecimal from \"js-big-decimal\";\nimport {bd, formatBd, ONE_HUNDRED, PRECISION} from \"./Result\";\n\nexport abstract class Score {\n    readonly str: string;\n\n    protected constructor(str: string) {\n        this.str = str;\n    }\n\n    static fromString(str: string): Score | null {\n        if (fractionRegex.test(str)) {\n            return FractionScore.fromString(str);\n        } else {\n            return PercentageScore.fromString(str);\n        }\n    }\n\n    abstract calc(): bigDecimal\n\n    abstract toString(): string\n\n    toInputString(): string {\n        return this.str;\n    }\n\n    equals(other: Score | null): boolean {\n        return this.str === other?.str;\n    }\n\n}\n\nclass FractionScore extends Score {\n    readonly achieved: bigDecimal;\n    readonly outOf: bigDecimal;\n\n\n    constructor(str: string, achieved: bigDecimal, outOf: bigDecimal) {\n        super(str);\n        this.achieved = achieved;\n        this.outOf = outOf;\n    }\n\n    static fromString(str: string): FractionScore | null {\n        let splits: string[] = str.split(\"/\");\n        if (splits.length !== 2) {\n            throw new Error(\"Invalid FractionScore string\");\n        }\n        let achieved = bd(splits[0]);\n        let outOf = bd(splits[1]);\n        return new FractionScore(str, achieved, outOf);\n    }\n\n    calc(): bigDecimal {\n        return this.achieved.divide(this.outOf, PRECISION);\n    }\n\n    equals(other: Score | null): boolean {\n        if (other instanceof FractionScore) {\n            return super.equals(other)\n                && this.achieved.compareTo(other.achieved) === 0\n                && this.outOf.compareTo(other.outOf) === 0;\n        }\n        return false;\n    }\n\n    toInputString(): string {\n        return this.str;\n    }\n\n    toString(): string {\n        return this.achieved + \"/\" + this.outOf;\n    }\n}\n\nclass PercentageScore extends Score {\n    readonly percentage: bigDecimal;\n\n    constructor(str: string, percentage: bigDecimal) {\n        super(str);\n        this.percentage = percentage;\n    }\n\n    static fromString(str: string): PercentageScore | null {\n        if (numberRegex.test(str)) {\n            return new PercentageScore(str, bd(str).divide(ONE_HUNDRED, PRECISION));\n        } else if (percentageRegex.test(str)) {\n            return new PercentageScore(str, bd(str.substr(0, str.length - 1)).divide(ONE_HUNDRED, PRECISION));\n        }\n        return null;\n    }\n\n    calc(): bigDecimal {\n        return this.percentage;\n    }\n\n    equals(other: Score | null): boolean {\n        if (other instanceof PercentageScore) {\n            return super.equals(other)\n                && this.percentage.compareTo(other.percentage) === 0;\n        }\n        return false;\n    }\n\n    toString(): string {\n        return formatBd(this.percentage)\n    }\n}\n","import { SerializableAssignment } from \"../model/Assignment\";\nimport { compressToBase64 } from \"@amoutonbrady/lz-string\"\nimport { JsonIntCode, JsonOptCompressed, JsonOptStr } from \"./JsonFields\";\n\nexport function orNoField<T>(t: T | null): T | JsonIntCode.NoField {\n    if (typeof t == \"string\" && t === \"\") return JsonIntCode.NoField;\n    if (t == null) return JsonIntCode.NoField;\n    return t;\n}\n\nexport function orNull(s: string | undefined | JsonIntCode.NoField): string | null {\n    if (s == null || s === JsonIntCode.NoField) return null;\n    return s;\n}\n\nexport function orEmptyStr(s: string | undefined | JsonIntCode.NoField): string {\n    if (s == null || s === JsonIntCode.NoField) return \"\";\n    return s;\n}\n\n/**\n * Trim the end of a string of a given character\n * @param {string} str - The string to trim.\n * @param {string} ch - The character to trim from the end of the string.\n * @returns the string with the trailing characters removed.\n */\nfunction trimEnd(str: string, ch: string): string {\n    let end = str.length;\n    while(end > 0 && str[end - 1] === ch)\n        --end;\n\n    return (end < str.length) ? str.substring(0, end) : str;\n}\n\nexport function collapseNoFields(arr: JsonOptStr[]): JsonOptCompressed[] {\n    const ret = [];\n    let acc = 0;\n    for (const item of arr) {\n        if (item === JsonIntCode.NoField) {\n            acc++;\n        } else {\n            if (acc > 0) {\n                ret.push(acc);\n                acc = 0;\n            }\n            ret.push(item);\n        }\n    }\n    // push final acc if exists\n    if (acc > 0) {\n        ret.push(acc);\n    }\n    return ret;\n}\n\nexport function writeCompressedJSON(\n    title: string,\n    gradeResolverId: string | null,\n    assignments: SerializableAssignment[],\n    serializer: (a: SerializableAssignment) => [JsonOptStr, JsonOptStr, JsonOptStr] | [JsonOptStr, JsonOptStr, JsonIntCode.NoField]\n): string {\n    const strToCompress = JSON.stringify(\n        collapseNoFields([\n            orNoField(title),\n            orNoField(gradeResolverId),\n            ...assignments.flatMap(it => serializer(it))\n        ])\n    ).slice(1, -1);\n    let compressed = compressToBase64(strToCompress);\n    console.log(strToCompress);\n    // compressToBase64 adds some number of '=' at the end of the string, which is not stylish for URLs, so we remove it.\n    // Decompression without the '=' works fine.\n    if (compressed.endsWith(\"=\")) {\n        compressed = trimEnd(compressed, \"=\");\n    }\n    return compressed;\n}\n","import { Assignment} from \"../../model/Assignment\";\nimport { JsonFieldV2Resolver, JsonOptCompressed, JsonOptStr } from \"../JsonFields\";\nimport { decompressFromBase64 } from \"@amoutonbrady/lz-string\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { orEmptyStr, orNull } from \"../Serializer\";\nimport { Parser } from \"./Parser\";\n\nexport class V2Parser implements Parser {\n    private static _INSTANCE: V2Parser;\n    public static getInstance(): V2Parser {\n        if (this._INSTANCE == null) {\n            this._INSTANCE = new V2Parser();\n        }\n        return this._INSTANCE;\n    }\n\n    jfr = new JsonFieldV2Resolver();\n\n    parseCompressedJSON(json: string): {title: string, gradeResolverId: string | null, assignments: Assignment[]} | null {\n        let decompressedNoBraces = decompressFromBase64(json);\n        if (decompressedNoBraces == null) return null;\n\n        const decompressed = `[${decompressedNoBraces}]`;\n        let document\n        try {\n            document = expandNoFields(JSON.parse(decompressed));\n        } catch (e) {\n            return null;\n        }\n        let gradeResolverId = null;\n\n        const gradeResolverIdField = this.jfr.keyFor(\"GradeResolverId\");\n        if (document.hasOwnProperty(gradeResolverIdField)) {\n            gradeResolverId = orNull(document[gradeResolverIdField]);\n        }\n        let title: string = orEmptyStr(document[this.jfr.keyFor(\"Title\")]);\n\n        const assignmentsField = this.jfr.keyFor(\"Assignments\");\n        if (!document.hasOwnProperty(assignmentsField)) {\n            return {\n                title: title,\n                gradeResolverId: gradeResolverId,\n                assignments: []\n            };\n        }\n\n        const assignmentData = []\n        const size = 3;\n        for (let i = assignmentsField; i < document.length; i += size) {\n            assignmentData.push(document.slice(i, i + size));\n        }\n\n        const assignments = assignmentData.map((it: any) => this.parseAssignment(it))\n            .filter(it => it != null) as Exclude<ReturnType<V2Parser[\"parseAssignment\"]>, null>[];\n\n        return {\n            title: title,\n            gradeResolverId: gradeResolverId,\n            assignments: assignments\n        };\n    }\n\n    private parseAssignment(thing: any): Assignment {\n        const nameStr = orEmptyStr(thing[this.jfr.keyFor(\"NameStr\")]);\n        const scoreStr = orEmptyStr(thing[this.jfr.keyFor(\"ScoreStr\")]);\n        const weightStr = orEmptyStr(thing[this.jfr.keyFor(\"WeightStr\")]);\n        const uuid = uuidv4();\n        return Assignment.fromStrings(nameStr, scoreStr, weightStr, uuid)\n    }\n}\n\nexport function expandNoFields(arr: JsonOptCompressed[]): JsonOptStr[] {\n    const ret = [];\n    for (const item of arr) {\n        if (typeof item == \"number\" && item > 0) {\n            for (let i = 0; i < item; i++) {\n                ret.push(0);\n            }\n        } else {\n            ret.push(item);\n        }\n    }\n\n    return ret;\n}\n","import { Assignment, numOrPercToBd, StubAssignment, ValidAssignment } from \"../../model/Assignment\";\nimport { JsonFieldV1Resolver } from \"../JsonFields\";\nimport { decompressFromBase64 } from \"@amoutonbrady/lz-string\";\nimport { Score } from \"../../model/Score\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { orEmptyStr } from \"../Serializer\";\nimport { Parser } from \"./Parser\";\n\nexport class V1Parser implements Parser {\n    private static _INSTANCE: V1Parser;\n    public static getInstance(): V1Parser {\n        if (this._INSTANCE == null) {\n            this._INSTANCE = new V1Parser();\n        }\n        return this._INSTANCE;\n    }\n\n    jfr = new JsonFieldV1Resolver();\n\n    parseCompressedJSON(json: string): {title: string, gradeResolverId: string, assignments: Assignment[]} | null {\n\n        let decompressed = decompressFromBase64(json);\n        if (decompressed == null) {\n            return null;\n        }\n        let document\n        try {\n            document = JSON.parse(decompressed);\n        } catch (e) {\n            return null;\n        }\n        let gradeResolverId = null;\n\n        const gradeResolverIdField = this.jfr.keyFor(\"GradeResolverId\");\n        if (document.hasOwnProperty(gradeResolverIdField)) {\n            gradeResolverId = document[gradeResolverIdField];\n        }\n        let title: string = orEmptyStr(document[this.jfr.keyFor(\"Title\")]);\n\n        const assignmentsField = this.jfr.keyFor(\"Assignments\");\n        if (!document.hasOwnProperty(assignmentsField)) {\n            return {\n                title: title,\n                gradeResolverId: gradeResolverId,\n                assignments: []\n            };\n        }\n\n        const assignments = (document[assignmentsField] as unknown[])\n            .map((it: unknown) => this.parseAssignment(it))\n            .filter(it => it != null) as Exclude<ReturnType<V1Parser[\"parseAssignment\"]>, null>[];\n\n        return {\n            title: title,\n            gradeResolverId: gradeResolverId,\n            assignments: assignments\n        };\n    }\n\n    private parseAssignment(thing: any): Assignment | null {\n        const clazzField = this.jfr.keyFor(\"Clazz\");\n\n        const clazzName = thing[clazzField];\n\n        switch (clazzName) {\n            case this.jfr.clazzFor(\"ValidAssignment\"):\n                const name = orEmptyStr(thing[this.jfr.keyFor(\"Name\")]);\n                const weightStr = orEmptyStr(thing[this.jfr.keyFor(\"WeightStr\")]);\n\n                if (thing.hasOwnProperty(\"scoreStr\")) {\n                    const weight = numOrPercToBd(weightStr);\n                    const scoreStr = orEmptyStr(thing[this.jfr.keyFor(\"ScoreStr\")]);\n                    const score: Score | null = Score.fromString(scoreStr);\n\n\n                    if (score && weight != null) {\n                        return new ValidAssignment(uuidv4(), orEmptyStr(name), score, weightStr);\n                    }\n                    return new StubAssignment(uuidv4(), name, scoreStr, weightStr);\n                } else { // template\n                    return new StubAssignment(uuidv4(), name, \"\", weightStr);\n                }\n            case this.jfr.clazzFor(\"StubAssignment\"):\n                return new StubAssignment(\n                    uuidv4(),\n                    thing[this.jfr.keyFor(\"NameStr\")],\n                    orEmptyStr(thing[this.jfr.keyFor(\"ScoreStr\")]),\n                    orEmptyStr(thing[this.jfr.keyFor(\"WeightStr\")])\n                );\n            default:\n                return null;\n        }\n    }\n}\n\n","import { getLatestParser, Parser } from \"./parser/Parser\";\nimport { V2Parser } from \"./parser/V2Parser\";\nimport { V1Parser } from \"./parser/V1Parser\";\n\nexport enum JsonIntCode {\n    NoField = 0\n}\nexport type JsonOptStr = string | JsonIntCode.NoField;\nexport type JsonOptCompressed = string | number;\n\ntype JsonField = keyof typeof JsonFieldV1 | keyof typeof JsonFieldV2;\n\nexport interface JsonFieldResolver {\n    keyFor(key: JsonField): string | number\n}\n\nconst JsonFieldV1 = {\n    Title: \"title\",\n    GradeResolverId: \"gradeResolverId\",\n    Assignments: \"assignments\",\n    // Inside Assignment\n    Clazz: \"clazz\",\n    NameStr: \"nameStr\",\n    Name: \"name\",\n    WeightStr: \"weightStr\",\n    ScoreStr: \"scoreStr\",\n}\n\nconst JsonFieldV2 = {\n    Title: 0,\n    GradeResolverId: 1,\n    Assignments: 2,\n    // Inside Assignment\n    NameStr: 0,\n    WeightStr: 1,\n    ScoreStr: 2,\n}\n\nconst ClazzMappingsV1 = {\n    ValidAssignment: \"ValidAssignment\",\n    StubAssignment: \"StubAssignment\",\n}\n\nexport class JsonFieldV1Resolver implements JsonFieldResolver {\n\n    keyFor(key: keyof typeof JsonFieldV1): string {\n        return JsonFieldV1[key];\n    }\n\n    clazzFor(clazzName: keyof typeof ClazzMappingsV1): string {\n        return ClazzMappingsV1[clazzName]\n    }\n}\n\nexport class JsonFieldV2Resolver implements JsonFieldResolver {\n\n    keyFor(key: keyof typeof JsonFieldV2): number {\n        return JsonFieldV2[key];\n    }\n\n}\n\nexport function getSavedQueryStringAndParser(urlSearchParams: URLSearchParams): [string | null, Parser] {\n    const v2Params = urlSearchParams.get(\"s\");\n    if (v2Params != null) {\n        return [v2Params, V2Parser.getInstance()];\n    }\n\n    const v1Params = urlSearchParams.get(\"saved\");\n    if (v1Params != null) {\n        return [v1Params, V1Parser.getInstance()];\n    }\n\n    return [null, getLatestParser()];\n}\n","import {Score} from \"./Score\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {numberRegex, percentageRegex} from \"./Regex\";\nimport bigDecimal from \"js-big-decimal\";\nimport {bd, ONE_HUNDRED, PRECISION} from \"./Result\";\nimport { JsonIntCode, JsonOptStr} from \"../util/JsonFields\";\nimport { orNoField } from \"../util/Serializer\";\n\nexport function numOrPercToBd(str: string): bigDecimal | null {\n    if (percentageRegex.test(str)) {\n        return bd(str.substr(0, str.length - 1)).divide(ONE_HUNDRED, PRECISION);\n    } else if (numberRegex.test(str)) {\n        return bd(str).divide(ONE_HUNDRED, PRECISION);\n    }\n    return null;\n}\n\nexport function numToStr(num: number): string {\n    return (num*100).toString();\n}\n\nexport abstract class Assignment {\n    readonly uuid: string;\n\n    abstract getNameStr(): string;\n\n    abstract getScoreStr(): string;\n\n    abstract getWeightStr(): string;\n\n\n    constructor(uuid: string) {\n        this.uuid = uuid;\n    }\n\n    abstract clone(): Assignment\n\n    abstract equals(other: Assignment): boolean;\n\n    static fromStrings(nameStr: string, scoreStr: string, weightStr: string, uuid: string): Assignment {\n        let score = Score.fromString(scoreStr)\n        let weight = numOrPercToBd(weightStr);\n        if (nameStr.trim().length !== 0 && score && weight != null) {\n            return new ValidAssignment(uuid, nameStr, score, weightStr);\n        }\n        return new StubAssignment(uuid, nameStr, scoreStr, weightStr);\n    }\n\n    static ofAdd(): Assignment {\n        return new AddButtonAssignment(uuidv4());\n    }\n\n}\n\nexport abstract class SerializableAssignment extends Assignment {\n\n    abstract fullJSON(): [JsonOptStr, JsonOptStr, JsonOptStr]\n\n    abstract templateJSON(): [JsonOptStr, JsonOptStr, JsonIntCode.NoField]\n}\n\nexport class ValidAssignment extends SerializableAssignment {\n    readonly nameStr: string;\n    readonly score: Score;\n    readonly weight: bigDecimal;\n    readonly weightStr: string;\n\n    getNameStr(): string {\n        return this.nameStr;\n    }\n\n    getScoreStr(): string {\n        return this.score.toInputString();\n    }\n\n    getWeightStr(): string {\n        return this.weightStr;\n    }\n\n    getWeight(): bigDecimal {\n        return this.weight;\n    }\n\n    constructor(uuid: string, name: string, score: Score, weightStr: string) {\n        super(uuid);\n        this.nameStr = name;\n        this.score = score;\n        this.weight = numOrPercToBd(weightStr)!;\n        this.weightStr = weightStr;\n    }\n\n    equals(other: Assignment): boolean {\n        if (other instanceof ValidAssignment) {\n            return this.nameStr === other.nameStr\n                && this.score.equals(other.score)\n                && this.weightStr === other.weightStr;\n        }\n        return false;\n    }\n\n    clone(): Assignment {\n        return new ValidAssignment(uuidv4(), this.nameStr, this.score, this.weightStr);\n    }\n\n    toString(): string {\n        return \"name: \" + this.nameStr + \", score: \" + this.score + \", weight: \" + this.weightStr;\n    }\n\n    fullJSON(): [JsonOptStr, JsonOptStr, JsonOptStr] {\n        return [\n            orNoField(this.nameStr),\n            orNoField(this.weightStr),\n            orNoField(this.score.str),\n        ];\n    }\n\n    templateJSON(): [JsonOptStr, JsonOptStr, JsonIntCode.NoField] {\n        return [\n            orNoField(this.nameStr),\n            orNoField(this.weightStr),\n            JsonIntCode.NoField\n        ];\n    }\n\n}\n\nexport class StubAssignment extends SerializableAssignment {\n    readonly nameStr: string;\n    readonly scoreStr: string;\n    readonly weightStr: string;\n\n    getNameStr(): string {\n        return this.nameStr;\n    }\n\n    getScoreStr(): string {\n        return this.scoreStr;\n    }\n\n    getWeightStr(): string {\n        return this.weightStr;\n    }\n\n    constructor(uuid: string, nameStr: string, scoreStr: string, weightStr: string) {\n        super(uuid);\n        this.nameStr = nameStr;\n        this.scoreStr = scoreStr;\n        this.weightStr = weightStr;\n    }\n\n\n    clone(): Assignment {\n        return new StubAssignment(uuidv4(), this.nameStr, this.scoreStr, this.weightStr);\n    }\n\n    equals(other: Assignment): boolean {\n        if (other instanceof StubAssignment) {\n            return this.nameStr === other.nameStr\n                && this.scoreStr === other.scoreStr\n                && this.weightStr === other.weightStr;\n        }\n        return false;\n    }\n\n    fullJSON(): [JsonOptStr, JsonOptStr, JsonOptStr] {\n        return [\n            orNoField(this.nameStr),\n            orNoField(this.weightStr),\n            orNoField(this.scoreStr),\n        ];\n    }\n\n    templateJSON(): [JsonOptStr, JsonOptStr, JsonIntCode.NoField] {\n        return [\n            orNoField(this.nameStr),\n            orNoField(this.weightStr),\n            JsonIntCode.NoField\n        ];\n    }\n}\n\nexport class AddButtonAssignment extends Assignment {\n\n    getNameStr(): string {\n        return \"\";\n    }\n\n    getScoreStr(): string {\n        return \"\";\n    }\n\n    getWeightStr(): string {\n        return \"\";\n    }\n\n    equals(other: Assignment): boolean {\n        return other instanceof AddButtonAssignment;\n    }\n\n\n    clone(): Assignment {\n        return new AddButtonAssignment(uuidv4());\n    }\n}\n\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nexport type InputChangeEvent = React.ChangeEvent<HTMLInputElement>\n\nexport const StyledInput = styled.input`\n  border: none;\n  width: 100%;\n  box-sizing: border-box;\n\n`\n","import styled from \"styled-components\";\n\nexport const IconButton = styled.button.attrs((props: { fontSize?: string }) => ({\n    fontSize: props.fontSize,\n}))`\n  background: none;\n  border: none;\n  text-align: center;\n  font-size: ${({fontSize}) => fontSize ? fontSize : \"1.3em\"};\n  color: ${({theme}) => theme.color.button};\n\n  &:hover {\n    color: ${({theme}) => theme.color.buttonPressed};\n  }\n`\n\nexport const FixedIconButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 1.5em;\n  padding-right: 0;\n  width: 2.5rem;\n  color: ${({theme}) => theme.color.button};\n\n  &:hover {\n    color: ${({theme}) => theme.color.buttonPressed};\n  }\n`\n\n\n","import styled from \"styled-components\";\nimport React, {useEffect, useState} from \"react\";\nimport {Assignment, numOrPercToBd} from \"../model/Assignment\";\nimport {Score} from \"../model/Score\";\nimport {SpacerDiv} from \"./SpacerDiv\";\nimport {FlexChild6, FlexDiv} from \"./Flex\";\nimport {InputChangeEvent, StyledInput} from \"./StyledInput\";\nimport { IconButton } from \"./IconButton\";\nimport { IoCloseOutline, IoDuplicateSharp } from \"react-icons/io5\";\nimport {bd} from \"../model/Result\";\n\nconst FirstContentCol = styled.p`\n  text-align: start;\n  flex: 3;\n`\nconst ContentCol = styled.p`\n  text-align: start;\n  flex: 1.5;\n`\n\nconst LastContentCol = styled.p`\n  text-align: end;\n  flex: 1.5;\n`\n\nconst ContentRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst ContentUnderline = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 1px;\n  background: ${({theme}) => theme.color.contentUnderline};\n`\n\nconst Input = styled(StyledInput).attrs((props: { accepted: boolean, empty: boolean, shouldUnderline: boolean }) => ({\n    accepted: props.accepted,\n    empty: props.empty,\n    shouldUnderline: props.shouldUnderline,\n}))`\n  font-size: 1em;\n  color: ${({empty, accepted, theme}) => empty || accepted ? theme.color.text : theme.color.outlineReject};\n  font-weight: ${({empty, accepted}) => empty || accepted ? \"normal\" : \"bold\"};\n  width: 100%;\n  text-decoration: ${({empty, shouldUnderline}) => empty && shouldUnderline ? \"underline\" : \"none\"};\n`\n\nconst RightInput = styled(Input)`\n  text-align: right;\n`\n\nexport default function ContentRow(\n    props: {\n        assignment: Assignment,\n        onChange: (assignment: Assignment) => void,\n        onClick?: () => void\n        onDuplicate?: () => void\n        onDelete?: () => void\n    }\n) {\n    const {onChange, assignment, onClick} = props;\n    const assignmentUUID = assignment.uuid;\n\n    const [nameStr, setNameStr] = useState<string>(assignment.getNameStr());\n    const [scoreStr, setScoreStr] = useState<string>(assignment.getScoreStr());\n    const [weightStr, setWeightStr] = useState<string>(assignment.getWeightStr());\n\n    useEffect(() => {\n        if (onClick === undefined) {\n            let strAssignment = Assignment.fromStrings(nameStr, scoreStr, weightStr, assignmentUUID);\n            onChange(strAssignment);\n        }\n    }, [onClick, nameStr, scoreStr, weightStr, onChange, assignmentUUID])\n\n    function weightStrValid(): boolean {\n        let weight = numOrPercToBd(weightStr);\n        if (weight == null) {\n            return false;\n        }\n        return weight.compareTo(bd(\"1\")) < 1\n    }\n\n    return (\n        <FlexDiv>\n            <SpacerDiv>\n                {props.onClick === undefined &&\n                // ×\n                <IconButton fontSize=\"1.1em\" onClick={props.onDuplicate} tabIndex={-1}><IoDuplicateSharp/></IconButton>}\n            </SpacerDiv>\n            <FlexChild6>\n                <ContentRowContainer onClick={props.onClick}>\n                    <FirstContentCol>\n                        <Input\n                            value={nameStr}\n                            placeholder={\"Title\"}\n                            accepted={nameStr !== \"\"}\n                            onFocus={props.onClick}\n                            empty={nameStr.length === 0}\n                            shouldUnderline={props.onClick === undefined}\n                            onChange={(event: InputChangeEvent) => setNameStr(event.target.value)}\n                        />\n                    </FirstContentCol>\n                    <ContentCol>\n                        <Input\n                            value={weightStr}\n                            placeholder={\"Overall Weight\"}\n                            accepted={weightStrValid()}\n                            onFocus={props.onClick}\n                            empty={weightStr.length === 0}\n                            shouldUnderline={props.onClick === undefined}\n                            onChange={(event: InputChangeEvent) => setWeightStr(event.target.value.trim())}\n                        />\n                    </ContentCol>\n                    <LastContentCol>\n                        <RightInput\n                            value={scoreStr}\n                            placeholder={\"Score Achieved\"}\n                            accepted={Score.fromString(scoreStr) !== null}\n                            onFocus={props.onClick}\n                            empty={scoreStr.length === 0}\n                            shouldUnderline={props.onClick === undefined}\n                            onChange={(event: InputChangeEvent) => setScoreStr(event.target.value.trim())}\n                        />\n                    </LastContentCol>\n                </ContentRowContainer>\n                <ContentUnderline/>\n            </FlexChild6>\n            <SpacerDiv>\n                {props.onClick === undefined &&\n                // ×\n                <IconButton onClick={props.onDelete} tabIndex={-1}><IoCloseOutline/></IconButton>}\n            </SpacerDiv>\n        </FlexDiv>\n    );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.section.attrs((props: { top?: string, bottom?: string }) => ({\n    top: props.top ? props.top : \"0\",\n    bottom: props.bottom ? props.bottom : \"0\",\n}))`\n  margin-top: ${({top}) => top};\n  margin-bottom: ${({bottom}) => bottom};\n  margin-left: auto;\n  margin-right: auto;\n  width: min(550px, 90vw);\n`\n\n","import styled from \"styled-components\";\n\nexport const Card = styled.section.attrs((props: { marginTop?: string, marginBottom?: string }) => ({\n    marginTop: props.marginTop,\n    marginBottom: props.marginBottom,\n}))`\n  margin-top: ${({marginTop}) => marginTop ? marginTop : undefined};\n  margin-bottom: ${({marginBottom}) => marginBottom ? marginBottom : undefined};\n  padding: 1.5rem;\n  border: solid 1px ${({theme}) => theme.color.outline};\n  border-radius: 10px;\n`\n\nexport const NoPaddingCard = styled(Card)`\n  padding: 0;\n`\n\nexport const CardContainer = styled.section`\n  text-align: start;\n  padding: 0 1.5rem 1.5rem;\n`\n\nexport const BottomCard = styled(Card)`\n  border-radius: 0 0 10px 10px;\n`\n\n","import React, {Fragment, useState} from \"react\";\nimport styled from \"styled-components\";\nimport { BottomCard } from \"./Card\";\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\n// noinspection CssReplaceWithShorthandSafely\nconst TabButton = styled.button.attrs((props: { active: boolean, index: number, length: number }) => ({\n    active: props.active,\n    index: props.index,\n    length: props.length,\n}))`\n  margin: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  border: solid 1px ${({theme}) => theme.color.outline};\n  border-left: ${({index}) => index === 0 ? \"\" : \"none\"};\n  background: ${({active, theme}) => active ? theme.color.cardActiveBackground : theme.color.cardInactiveBackground};\n  flex: 1;\n  border-top-left-radius: ${({index}) => index === 0 ? 10 : 0}px;\n  border-top-right-radius: ${({index, length}) => index === length - 1 ? 10 : 0}px;\n  border-bottom: none;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n`\n\nconst Heading = styled.h3`\n  font-size: 1.4em;\n  font-weight: 500;\n`\n\nexport const TabContext = React.createContext(\"\");\n\nexport default function Tabbed(\n    props: {\n        defaultActiveTabName: string,\n        headerNames: string[],\n        headerElements: React.ReactElement[],\n        children?: React.ReactElement[]\n    }\n) {\n    const [activeTabName, setActiveTabName] = useState(props.defaultActiveTabName);\n\n    return (\n        <Fragment>\n            <HeaderContainer>\n                {props.headerNames.map((it, index) => {\n                    return <TabButton key={it}\n                                      active={it === activeTabName}\n                                      index={index}\n                                      length={props.children!.length}\n                                      onClick={() => setActiveTabName(it)}\n                    ><Heading>{props.headerElements[index]}</Heading></TabButton>\n                })}\n            </HeaderContainer>\n            <TabContext.Provider value={activeTabName}>\n                <BottomCard>\n                    {props.children}\n                </BottomCard>\n            </TabContext.Provider>\n        </Fragment>\n    );\n}\n","import React, {useContext} from \"react\";\nimport {TabContext} from \"./Tabbed\";\nimport styled from \"styled-components\";\n\nexport const TextTabIcon = styled.b`\n    color: ${({theme}) => theme.color.primary};\n  margin-right: 2px;\n`\n\nconst LeftSection = styled.section`\n  text-align: start;\n  padding: 0;\n`\n\nexport default function Tab(props: { tabName: string, children: React.ReactNode }) {\n    const activeTabName = useContext(TabContext)\n\n    return (\n        <LeftSection>\n            {props.tabName === activeTabName ?\n                props.children : null\n            }\n        </LeftSection>\n    );\n}\n","import React, {ReactNode} from \"react\";\nimport {Assignment, numOrPercToBd} from \"./Assignment\";\nimport {bdToPercStr, create, HMM, OkResult, Result} from \"./Result\";\nimport bigDecimal from \"js-big-decimal\";\n\nexport abstract class PercentageResult implements Result {\n    abstract message(): ReactNode\n\n    static create(assignments: Assignment[], threshStr: string, outOf: bigDecimal | null): Result {\n        return create(\n            assignments,\n            numOrPercToBd(threshStr),\n            outOf,\n            (totalAchieved) => new AlreadyFinalPercentageResult(totalAchieved),\n            () => new InvalidPercentageResult(\n                threshStr === \"\" ? <span>Enter your desired percentage above.</span> :\n                <span>{HMM} the threshold <b>{threshStr}</b> isn't valid.</span>\n            ),\n            (totalAchieved) => new AlreadyReachedPercentageResult(totalAchieved),\n            (requiredPercentage, requiredAchieved, theoreticalMaximum) =>\n                new CantReachPercentageResult(threshStr, theoreticalMaximum),\n            (requiredPercentage, requiredAchieved, totalWeightLeft) =>\n                new OkResult(requiredPercentage, requiredAchieved, totalWeightLeft)\n        )\n    }\n}\n\nclass InvalidPercentageResult extends PercentageResult {\n    readonly messageElement: ReactNode;\n\n    constructor(messageStr: React.ReactNode) {\n        super();\n        this.messageElement = messageStr;\n    }\n\n    message(): ReactNode {\n        return this.messageElement == null ? null : <p>{this.messageElement}</p>;\n    }\n}\n\nexport class AlreadyFinalPercentageResult extends InvalidPercentageResult {\n    readonly totalAchieved: bigDecimal;\n\n    constructor(totalAchieved: bigDecimal) {\n        super(null);\n        this.totalAchieved = totalAchieved;\n    }\n\n    message(): ReactNode {\n        return <p>Congratulations, you have already completed the course and achieved:</p>;\n    }\n\n    percentageStr(): string {\n        return bdToPercStr(this.totalAchieved);\n    }\n}\n\nclass AlreadyReachedPercentageResult extends InvalidPercentageResult {\n    readonly totalAchieved: bigDecimal;\n\n    constructor(totalAchieved: bigDecimal) {\n        super(null);\n        this.totalAchieved = totalAchieved;\n    }\n\n    message(): ReactNode {\n        return <p>Congratulations, you have already reached <b>{bdToPercStr(this.totalAchieved)}%</b>!</p>;\n    }\n}\n\nclass CantReachPercentageResult extends InvalidPercentageResult {\n    readonly threshStr: string;\n    readonly theoreticalMaximum: bigDecimal;\n\n    constructor(threshStr: string, theoreticalMaximum: bigDecimal) {\n        super(null);\n        this.threshStr = threshStr;\n        this.theoreticalMaximum = theoreticalMaximum;\n    }\n\n    message(): ReactNode {\n        return <p>Unfortunately, you can't reach {this.threshStr}%.<br/>The maximum percentage you can achieve\n            is <b>{bdToPercStr(this.theoreticalMaximum)}%</b>.</p>;\n    }\n}\n\n\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nexport const Display = styled.span.attrs((props: { marginRight?: string }) => ({\n    marginRight: props.marginRight,\n}))`\n  margin-right: ${({marginRight}) => marginRight ? marginRight : undefined};\n  color: ${({theme}) => theme.color.text};\n  font-weight: 500;\n  font-size: 3rem;\n`\nexport const Hi = styled.span.attrs((props: { enabled: boolean }) => ({\n    enabled: props.enabled,\n}))`\n  color: ${({enabled, theme}) => enabled ? theme.color.highlight : theme.color.utilityText};\n`\n\nexport const UtilityText = styled.span`\n  color: ${({theme}) => theme.color.utilityText};\n`\n\nexport const Or = styled.b`\n  white-space: pre;\n`\n\nexport const H3 = styled.h3.attrs((props: { marginTop?: string }) => ({\n    marginTop: props.marginTop,\n}))`\n  margin-top: ${({marginTop}) => marginTop ? marginTop : \"1.5em\"};\n  margin-bottom: 0.5em;\n`\n\nexport const H3First = styled(H3)`\n    margin-top: 0;\n`\n\nexport type State<T> = [T, React.Dispatch<React.SetStateAction<T>>]\n","import React, {Fragment, useMemo, useState} from \"react\";\nimport {Assignment} from \"../../model/Assignment\";\nimport {InputChangeEvent} from \"../StyledInput\";\nimport AutosizeInput from \"react-input-autosize\";\nimport {AlreadyFinalPercentageResult, PercentageResult} from \"../../model/PercentageResult\";\nimport {DEFAULT_OUT_OF} from \"../../constant/Constants\";\nimport {Display, H3, H3First, Hi, Or, State, UtilityText} from \"../helpers/Helpers\";\nimport {bd, OkResult} from \"../../model/Result\";\nimport bigDecimal from \"js-big-decimal\";\n\n\nexport default function PercentageTab(props: { assignments: Assignment[], outOfState: State<string> }) {\n    const assignments = props.assignments;\n\n    const [desiredPercentageStr, setDesiredPercentageStr] = useState(\"\");\n    const [outOfStr, setOutOfStr]: State<string> = props.outOfState;\n    const outOf: bigDecimal | null = useMemo(() => {\n        if (isNaN(parseFloat(outOfStr))) {\n            return null;\n        }\n        let converted = bd(parseFloat(outOfStr));\n        if (converted != null) {\n            return converted;\n        }\n        return null;\n    }, [outOfStr]);\n\n    const result = useMemo(() =>\n            PercentageResult.create(assignments, desiredPercentageStr, outOf),\n        [assignments, desiredPercentageStr, outOf]\n    );\n\n    if (result instanceof AlreadyFinalPercentageResult) {\n        return (\n            <Fragment>\n                <H3First>Final Result</H3First>\n                {result.message()}\n                <Display><Hi enabled={true}>{result.percentageStr()}</Hi></Display><UtilityText>%</UtilityText>\n            </Fragment>\n        );\n    }\n\n    return (\n        <Fragment>\n            <H3First>Desired Percentage</H3First>\n            <UtilityText>\n                <AutosizeInput value={desiredPercentageStr}\n                               maxLength={4}\n                               inputStyle={{\n                                   fontSize: \"3rem\",\n                                   fontWeight: 500,\n                                   border: \"none\",\n                               }}\n                               type=\"numeric\"\n                               placeholder=\"––\"\n                               onChange={(event: InputChangeEvent) =>\n                                   setDesiredPercentageStr(event.target.value.trim())\n                               }\n                />\n                %\n            </UtilityText>\n            <H3>Required Result</H3>\n            {result.message()}\n            {result instanceof OkResult &&\n                <span>\n                        <Display marginRight=\"2px\"><Hi\n                            enabled={true}>{result.requiredPercentageStr()}</Hi></Display><UtilityText>%</UtilityText>\n                        <Or>  or  </Or>\n                        <Display><Hi\n                            enabled={true}>{result.requiredAchievedStr()}</Hi><UtilityText>/</UtilityText></Display>\n                        <AutosizeInput value={outOfStr}\n                                       inputStyle={{\n                                           fontSize: \"3rem\",\n                                           fontWeight: 500,\n                                           border: \"none\",\n                                       }}\n                                       maxLength={5}\n                                       type=\"numeric\"\n                                       placeholder={DEFAULT_OUT_OF}\n                                       onChange={(event: InputChangeEvent) =>\n                                           setOutOfStr(event.target.value.trim())\n                                       }/>\n                    </span>\n            }\n        </Fragment>\n    );\n\n}\n","import bigDecimal from \"js-big-decimal\";\n\nexport class Grade {\n    readonly str: string;\n    readonly minimumBoundary: bigDecimal;\n\n\n    constructor(str: string, minimumBoundary: bigDecimal) {\n        this.str = str;\n        this.minimumBoundary = minimumBoundary;\n    }\n}\n\nexport abstract class GradeResolver {\n    readonly id: string;\n    readonly name: string;\n    readonly nicknames: string[]\n    readonly caseSensitive: boolean;\n    readonly grades: Grade[]\n\n    protected constructor(id: string, name: string, nicknames: string[], caseSensitive: boolean, grades: Grade[]) {\n        this.id = id;\n        this.name = name;\n        this.nicknames = nicknames;\n        this.caseSensitive = caseSensitive;\n        this.grades = grades;\n    }\n\n    numToGradeStr(num: bigDecimal): string {\n        for (let grade of this.grades) {\n            let compare = num.compareTo(grade.minimumBoundary);\n            if (compare > 0 || compare === 0) {\n                return grade.str;\n            }\n        }\n        throw Error()\n    }\n\n    gradeStrToNum(str: string): bigDecimal | null {\n        for (let grade of this.grades) {\n            if (this.caseSensitive ? str === grade.str : str.toUpperCase() === grade.str.toUpperCase()) {\n                return grade.minimumBoundary;\n            }\n        }\n        return null;\n    }\n\n}\n\n","import {Grade, GradeResolver} from \"../Grade\";\nimport {bd} from \"../../Result\";\n\nexport class VuwGrades extends GradeResolver {\n    static INSTANCE = new VuwGrades();\n\n    private constructor() {\n        super(\n            \"VUW\",\n            \"Victoria University of Wellington\",\n            [\"vic\", \"vuw\"],\n            false,\n            [\n                new Grade(\"A+\", bd(\"0.9\")),\n                new Grade(\"A\", bd(\"0.85\")),\n                new Grade(\"A-\", bd(\"0.8\")),\n                new Grade(\"B+\", bd(\"0.75\")),\n                new Grade(\"B\", bd(\"0.70\")),\n                new Grade(\"B-\", bd(\"0.65\")),\n                new Grade(\"C+\", bd(\"0.60\")),\n                new Grade(\"C\", bd(\"0.55\")),\n                new Grade(\"C-\", bd(\"0.50\")),\n                new Grade(\"D\", bd(\"0.4\")),\n                new Grade(\"E\", bd(\"0.0\")),\n            ]\n        );\n    }\n\n}\n\n","import {Grade, GradeResolver} from \"../Grade\";\nimport {bd} from \"../../Result\";\n\nexport class UoaGrades extends GradeResolver {\n    static INSTANCE = new UoaGrades();\n\n    constructor() {\n        super(\n            \"UOA\",\n            \"University of Auckland\",\n            [\"uoa\"],\n            false,\n            [\n            new Grade(\"A+\", bd(\"0.9\")),\n            new Grade(\"A\", bd(\"0.85\")),\n            new Grade(\"A-\", bd(\"0.8\")),\n            new Grade(\"B+\", bd(\"0.75\")),\n            new Grade(\"B\", bd(\"0.70\")),\n            new Grade(\"B-\", bd(\"0.65\")),\n            new Grade(\"C+\", bd(\"0.60\")),\n            new Grade(\"C\", bd(\"0.55\")),\n            new Grade(\"C-\", bd(\"0.50\")),\n            new Grade(\"D+\", bd(\"0.45\")),\n            new Grade(\"D\", bd(\"0.40\")),\n            new Grade(\"D-\", bd(\"0.0\"))\n        ]);\n    }\n\n}\n","import {Grade, GradeResolver} from \"../Grade\";\nimport {bd} from \"../../Result\";\n\n\nexport class UcGrades extends GradeResolver {\n    static INSTANCE = new UcGrades();\n\n    private constructor() {\n        super(\n            \"UC\",\n            \"University of Canterbury\",\n            [\"uc\"],\n            false,\n            [\n                new Grade(\"A+\", bd(\"0.9\")),\n                new Grade(\"A\", bd(\"0.85\")),\n                new Grade(\"A-\", bd(\"0.8\")),\n                new Grade(\"B+\", bd(\"0.75\")),\n                new Grade(\"B\", bd(\"0.70\")),\n                new Grade(\"B-\", bd(\"0.65\")),\n                new Grade(\"C+\", bd(\"0.60\")),\n                new Grade(\"C\", bd(\"0.55\")),\n                new Grade(\"C-\", bd(\"0.50\")),\n                new Grade(\"D\", bd(\"0.4\")),\n                new Grade(\"E\", bd(\"0.0\")),\n            ]\n        );\n    }\n\n}\n\n","import {Grade, GradeResolver} from \"../Grade\";\nimport {bd} from \"../../Result\";\n\n\nexport class OtagoGrades extends GradeResolver {\n    static INSTANCE = new OtagoGrades();\n\n    private constructor() {\n        super(\n            \"OTA\",\n            \"University of Otago\",\n            [],\n            false,\n            [\n                new Grade(\"A+\", bd(\"0.9\")),\n                new Grade(\"A\", bd(\"0.85\")),\n                new Grade(\"A-\", bd(\"0.8\")),\n                new Grade(\"B+\", bd(\"0.75\")),\n                new Grade(\"B\", bd(\"0.70\")),\n                new Grade(\"B-\", bd(\"0.65\")),\n                new Grade(\"C+\", bd(\"0.60\")),\n                new Grade(\"C\", bd(\"0.55\")),\n                new Grade(\"C-\", bd(\"0.50\")),\n                new Grade(\"D\", bd(\"0.4\")),\n                new Grade(\"E\", bd(\"0.0\")),\n            ]\n        );\n    }\n\n}\n\n","import {Grade, GradeResolver} from \"../Grade\";\nimport {bd} from \"../../Result\";\n\n\nexport class WaikatoGrades extends GradeResolver {\n    static INSTANCE = new WaikatoGrades();\n\n    private constructor() {\n        super(\n            \"WAI\",\n            \"University of Waikato\",\n            [\"wai\", \"uow\"],\n            false,\n            [\n                new Grade(\"A+\", bd(\"0.9\")),\n                new Grade(\"A\", bd(\"0.85\")),\n                new Grade(\"A-\", bd(\"0.8\")),\n                new Grade(\"B+\", bd(\"0.75\")),\n                new Grade(\"B\", bd(\"0.70\")),\n                new Grade(\"B-\", bd(\"0.65\")),\n                new Grade(\"C+\", bd(\"0.60\")),\n                new Grade(\"C\", bd(\"0.55\")),\n                new Grade(\"C-\", bd(\"0.50\")),\n                new Grade(\"D\", bd(\"0.4\")),\n                new Grade(\"E\", bd(\"0.0\")),\n            ]\n        );\n    }\n\n}\n\n","import {Grade, GradeResolver} from \"../Grade\";\nimport {bd} from \"../../Result\";\n\n\nexport class MasseyGrades extends GradeResolver {\n    static INSTANCE = new MasseyGrades();\n\n    private constructor() {\n        super(\n            \"MAS\",\n            \"Massey University\",\n            [],\n            false,\n            [\n                new Grade(\"A+\", bd(\"0.9\")),\n                new Grade(\"A\", bd(\"0.85\")),\n                new Grade(\"A-\", bd(\"0.8\")),\n                new Grade(\"B+\", bd(\"0.75\")),\n                new Grade(\"B\", bd(\"0.70\")),\n                new Grade(\"B-\", bd(\"0.65\")),\n                new Grade(\"C+\", bd(\"0.60\")),\n                new Grade(\"C\", bd(\"0.55\")),\n                new Grade(\"C-\", bd(\"0.50\")),\n                new Grade(\"D\", bd(\"0.4\")),\n                new Grade(\"E\", bd(\"0.0\")),\n            ]\n        );\n    }\n\n}\n\n","import {Grade, GradeResolver} from \"../Grade\";\nimport {bd} from \"../../Result\";\n\nexport class AutGrades extends GradeResolver {\n    static INSTANCE = new AutGrades();\n\n    private constructor() {\n        super(\n            \"AUT\",\n            \"Auckland University of Technology\",\n            [\"aut\"],\n            false,\n            [\n                new Grade(\"A+\", bd(\"0.895\")),\n                new Grade(\"A\", bd(\"0.845\")),\n                new Grade(\"A-\", bd(\"0.745\")),\n                new Grade(\"B+\", bd(\"0.745\")),\n                new Grade(\"B\", bd(\"0.695\")),\n                new Grade(\"B-\", bd(\"0.645\")),\n                new Grade(\"C+\", bd(\"0.595\")),\n                new Grade(\"C\", bd(\"0.545\")),\n                new Grade(\"C-\", bd(\"0.495\")),\n                new Grade(\"D\", bd(\"0.0\")),\n            ]\n        );\n    }\n\n}\n\n","import {VuwGrades} from \"./resolvers/VuwGrades\";\nimport {UoaGrades} from \"./resolvers/UoaGrades\";\nimport {GradeResolver} from \"./Grade\";\nimport {UcGrades} from \"./resolvers/UcGrades\";\nimport {OtagoGrades} from \"./resolvers/OtagoGrades\";\nimport {WaikatoGrades} from \"./resolvers/WaikatoGrades\";\nimport {MasseyGrades} from \"./resolvers/MasseyGrades\";\nimport {AutGrades} from \"./resolvers/AutGrades\";\n\nexport interface LabelToGradeResolver {\n    label: string,\n    value: GradeResolver\n}\n\nexport const GRADE_RESOLVERS_MAP: Map<string, LabelToGradeResolver> = new Map<string, LabelToGradeResolver>([\n    [VuwGrades.INSTANCE.id, {label: VuwGrades.INSTANCE.name, value: VuwGrades.INSTANCE}],\n    [UcGrades.INSTANCE.id, {label: UcGrades.INSTANCE.name, value: UcGrades.INSTANCE}],\n    [OtagoGrades.INSTANCE.id, {label: OtagoGrades.INSTANCE.name, value: OtagoGrades.INSTANCE}],\n    [MasseyGrades.INSTANCE.id, {label: MasseyGrades.INSTANCE.name, value: MasseyGrades.INSTANCE}],\n    [WaikatoGrades.INSTANCE.id, {label: WaikatoGrades.INSTANCE.name, value: WaikatoGrades.INSTANCE}],\n    [UoaGrades.INSTANCE.id, {label: UoaGrades.INSTANCE.name, value: UoaGrades.INSTANCE}],\n    [AutGrades.INSTANCE.id, {label: AutGrades.INSTANCE.name, value: AutGrades.INSTANCE}],\n])\n\nexport const GRADE_RESOLVERS: LabelToGradeResolver[] = Array.from(GRADE_RESOLVERS_MAP.values())\n    .sort((a, b) => a.label.localeCompare(b.label))\n\n","import React, {ReactNode} from \"react\";\nimport {Assignment} from \"./Assignment\";\nimport {create, HMM, OkResult, Result} from \"./Result\";\nimport a from \"indefinite\";\nimport {GradeResolver} from \"./grade/Grade\";\nimport bigDecimal from \"js-big-decimal\";\n\nexport abstract class GradeResult implements Result {\n    readonly gradeResolver: GradeResolver;\n\n    protected constructor(gradeResolver: GradeResolver) {\n        this.gradeResolver = gradeResolver;\n    }\n\n    abstract message(): ReactNode\n\n    static create(gradeResolver: GradeResolver, assignments: Assignment[], threshStr: string, outOf: bigDecimal | null): Result {\n        return create(\n            assignments,\n            gradeResolver.gradeStrToNum(threshStr),\n            outOf,\n            (totalAchieved) => new AlreadyFinalGradeResult(gradeResolver, totalAchieved),\n            () => new InvalidGradeResult(gradeResolver,\n                threshStr === \"\" ? <span>Enter your desired grade above.</span> :\n                    <span>{HMM} the grade <b>{threshStr}</b> isn't valid.</span>\n            ),\n            (totalAchieved) => new AlreadyReachedGradeResult(gradeResolver, totalAchieved),\n            (requiredPercentage, requiredAchieved, theoreticalMaximum) =>\n                new CantReachGradeResult(gradeResolver, threshStr, theoreticalMaximum),\n            (requiredPercentage, requiredAchieved, totalWeightLeft) =>\n                new OkResult(requiredPercentage, requiredAchieved, totalWeightLeft)\n        )\n    }\n}\n\n\n\nclass InvalidGradeResult extends GradeResult {\n    readonly messageElement: ReactNode;\n\n    constructor(gradeResolver: GradeResolver, messageElement: React.ReactNode) {\n        super(gradeResolver);\n        this.messageElement = messageElement;\n    }\n\n    message(): ReactNode {\n        return this.messageElement == null ? null : <p>{this.messageElement}</p>;\n    }\n}\n\n\nexport class AlreadyFinalGradeResult extends InvalidGradeResult {\n    readonly totalAchieved: bigDecimal;\n\n    constructor(gradeResolver: GradeResolver, totalAchieved: bigDecimal) {\n        super(gradeResolver, null);\n        this.totalAchieved = totalAchieved;\n    }\n\n    message(): ReactNode {\n        return <p>Congratulations, you have already completed the course and achieved:</p>;\n    }\n\n    gradeStr(): string {\n        return this.gradeResolver.numToGradeStr(this.totalAchieved);\n    }\n}\n\nclass AlreadyReachedGradeResult extends InvalidGradeResult {\n    readonly totalAchieved: bigDecimal;\n\n    constructor(gradeResolver: GradeResolver, totalAchieved: bigDecimal) {\n        super(gradeResolver, null);\n        this.totalAchieved = totalAchieved;\n    }\n\n    message(): ReactNode {\n        return <p>Congratulations, you have already reached <b>{this.gradeResolver.numToGradeStr(this.totalAchieved)}</b>!</p>;\n    }\n}\n\nclass CantReachGradeResult extends InvalidGradeResult {\n    readonly threshStr: string;\n    readonly theoreticalMaximum: bigDecimal;\n\n    constructor(gradeResolver: GradeResolver, threshStr: string, theoreticalMaximum: bigDecimal) {\n        super(gradeResolver, null);\n        this.threshStr = threshStr;\n        this.theoreticalMaximum = theoreticalMaximum;\n    }\n\n    message(): ReactNode {\n        const gradeStr = this.gradeResolver.numToGradeStr(this.theoreticalMaximum);\n        if (this.threshStr.charAt(0))\n        return <p>Unfortunately, you can't achieve {a(this.threshStr)}.<br/>The maximum grade you can achieve\n            is {a(gradeStr, {articleOnly: true})} <b>{gradeStr}</b>.</p>;\n    }\n}\n\n\n","export const GITHUB_NEW_ISSUE_URL = \"https://github.com/isaacy2012/reverse-grade-calculator/issues/new\"\nexport const GITHUB_URL = \"https://github.com/isaacy2012/reverse-grade-calculator\"\n","import React, { Fragment, useMemo, useState } from \"react\";\nimport {Assignment} from \"../../model/Assignment\";\nimport Select, { components, createFilter } from 'react-select';\nimport {GRADE_RESOLVERS, LabelToGradeResolver} from \"../../model/grade/GradeResolvers\";\nimport AutosizeInput from \"react-input-autosize\";\nimport {InputChangeEvent} from \"../StyledInput\";\nimport {DEFAULT_OUT_OF} from \"../../constant/Constants\";\nimport {Display, H3, H3First, Hi, Or, State, UtilityText} from \"../helpers/Helpers\";\nimport {theme} from \"../../theme/Theme\";\nimport {AlreadyFinalGradeResult, GradeResult} from \"../../model/GradeResult\";\nimport {bd, OkResult} from \"../../model/Result\";\nimport {GITHUB_NEW_ISSUE_URL, GITHUB_URL} from \"../../Constants\";\nimport bigDecimal from \"js-big-decimal\";\n\n\nexport default function GradeTab(props: { assignments: Assignment[], outOfState: State<string>, currentGradeResolverPairState: State<LabelToGradeResolver | null> }) {\n    const assignments = props.assignments;\n\n    const [desiredGradeStr, setDesiredGradeStr] = useState(\"\");\n    const [outOfStr, setOutOfStr] = props.outOfState;\n    const [currentGradeResolverPair, setCurrentGradeResolverPair] = props.currentGradeResolverPairState;\n\n    const outOf: bigDecimal | null = useMemo(() => {\n        if (isNaN(parseFloat(outOfStr))) {\n            return null;\n        }\n        let converted = bd(parseFloat(outOfStr));\n        if (converted != null) {\n            return converted;\n        }\n        return null;\n    }, [outOfStr]);\n\n    const result = useMemo(() => {\n            if (currentGradeResolverPair != null) {\n                return GradeResult.create(currentGradeResolverPair.value, assignments, desiredGradeStr, outOf);\n            }\n            return null;\n        },\n        [currentGradeResolverPair, assignments, desiredGradeStr, outOf]\n    );\n\n    function NoOptionsMessage(props: any): JSX.Element {\n        return (\n            <components.NoOptionsMessage {... props}>\n                No schools found.\n                <br/>\n                <br/>\n                Make an <a\n                rel=\"noreferrer\" target=\"_blank\"\n                href={GITHUB_NEW_ISSUE_URL}>issue</a> or help contribute\n                on <a\n                rel=\"noreferrer\" target=\"_blank\"\n                href={GITHUB_URL}>GitHub</a> to Reverse Grade\n                Calculator to add your school!\n            </components.NoOptionsMessage>\n        )\n    }\n\n    if (result instanceof AlreadyFinalGradeResult) {\n        return (\n            <Fragment>\n                <H3First>Final Result</H3First>\n                {result.message()}\n                <Display><Hi enabled={true}>{result.gradeStr()}</Hi></Display>\n            </Fragment>\n        );\n    }\n\n    return(\n        <Fragment>\n            <H3First>Your School</H3First>\n            <Select\n                components={{ NoOptionsMessage }}\n                filterOption={createFilter({\n                    stringify: option => `${option.label} ${option.data.value.nicknames.join(\"\")}`\n                })}\n                options={GRADE_RESOLVERS}\n                value={currentGradeResolverPair}\n                onChange={opt => setCurrentGradeResolverPair(opt)}\n                theme={(selectTheme) => ({\n                    ...selectTheme,\n                    colors: {\n                        ...selectTheme.colors,\n                        primary: theme.color.highlight,\n                        primary75: theme.color.primary75,\n                        primary50: theme.color.primary50,\n                        primary25: theme.color.primary25\n                    }\n                })}\n            />\n            {result != null &&\n                <Fragment>\n                <H3>Desired Grade</H3>\n                <UtilityText>\n                    <AutosizeInput value={desiredGradeStr}\n                                   maxLength={4}\n                                   inputStyle={{\n                                       fontSize: \"3rem\",\n                                       fontWeight: 500,\n                                       border: \"none\",\n                                   }}\n                                   placeholder=\"––\"\n                                   onChange={(event: InputChangeEvent) =>\n                                       setDesiredGradeStr(currentGradeResolverPair?.value?.caseSensitive === false ?\n                                           event.target.value.trim().toUpperCase() :\n                                           event.target.value.trim()\n                                       )\n                                   }\n                    />\n                </UtilityText>\n                    <H3>Required Result</H3>\n                    {result.message()}\n                    {result instanceof OkResult &&\n                        <span>\n                <Display marginRight=\"2px\"><Hi\n                    enabled={true}>{result.requiredPercentageStr()}</Hi></Display><UtilityText>%</UtilityText>\n                <Or>  or  </Or>\n                <Display><Hi\n                    enabled={true}>{result.requiredAchievedStr()}</Hi><UtilityText>/</UtilityText></Display>\n                <AutosizeInput value={outOfStr}\n                               inputStyle={{\n                                   fontSize: \"3rem\",\n                                   fontWeight: 500,\n                                   border: \"none\",\n                               }}\n                               maxLength={5}\n                               type=\"numeric\"\n                               placeholder={DEFAULT_OUT_OF}\n                               onChange={(event: InputChangeEvent) =>\n                                   setOutOfStr(event.target.value.trim())\n                               }/>\n                </span>\n                    }\n                </Fragment>\n            }\n        </Fragment>\n    );\n}\n","import {Assignment, SerializableAssignment} from \"../model/Assignment\";\nimport styled from \"styled-components\";\nimport {useMemo, useState} from \"react\";\nimport {CardContainer} from \"./Card\";\nimport {HiOutlineClipboardCopy} from \"react-icons/hi\";\nimport {FixedIconButton} from \"./IconButton\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport {GradeResolver} from \"../model/grade/Grade\";\nimport { writeCompressedJSON } from \"../util/Serializer\";\nimport {H3} from \"./helpers/Helpers\";\nimport { JsonIntCode, JsonOptStr } from \"../util/JsonFields\";\n\nconst CopyInput = styled.input`\n  flex: 1;\n  border: solid 1px ${({theme}) => theme.color.outline};\n  padding: 10px;\n  border-radius: 5px;\n\n  &:focus {\n    border: solid 1px ${({theme}) => theme.color.text};\n    outline: none;\n  }\n`\n\nconst FlexDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n\nconst CopiedText = styled.p`\n  font-weight: bold;\n  margin-top: 0.75em;\n  margin-bottom: 0.5em;\n  color: ${({theme}) => theme.color.highlight};\n`\n\nfunction shareUrl(\n    title: string,\n    gradeResolver: GradeResolver | undefined,\n    assignments: Assignment[],\n    serializer: (a: SerializableAssignment) => [JsonOptStr, JsonOptStr, JsonOptStr] | [JsonOptStr, JsonOptStr, JsonIntCode.NoField]\n): string {\n    let params = new URLSearchParams();\n    params.append(\"s\", writeCompressedJSON(\n            title,\n            gradeResolver !== undefined ? gradeResolver.id : null,\n            assignments\n                .filter(it => it instanceof SerializableAssignment)\n                .map((it) => it as SerializableAssignment),\n            serializer\n        )\n    );\n    return \"https://\" + window.location.host + process.env.PUBLIC_URL + \"/?\" + params.toString();\n}\n\n\nexport default function ShareSheet(\n    props: {\n        title: string,\n        gradeResolver: GradeResolver | undefined,\n        assignments: Assignment[]\n    }\n) {\n    let { title, gradeResolver, assignments } = props;\n    const shareFullUrl = useMemo(() =>\n            shareUrl(title, gradeResolver, assignments, it => it.fullJSON()),\n        [title, gradeResolver, assignments]\n    )\n    const shareTemplateUrl = useMemo(() =>\n            shareUrl(title, gradeResolver, assignments, it => it.templateJSON()),\n        [title, gradeResolver, assignments]\n    )\n    const [copied, setCopied] = useState<string | null>(null);\n\n    return (\n        <CardContainer>\n            <H3 marginTop={\"0.25em\"}>Share Template with Scores</H3>\n            {copied === \"FULL\" &&\n            <CopiedText>Copied!</CopiedText>}\n            <FlexDiv>\n                <CopyInput readOnly value={shareFullUrl}/>\n                <CopyToClipboard\n                    text={shareFullUrl}\n                    onCopy={() => setCopied(\"FULL\")}\n                >\n                    <FixedIconButton><HiOutlineClipboardCopy/></FixedIconButton>\n                </CopyToClipboard>\n            </FlexDiv>\n            <H3>Share Template</H3>\n            {copied === \"TEMPLATE\" &&\n            <CopiedText>Copied!</CopiedText>}\n            <FlexDiv>\n                <CopyInput readOnly value={shareTemplateUrl}/>\n                <CopyToClipboard\n                    text={shareTemplateUrl}\n                    onCopy={() => setCopied(\"TEMPLATE\")}\n                >\n                    <FixedIconButton><HiOutlineClipboardCopy/></FixedIconButton>\n                </CopyToClipboard>\n            </FlexDiv>\n        </CardContainer>\n    )\n}\n","import styled from \"styled-components\";\nimport React, {Fragment, useCallback, useEffect, useState} from \"react\";\nimport {Instruction} from \"./Instruction\";\nimport Title from \"./Title\";\nimport Table from \"./Table\";\nimport {Assignment, SerializableAssignment} from \"../model/Assignment\";\nimport ContentRow from \"./ContentRow\";\nimport {Container} from \"./Container\";\nimport {InputChangeEvent, StyledInput} from \"./StyledInput\";\nimport Tabbed from \"./Tabbed\";\nimport Tab, {TextTabIcon} from \"./Tab\";\nimport PercentageTab from \"./output/PercentageTab\";\nimport GradeTab from \"./output/GradeTab\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport { writeCompressedJSON } from \"../util/Serializer\";\nimport {NoPaddingCard} from \"./Card\";\nimport {RiShareForward2Fill} from \"react-icons/ri\";\nimport ShareSheet from \"./ShareSheet\";\nimport {useIdleTimer} from \"react-idle-timer\";\nimport {GRADE_RESOLVERS_MAP, LabelToGradeResolver} from \"../model/grade/GradeResolvers\";\nimport { getSavedQueryStringAndParser } from \"../util/JsonFields\";\n\n\nconst TableHeader = styled(StyledInput)`\n  width: 100%;\n  font-size: 2em;\n  font-weight: bold;\n  border: none;\n`\n\nconst InvisibleButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  white-space: pre;\n  font-size: 1.1em;\n  //font-weight: 600;\n  margin: 0;\n  padding: 15px;\n  width: 100%;\n  background: none;\n  border: none;\n  border-radius: 10px;\n\n    // color: ${({theme}) => theme.color.outlineReject};\n`\n\nconst InvisibleLink = styled.a`\n    text-decoration: none;\n`\n\n// const dummyAssignments: Assignment[] = [\n//     Assignment.fromStrings(\"Assignment 1\", \"49/50\", \"0.025\", uuidv4().toString()),\n//     Assignment.fromStrings(\"Project 1\", \"98/100\", \"0.15\", uuidv4().toString()),\n//     Assignment.fromStrings(\"Assignment 2\", \"47/50\", \"0.025\", uuidv4().toString()),\n//     Assignment.fromStrings(\"Assignment 3\", \"40/40\", \"0.025\", uuidv4().toString()),\n//     Assignment.fromStrings(\"Project 2\", \"43/43\", \"0.15\", uuidv4().toString()),\n//     Assignment.fromStrings(\"Assignment 4\", \"24.5/30\", \"0.025\", uuidv4().toString()),\n// ]\n\nconst defaultAssignments: Assignment[] = []\n\n/**\n * getQuery from location for id string\n */\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function MainScreen() {\n    const [didLoad, setDidLoad] = useState<boolean>(false);\n    const [assignments, setAssignments] = useState<Assignment[]>([...defaultAssignments, Assignment.ofAdd()]);\n    const [shareExpanded, setShareExpanded] = useState<boolean>(false);\n    const [title, setTitle] = useState<string>(\"\");\n    const outOfState = useState(\"\");\n    const currentGradeResolverPairState = useState<LabelToGradeResolver | null>(null);\n    const [currentGradeResolverPair, setCurrentGradeResolverPair] = currentGradeResolverPairState;\n\n    const history = useHistory();\n\n    const [queryString, parser] = getSavedQueryStringAndParser(useQuery());\n    let fillSavedAssignments = useCallback(() => {\n        const gradeResolverId = currentGradeResolverPair?.value?.id;\n        const encodedCurrent = writeCompressedJSON(\n            title,\n            gradeResolverId !== undefined ? gradeResolverId : null,\n            assignments\n                .filter(it => it instanceof SerializableAssignment)\n                .map((it) => (it as SerializableAssignment)),\n            it => it.fullJSON()\n        );\n        if (queryString && queryString !== encodedCurrent) {\n            const loadedData = parser.parseCompressedJSON(queryString);\n            if (loadedData == null) {\n                alert(\"Sorry, we were unable to load saved data.\")\n                return;\n            }\n            setTitle(loadedData.title);\n            setAssignments([\n                ...loadedData.assignments,\n                Assignment.ofAdd()\n            ]);\n            const gradeResolverId = loadedData.gradeResolverId;\n            if (gradeResolverId != null) {\n                let gradeResolver = GRADE_RESOLVERS_MAP.get(gradeResolverId);\n                if (gradeResolver != null) {\n                    setCurrentGradeResolverPair({ label: gradeResolver.value.name, value: gradeResolver.value });\n                } else {\n                    let withoutGradeResolver = writeCompressedJSON(\n                        title,\n                        null,\n                        assignments\n                            .filter(it => it instanceof SerializableAssignment)\n                            .map((it) => (it as SerializableAssignment)),\n                        it => it.fullJSON()\n                    );\n                    let params = new URLSearchParams();\n                    params.append(\"s\", withoutGradeResolver);\n                    history.replace({search: params.toString()});\n                }\n            }\n        }\n    }, [currentGradeResolverPair?.value?.id, title, assignments, parser, queryString, setCurrentGradeResolverPair, history])\n\n    useEffect(() => {\n        if (!didLoad) {\n            fillSavedAssignments();\n            setDidLoad(true);\n        }\n    }, [didLoad, fillSavedAssignments]);\n\n    function saveAndPushData() {\n        // set to default url if no new data\n        if (title === \"\" && assignments.filter(it => it instanceof SerializableAssignment).length === 0) {\n            let params = new URLSearchParams();\n            history.replace({search: params.toString()});\n            return;\n        }\n\n        let gradeResolverId = currentGradeResolverPair?.value?.id;\n        let encodedCurrent = writeCompressedJSON(\n            title,\n            gradeResolverId !== undefined ? gradeResolverId : null,\n            assignments\n                .filter(it => it instanceof SerializableAssignment)\n                .map((it) => (it as SerializableAssignment)),\n            it => it.fullJSON()\n        );\n\n        if (queryString !== encodedCurrent) {\n            // refresh\n            let params = new URLSearchParams();\n            params.append(\"s\", encodedCurrent);\n            history.replace({search: params.toString()});\n        }\n    }\n\n    useIdleTimer({\n        timeout: 1000,\n        onIdle: saveAndPushData,\n        debounce: 500\n    })\n\n    function duplicateAssignment(index: number) {\n        setAssignments((currentAssignments) => {\n            let newArr = [...currentAssignments];\n            let assignmentToDuplicate = currentAssignments[index];\n            let newAssignment = assignmentToDuplicate.clone();\n            newArr.splice(index, 0, newAssignment);\n            return newArr;\n        });\n    }\n\n    function deleteAssignment(index: number) {\n        setAssignments((currentAssignments) => {\n            let newArr = [...currentAssignments];\n            newArr.splice(index, 1);\n            return newArr;\n        });\n    }\n\n    function updateAssignment(assignment: Assignment, index: number) {\n        if (assignments[index].equals(assignment)) {\n            // console.log(\"unfortunately, \" + JSON.stringify(assignments[index]) + \" was equal to \" + JSON.stringify(assignment))\n            return;\n        }\n        setAssignments((currentAssignments) => {\n            let newArr = [...currentAssignments];\n            newArr[index] = assignment;\n            return newArr;\n        });\n    }\n\n    function addRow() {\n        setAssignments((currentAssignments) => {\n            let newArr = [...currentAssignments];\n            newArr.push(Assignment.ofAdd());\n            return newArr;\n        });\n    }\n\n    return (\n        <Fragment>\n            <Container bottom=\"50px\">\n                <InvisibleLink href=\"/\"><Title>Reverse Grade Calculator</Title></InvisibleLink>\n                <Instruction>Enter your assignment information, then choose whether you want to reach\n                    a <b>percentage</b> or <b>grade</b>.</Instruction>\n            </Container>\n            <Table title={\n                <TableHeader\n                    value={title}\n                    onChange={(event: InputChangeEvent) => setTitle(event.target.value)}\n                    placeholder=\"Title\"/>\n            } headers={[\"ASSIGNMENT\", \"WEIGHT\", \"SCORE\"]}\n            hints={[\"\", \"%\", \"% or X/Y\"]}>\n                {assignments.map((value, index) => <ContentRow\n                    key={value.uuid}\n                    assignment={value}\n                    onChange={(assignment: Assignment) => updateAssignment(assignment, index)}\n                    onClick={index === assignments.length - 1 ? addRow : undefined}\n                    onDuplicate={() => duplicateAssignment(index)}\n                    onDelete={() => deleteAssignment(index)}\n                />)}\n            </Table>\n            <Container top=\"20px\">\n                <Tabbed defaultActiveTabName=\"REACH_PERCENTAGE\"\n                        headerNames={[\"REACH_PERCENTAGE\", \"REACH_GRADE\"]}\n                        headerElements={[<span><TextTabIcon>%</TextTabIcon> Reach a <b>percentage</b></span>,\n                            <span><TextTabIcon>A+</TextTabIcon> Reach a <b>grade</b></span>]}>\n                    <Tab tabName=\"REACH_PERCENTAGE\">\n                        {/*remove the last empty assignment (the add button)*/}\n                        <PercentageTab assignments={assignments.slice(0, -1)}\n                                       outOfState={outOfState}\n                        />\n                    </Tab>\n                    <Tab tabName=\"REACH_GRADE\">\n                        {/*remove the last empty assignment (the add button)*/}\n                        <GradeTab assignments={assignments.slice(0, -1)}\n                                  outOfState={outOfState}\n                                  currentGradeResolverPairState={currentGradeResolverPairState}\n                        />\n                    </Tab>\n                </Tabbed>\n            </Container>\n            <Container>\n                <NoPaddingCard marginTop=\"20px\">\n                    <InvisibleButton onClick={() => setShareExpanded((prev) => !prev)}>\n                        <RiShareForward2Fill/> SHARE\n                    </InvisibleButton>\n                    {shareExpanded &&\n                    <ShareSheet title={title} gradeResolver={currentGradeResolverPair?.value} assignments={assignments.slice(0, -1)}/>}\n                </NoPaddingCard>\n            </Container>\n            {/*{assignments.map((value, index) => <div key={index}><p>{value instanceof SerializableAssignment ? \"true\" + JSON.stringify(value.fullJSON()) : JSON.stringify(value)}</p></div>)}*/}\n        </Fragment>\n    );\n}\n","import { Assignment } from \"../../model/Assignment\";\nimport { V2Parser } from \"./V2Parser\";\n\nexport interface Parser {\n    parseCompressedJSON(json: string): {title: string, gradeResolverId: string | null, assignments: Assignment[]} | null\n}\n\nexport function getLatestParser(): Parser {\n    return V2Parser.getInstance();\n}\n","import React from 'react';\nimport styled, {ThemeProvider} from 'styled-components'\nimport '../css/App.css';\nimport {\n    BrowserRouter\n} from \"react-router-dom\";\nimport {theme} from '../theme/Theme';\nimport MainScreen from \"./MainScreen\";\nimport {GITHUB_NEW_ISSUE_URL} from \"../Constants\";\n\n\nconst FooterChild = styled.p`\n  position: absolute;\n  bottom: 5px;\n`\nconst LeftFooterChild = styled(FooterChild)`\n  left: 25px;\n`\n\nconst RightFooterChild = styled(FooterChild)`\n  text-align: right;\n  right: 25px;\n`\n\nconst Footer = styled.footer`\n    height: 80px;\n`\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <ThemeProvider theme={theme}>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <MainScreen/>\n                </BrowserRouter>\n                <Footer>\n                    <LeftFooterChild>\n                        <a\n                            rel=\"noreferrer\" target=\"_blank\"\n                            href={GITHUB_NEW_ISSUE_URL}>Report an Issue</a>\n                    </LeftFooterChild>\n                <RightFooterChild>Made by <a href=\"https://isaacy.dev\">Isaac Young</a></RightFooterChild>\n                </Footer>\n            </ThemeProvider>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './ui/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}